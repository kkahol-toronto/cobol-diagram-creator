  {
    "formatted_input": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    EXWWB911.\n       AUTHOR.        DAWN MAHN.\n       DATE-WRITTEN.  NOVEMBER 2011.\n       DATE-COMPILED.\n      * PROGRAM DESCRIPTION\n      * EXWWB911 IS A BATCH PROGRAM THAT IS DESIGNED TO EXTRACT VEHICLE\n      * DATA, DEALER DATA FROM VARIOUS DB2 TABLES WHICH ARE OWNED AND\n      * MAINTAINED BY GEVIS AND TO CREATE AN OUTBOUND BRIDGE FILE WHICH\n      * WHICH WILL BE USED BY MARKETING ASSOCIATES.\n      * PROGRAM PROCESSSING:\n      * THE PROGRAM WILL READ IN AN INPUT SYSPARM FILE WHICH WILL\n      * CONTAIN A LIST OF PRODUCERS TO BE PROCESSED.  IT WILL PROCESS\n      * ONE PRODUCER AT A TIME.  WHEN A PRODUCER IS FIRST READ IN, A\n      * DB2 CURSOR WILL BE OPENED WHICH DRIVES OFF OF TABLES MEXW001_\n      * VEH_ORDER AND MEWX008_VEH_RTL FOR FLEET SALES THAT HAVE BEEN\n      * UPDATED SINCE THE LAST RUN.  ONLY ROWS THAT ARE ASSOCIATED WITH\n      * A CURRENT WDMO DEALER WILL BE FURTHER PROCESSED AND OUTPUT\n      * TO THE OUTBOUND BRIDGE FILE.\n      * NOTE: THERE MAY BE INSTANCES WHERE SOME FIELDS EXTRACTED\n      * FROM THE GEVIS DB2 TABLES, MAY NOT BE POPULATED WITH DATA.\n      * IN THAT CASE, IF THE FIELD IS ALPHANUMERIC, SPACES WILL BE\n      * CONTAINED WITHIN THE CORRESPONDING OUTPUT FIELD AND IF THE\n      * FIELD IS NUMERIC, ZEROS WILL BE CONTAINED WITHIN THE COR-\n      * CORRESPONDING OUTPUT FIELD.\n      * NOTE: FILE FDEX.WW.PROD.EXWWB490.MKTASC.FLTSLS WILL BE PICKED\n      *       UP BY MARKETING ASSOCIATES USING FTP ID FDFTPMK.\n      *                       REVISION LOG\n      * DATE    : 12/12/2011  PROGRAMMER: DAWN MAHN\n      * ETRACKER: 10427340\n      * REASON  ; ORIGINAL PROGRAM CREATION.\n      * DATE    : 03/18/2013  PROGRAMMER: ESTES DAVIS\n      * ETRACKER: 11838861\n      * REASON  : CHANGE PROGRAM TO REMOVE THE CALL TO SUBROUTINE\n      *           EXWWSWER, IT IS  USE TO FORMAT THE WERS STRING\n      *           PROCESS\n      * DATE    : 05/20/2013  PROGRAMMER: DAWN MAHN\n      * ETRACKER: 11108662\n      * REASON  : IF STATUS ROW IS NOT FOUND ON MEXW027 FOR SOURCE VI,\n      *           THE JOB WILL END WITH CC3 AND AN EMAIL WILL BE SENT\n      *           TO THE GEVIS HELP DESK.  THE TRANSACTION WILL NOT BE\n      *           WRITTEN TO THE OUTPUT FILE.\n      * DATE    : 11/19/2015  PROGRAMMER: ESTES DAVIS                  *\n      * ETRACKER: 13836661 (13880434 EMERGENCY CODE DROP)              *\n      * REASON  : INCLUDED WERS PRODUCT TYPE TO                        *\n      *           5114P-SELECT-MEXW034-GEVIS-VL PARAGRAPH. ALSO,       *\n      *           INCLUDED VPT_PROD_TYP_C TO MEXW032_CATALOG           *\n      *           TABLE SQL CALL IN 5112P-SELECT-MEXW032-WERS-VL       *\n      *           PARAGRAPH.                                           *\n      * DATE    : 10/12/2017  PROGRAMMER: DAWN MAHN                    *\n      * ETRACKER: 15164314                                             *\n      * REASON  : CHANGE MEXW003_40V_CSR TO PULL ONLY THE FTC          *\n      *           WHOLESALE (VST_CUR_DATA_SRC_C = WD) INSTEAD          *\n      *           OF PULLING ANY WHOLESALE REGARDLESS OF SOURCE.       *\n       ENVIRONMENT DIVISION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT AUDIT-FILE           ASSIGN TO AUDIT.\n           SELECT SYSPARM-FILE         ASSIGN TO PARMFILE.\n           SELECT MKT-ASSOC-FILE       ASSIGN TO MKTASSOC.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  AUDIT-FILE.\n       01  AUDIT-RECORD.\n           05  AUDIT-LABEL             PIC X(30).\n           05  AUDIT-DATA              PIC X(50).\n       FD  SYSPARM-FILE.\n       01  SYSPARM-RECORD              PIC X(80).\n       FD  MKT-ASSOC-FILE.\n       01  MKT-ASSOC-RECORD            PIC X(1000).\n      *                 W O R K I N G   S T O R A G E                  *\n       WORKING-STORAGE SECTION.\n       77  PAN-VALET PICTURE X(24) VALUE \"070PEXWWB911 12/12/11\".\n      * WORKING STORAGE COPYBOOKS\n       COPY CPEWD001.\n      *MEXW001 TABLE LAYOUT\n       COPY CPEWD003.\n      *MEXW003 TABLE LAYOUT\n       COPY CPEWD004.\n      *MEXW004 TABLE LAYOUT\n       COPY CPEWD007.\n      *MEXW007 TABLE LAYOUT\n       COPY CPEWD008.\n      *MEXW008 TABLE LAYOUT\n       COPY CPESD016.\n      *MEXS016_GENERIC2\n       COPY CPEWD021.\n      *MEXW021 TABLE LAYOUT\n       COPY CPEWD027.\n      *MEXW027 TABLE LAYOUT\n       COPY CPEWD031.\n      *MEXW031 TABLE LAYOUT\n       COPY CPEWD032.\n      *MEXW032 TABLE LAYOUT\n       COPY CPEWD033.\n      *MEXW033 TABLE LAYOUT\n       COPY CPEWD034.\n      *MEXW034 TABLE LAYOUT\n       COPY CPEWD035.\n      *MEXW035 TABLE LAYOUT\n       COPY CPESDB2.\n      *SQLCA AND SQLCODES\n       COPY CPESGNTB.\n      *GENERIC TABLE LAYOUTS - EXSE SYSTEM\n       COPY CPEWGNTB.\n      *GENERIC TABLE LAYOUT  - EXWW SYSTEM\n       COPY CPESEBWS.\n      *BMPSHELL WORKING STORAGE\n       COPY CPEWSSTK.\n      *I/O PARAMETERS FOR SUBROUTINE EXWWSSTK\n      * WORKING STORAGE LITERALS\n       01 PROGRAM-LITERALS.\n           05  PL-00A                      PIC  X(03) VALUE \"00A\".\n           05  PL-001                      PIC  X(03) VALUE \"001\".\n           05  PL-010                      PIC  X(03) VALUE \"010\".\n           05  PL-10M                      PIC  X(03) VALUE \"10M\".\n           05  PL-20M                      PIC  X(03) VALUE \"20M\".\n           05  PL-20T                      PIC  X(03) VALUE \"20T\".\n           05  PL-30P                      PIC  X(03) VALUE \"30P\".\n           05  PL-30R                      PIC  X(03) VALUE \"30R\".\n           05  PL-30T                      PIC  X(03) VALUE \"30T\".\n           05  PL-40V                      PIC  X(03) VALUE \"40V\".\n           05  PL-80F                      PIC  X(03) VALUE \"80F\".\n           05  PL-90V                      PIC  X(03) VALUE \"90V\".\n           05  PL-025                      PIC  X(03) VALUE \"025\".\n           05  PL-185                      PIC  X(03) VALUE \"185\".\n           05  PL-190                      PIC  X(03) VALUE \"190\".\n           05  PL-600                      PIC  X(03) VALUE \"600\".\n           05  PL-800                      PIC  X(03) VALUE \"800\".\n           05  PL-801                      PIC  X(03) VALUE \"801\".\n           05  PL-999                      PIC  X(03) VALUE \"999\".\n           05  PL-TBL-VEH-STATUS           PIC X(18)\n                                           VALUE \"MEXW003_VEH_STATUS\".\n           05  PL-TBL-VEH-WHS              PIC X(18)\n                                           VALUE \"MEXW007_VEH_WHS   \".\n           05  PL-TBL-MEXW003-07           PIC X(18)\n                                           VALUE \"MEXW003/MEXW007   \".\n           05  PL-TBL-MEXW003-08           PIC X(18)\n                                           VALUE \"MEXW003/MEXW008   \".\n           05  PL-TBL-MEXW004              PIC X(18)\n                                           VALUE \"MEXW004_VEH_WERS_S\".\n           05  PL-TBL-VEH-RTL              PIC X(18)\n                                           VALUE \"MEXW008_VEH_RTL   \".\n           05  PL-TBL-GENERIC              PIC X(18)\n                                           VALUE \"MEXS016_GENERIC2  \".\n           05  PL-TBL-SUBLVL-ASG           PIC X(18)\n                                           VALUE \"MEXW021_SUBLVL_ASG\".\n           05  PL-TBL-CONV                 PIC X(18)\n                                           VALUE \"MEXW027_CONV      \".\n           05  PL-TBL-VL-BRAND             PIC X(18)\n                                           VALUE \"MEXW034_VL_BRAND  \".\n           05  PL-TBL-BODY-TYPE            PIC X(18)\n                                           VALUE \"MEXW033_BODY_TYPE \".\n           05  PL-TBL-DLR-MSTR             PIC X(18)\n                                           VALUE \"MEXW035_DLR_MSTR  \".\n           05  PL-TBL-CATMAP               PIC X(18)\n                                           VALUE \"MEXW031_CATMAP    \".\n           05  PL-TBL-CATALOG              PIC X(18)\n                                           VALUE \"MEXW032_CATALOG   \".\n           05  PL-SALE-CHK-CSR             PIC X(18)\n                                           VALUE \"SALE_CHK_CSR      \".\n           05  PL-DB2-DATE-MIN             PIC  X(10)\n                                           VALUE \"0001-01-01\".\n           05  PL-D                        PIC  X(01) VALUE \"D\".\n           05  PL-E                        PIC  X(01) VALUE \"E\".\n           05  PL-EX                       PIC  X(02) VALUE \"EX\".\n           05  PL-Y                        PIC  X(01) VALUE \"Y\".\n           05  PL-N                        PIC  X(01) VALUE \"N\".\n           05  PL-STATUS                   PIC  X(06) VALUE \"STATUS\".\n           05  PL-SYSTEM-ID                PIC  X(04) VALUE \"EXWW\".\n           05  PL-VEHLINE                  PIC  X(08) VALUE \"VEHLINE \".\n           05  PL-USD                      PIC  X(04) VALUE \"USD \".\n           05  PL-WDMSALEM                 PIC  X(08) VALUE \"WDMSALEM\".\n           05  PL-TABLE-ID                 PIC  X(08) VALUE \"SYSPARM \".\n           05  PL-KEY-DATA-TIMESTAMP       PIC  X(20) VALUE\n                                           \"EXWWB911TIMESTMP\".\n           05  PL-KEY-DATA-BATCHCTL        PIC  X(20) VALUE\n                                           \"EXWWB911BATCHCTL\".\n           05  PL-PGM-NAME                 PIC  X(08) VALUE \"EXWWB911\".\n           05  PL-SUBRTN-NAME              PIC  X(08) VALUE \"EXWWSSTK\".\n           05  PL-SYSTEM-CD                PIC  X(04) VALUE  \"EXWW\".\n           05  PL-LAYOUT-ID                PIC  X(20) VALUE\n                                           \"WGEVMKTASOCEXTOUT010\".\n           05  PL-PROCESS-ID               PIC  X(20) VALUE\n                                           \"GEVMKTASOCEXTOUT010\".\n           05  PL-ENTITY-CD                PIC  X(05) VALUE\n                                           \"EXPNG\".\n           05  PL-VEH-VIN-BLANK            PIC  X(17) VALUE\n                                           \"                 \".\n           05  PL-BS                       PIC  X(02) VALUE \"BS\".\n           05  PL-CA                       PIC  X(02) VALUE \"CA\".\n           05  PL-NA                       PIC  X(02) VALUE \"NA\".\n           05  PL-EA                       PIC  X(02) VALUE \"EA\".\n           05  PL-A4                       PIC  X(02) VALUE \"A4\".\n           05  PL-AB                       PIC  X(02) VALUE \"AB\".\n           05  PL-D-2                      PIC  X(02) VALUE \"D \".\n           05  PL-DB                       PIC  X(02) VALUE \"DB\".\n           05  PL-F1                       PIC  X(02) VALUE \"F1\".\n           05  PL-F2                       PIC  X(02) VALUE \"F2\".\n           05  PL-F3                       PIC  X(02) VALUE \"F3\".\n           05  PL-F4                       PIC  X(02) VALUE \"F4\".\n           05  PL-KI                       PIC  X(02) VALUE \"KI\".\n           05  PL-K5                       PIC  X(02) VALUE \"K5\".\n           05  PL-L2                       PIC  X(02) VALUE \"L2\".\n           05  PL-L4                       PIC  X(02) VALUE \"L4\".\n           05  PL-L5                       PIC  X(02) VALUE \"L5\".\n           05  PL-T                        PIC  X(01) VALUE \"T\".\n           05  PL-T-2                      PIC  X(02) VALUE \"T \".\n           05  PL-VI                       PIC  X(02) VALUE \"VI\".\n           05  PL-3                        PIC  X(01) VALUE \"3\".\n           05  PL-3-2                      PIC  X(02) VALUE \"3 \".\n           05  PL-4                        PIC  X(01) VALUE \"4\".\n           05  PL-4-2                      PIC  X(02) VALUE \"4 \".\n           05  PL-7                        PIC  X(01) VALUE \"7\".\n           05  PL-7-2                      PIC  X(02) VALUE \"7 \".\n           05  PL-WDM                      PIC  X(03) VALUE \"WDM\".\n           05  PL-SPACES                   PIC  X(02) VALUE \"  \".\n           05  PL-WD                       PIC  X(02) VALUE \"WD\".\n      * WORKING STORAGE SWITCHES\n       01  PROGRAM-SWITCHES.\n           05  PS-MEXW003-20T-SW           PIC X(01).\n               88 MEXW003-FOUND-20T        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-20T    VALUE \"N\".\n           05  PS-MEXW003-30P-SW           PIC X(01).\n               88 MEXW003-FOUND-30P        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-30P    VALUE \"N\".\n           05  PS-MEXW003-30R-SW           PIC X(01).\n               88 MEXW003-FOUND-30R        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-30R    VALUE \"N\".\n           05  PS-MEXW003-30T-SW           PIC X(01).\n               88 MEXW003-FOUND-30T        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-30T    VALUE \"N\".\n           05  PS-MEXW003-40V-SW           PIC X(01).\n               88 MEXW003-FOUND-40V        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-40V    VALUE \"N\".\n           05  PS-MEXW003-80F-SW           PIC X(01).\n               88 MEXW003-FOUND-80F        VALUE \"Y\".\n               88 MEXW003-NOT-FOUND-80F    VALUE \"N\".\n           05  PS-MEXW008-90V-SW           PIC X(01).\n               88 MEXW008-FOUND-90V        VALUE \"Y\".\n               88 MEXW008-NOT-FOUND-90V    VALUE \"N\".\n           05  PS-MEXW003-40V-CSR-ROW-FOUND\n                                           PIC X(01).\n               88 MEXW003-40V-CSR-ROW-FOUND\n                                           VALUE \"Y\".\n               88 MEXW003-40V-CSR-ROW-NOT-FOUND\n                                           VALUE \"N\".\n           05  PS-MEXW007-SW               PIC X(01).\n               88 MEXW007-FOUND            VALUE \"Y\".\n               88 MEXW007-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW008-SW               PIC X(01).\n               88 MEXW008-FOUND            VALUE \"Y\".\n               88 MEXW008-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW021-SW               PIC X(01).\n               88 MEXW021-FOUND            VALUE \"Y\".\n               88 MEXW021-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW027-SW               PIC X(01).\n               88 MEXW027-FOUND            VALUE \"Y\".\n               88 MEXW027-NOT-FOUND        VALUE \"N\".\n           05  WS-MEXW027-MULTIPLE-SW      PIC X(01).\n               88 MEXW027-MULTIPLE-FOUND   VALUE \"Y\".\n               88 MEXW027-MULTIPLE-NOT-FOUND\n                                           VALUE \"N\".\n           05  PS-MEXW031-SW               PIC X(01).\n               88 MEXW031-FOUND            VALUE \"Y\".\n               88 MEXW031-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW032-SW               PIC X(01).\n               88 MEXW032-FOUND            VALUE \"Y\".\n               88 MEXW032-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW033-SW               PIC X(01).\n               88 MEXW033-FOUND            VALUE \"Y\".\n               88 MEXW033-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW034-SW                PIC X(01).\n               88 MEXW034-FOUND            VALUE \"Y\".\n               88 MEXW034-NOT-FOUND        VALUE \"N\".\n           05  PS-MEXW035-SW               PIC X(01).\n               88 MEXW035-FOUND            VALUE \"Y\".\n               88 MEXW035-NOT-FOUND        VALUE \"N\".\n           05  PS-END-OF-SYSPARM-FILE      PIC X(01).\n               88 END-OF-SYSPARM-FILE      VALUE \"Y\".\n               88 NOT-END-OF-SYSPARM-FILE  VALUE \"N\".\n           05  PS-WDMO-DEALER              PIC X(01).\n               88 WDMO-DEALER              VALUE \"Y\".\n               88 NOT-WDMO-DEALER          VALUE \"N\".\n           05  PS-SEND-EMAIL               PIC X(01).\n               88 SEND-EMAIL               VALUE \"Y\".\n               88 NOT-SEND-EMAIL           VALUE \"N\".\n           05  PS-SALE-CHK-SW              PIC X(01).\n               88 SALE-CHK-FOUND           VALUE \"Y\".\n               88 SALE-CHK-NOT-FOUND       VALUE \"N\".\n           05  PS-WERS-STRING              PIC X(01).\n               88 WERS-STRING-FOUND-SW     VALUE \"Y\".\n               88 WERS-STRING-NOT-FOUND-SW VALUE \"N\".\n      * WORKING STORAGE VARIABLES\n       01  PROGRAM-VARIABLES.\n           05  PV-NBR-ROWS-READ-MEXW003    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW004    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW007    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW008    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-SALE-CHK   PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW021    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW027    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW031    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW032    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW033    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW034    PIC S9(9) COMP.\n           05  PV-NBR-ROWS-READ-MEXW035    PIC S9(9) COMP.\n           05  PV-NBR-SYSPARM-RECS-READ    PIC S9(9) COMP.\n           05  PV-NBR-EXWWSSTK-CALLS       PIC S9(9) COMP.\n           05  PV-NBR-EXWWSSTK-NOTFOUND-CALLS\n                                           PIC S9(9) COMP.\n           05  PV-NBR-MEXW027-NOTFOUND-CALLS\n                                           PIC S9(9) COMP.\n           05  PV-NBR-MEXW035-NOTFOUND-CALLS\n                                           PIC S9(9) COMP.\n           05  PV-NBR-OUTPUT-RECS-WRTN     PIC S9(9) COMP.\n           05  PV-COUNT-DTL-NBR            PIC S9(9) COMP.\n           05  PV-COUNT-LINE-NBR           PIC S9(9) COMP.\n           05  PV-PREV-RUN-TIMESTAMP       PIC X(26).\n           05  PV-PREV-BATCH-NBR           PIC 9(05).\n           05  PV-CURRENT-BATCH-NBR        PIC 9(05).\n           05  PV-CURR-DRBN-TIMESTAMP      PIC X(26).\n           05  PV-VEH-BDT-MDL-YR-Y         PIC 9(04).99.\n           05  PV-VEH-BDT-MDL-YR-Y-RDF\n               REDEFINES PV-VEH-BDT-MDL-YR-Y.\n               15 PV-VEH-BDT-MDL-YR-CC     PIC X(02).\n               15 PV-VEH-BDT-MDL-YR-YY     PIC X(02).\n               15 PV-VEH-BDT-MDL-YR-FILLE  PIC X(01).\n               15 PV-VEH-BDT-MDL-YR-QTR    PIC X(02).\n           05  PV-VST-GBL-LOC-C-REFORMAT   PIC 9(06).\n           05  PV-DLR-SUPER-DLR-C-REFORMAT PIC 9(06).\n           05  PV-DTL-VEH-GBL-DLR-C-REFORMAT\n                                           PIC 9(06).\n           05  PV-PROCESS-SQLCODE-EDIT     PIC +++++.\n           05  PV-VALID-VARIABLES.\n               10  PV-WERS-VL-C                PIC  X(02).\n                   88  PV-VALID-VEH-LINE-CDS   VALUE \"KI\", \"K5\", \"DB\".\n      * DO NOT PUT ANY COPYBOOKS WITH AN 01 LEVEL IN THIS SECTION. THIS*\n      * AREA IS USED STRICTLY FOR DATA TO BE SAVED IN THE CHKP AREA.   *\n       COPY CPEWHUB.\n      *E & G HUB HEADER/TRAILER LAYOUT\n      * RECORD LAYOUTS                                                 *\n       01  WS-SYSPARM-DETAIL.\n           05  WS-SYSPARM-DATA-SRC             PIC X(02).\n           05  FILLER                          PIC X(78).\n       01  WS-MKT-ASSOC-DETAIL-RECORD.\n           05  WS-DTL-HUB-LINE-NBR             PIC 9(06).\n           05  WS-DTL-HUB-REC-ID               PIC X(25).\n           05  WS-DTL-HUB-REC-ID-NBR REDEFINES\n               WS-DTL-HUB-REC-ID.\n               10  WS-DTL-REC-ID-ZEROS         PIC 9(16).\n               10  WS-DTL-REC-ID-NBR           PIC 9(09).\n           05  WS-DTL-HUB-REC-TYPE             PIC X(03).\n           05  WS-DTL-HUB-REC-SEQ-NBR          PIC 9(03).\n           05  WS-DTL-VIN-FULL-C               PIC X(17).\n           05  WS-DTL-DTA-DATA-SRC-C           PIC X(02).\n           05  WS-DTL-BDT-MDL-YR-Y             PIC X(02).\n           05  WS-DTL-GEVIS-VEH-LINE-C         PIC X(02).\n           05  WS-DTL-LCL-BDYTYP-C             PIC X(05).\n           05  WS-DTL-CUR-STA-STATUS-C         PIC X(03).\n           05  WS-DTL-VEH-DIVISION-C           PIC X(01).\n           05  WS-DTL-WMI-WMI-C                PIC X(03).\n           05  WS-DTL-LCL-PLT-C                PIC X(03).\n           05  WS-DTL-VWS-TOT-US-A             PIC S9(07)V99 COMP-3.\n           05  WS-DTL-VEH-GBL-DLR-C            PIC X(06).\n           05  WS-DTL-ORIG-VST-GBL-LOC-C       PIC X(06).\n           05  WS-DTL-CURR-VST-GBL-LOC-C       PIC X(06).\n           05  WS-DTL-SHIP-TO-DLR-C            PIC X(06).\n           05  WS-DTL-CURR-STOCKING-DLR-C      PIC X(06).\n           05  WS-DTL-CURR-DLR-C               PIC X(06).\n           05  WS-DTL-WDMO-FLEET-C             PIC X(05).\n           05  WS-DTL-VRS-LCL-FLEET-C          PIC X(06).\n           05  WS-DTL-VRS-CST-FIRST-N          PIC X(30).\n           05  WS-DTL-VRS-CST-MID-INIT-X       PIC X(01).\n           05  WS-DTL-VRS-CST-LAST-N           PIC X(30).\n           05  WS-DTL-VRS-CST-ADDR-1-X         PIC X(40).\n           05  WS-DTL-VRS-CST-ADD-DIV2-N       PIC X(40).\n           05  WS-DTL-VRS-CST-ADD-DIV1-C       PIC X(02).\n           05  WS-DTL-VRS-CST-POSTAL-C         PIC X(10).\n           05  WS-DTL-VRS-SALESPERSON-C        PIC X(11).\n           05  WS-DTL-VRS-TYP-LCL-CUST-C       PIC X(01).\n           05  WS-DTL-VEH-WDMO-ORD-TYP         PIC X(01).\n           05  WS-DTL-VEH-ORD-RCPT-Y           PIC X(08).\n           05  WS-DTL-VEH-SCHD-VST-TARGET-Y    PIC X(08).\n           05  WS-DTL-VEH-PRODUCE-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-RELEASE-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-ARRIVAL-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-INVOICE-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-STOCK-VST-STAT-Y     PIC X(08).\n           05  WS-DTL-VEH-RETAIL-VST-STAT-Y    PIC X(08).\n           05  WS-DTL-VEH-DELIVER-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-SLSRCPT-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-WARRANT-VST-STAT-Y   PIC X(08).\n           05  WS-DTL-VEH-CATALOG-C            PIC X(15).\n           05  WS-DTL-WERS-VEH-LINE-C          PIC X(02).\n           05  WS-DTL-WERS-BODY-STYLE-C        PIC X(03).\n           05  WS-DTL-WERS-BRAND-C             PIC X(01).\n           05  WS-DTL-VEH-PO-Y                 PIC X(08).\n           05  WS-DTL-VLN-GEVIS-VL-N           PIC X(40).\n           05  WS-DTL-FILLER-01                PIC X(550).\n           05  INPUT-OUTPUT-PARAMETERS           PIC X(4020).\n      * MAIN DRIVING CURSOR\n      * THIS CURSOR WILL BE USED TO JOIN THE MEXW001 AND MEXW008 TABLES\n      * TO GATHER FLEET SAMES DATA THAT WAS ADDED/UPDATED AFTER THE\n      * THE LAST RUN.\n      * NOTE: THE DATA SOURCE IS POPULATED FROM THE INPUT SYSPARM FILE.\n           EXEC SQL\n               DECLARE  SALE_CHK_CSR CURSOR FOR\n                SELECT  VEH.VEH_VIN_FULL_C\n                       ,VEH.VEH_ORD_ID_C\n                       ,VEH.DTA_DATA_SRC_C\n                       ,VEH.BDT_MDL_YR_Y\n                       ,VEH.WMI_WMI_C\n                       ,VEH.VEH_LCL_PLT_C\n                       ,VEH.VEH_LCL_BDYTYP_C\n                       ,VEH.VEH_GBL_ORD_DLR_C\n                       ,VEH.VEH_GBL_SHIP_TO_C\n                       ,VEH.VEH_ORD_RCPT_Y\n                       ,VEH.VEH_WDMO_FLEET_C\n                       ,VEH.VEH_WDMO_ORD_TYP\n                       ,VEH.VEH_CATALOG_C\n                       ,VEH.VEH_GBL_CATALOG_C\n                       ,VEH.VEH_PO_Y\n                       ,VEH.VEH_GEVIS_VL_C\n                       ,VEH.COUNTRY_ISO3_C\n                  FROM  MEXW001_VEH_ORDER VEH\n                       ,MEXW008_VEH_RTL   VRS\n                 WHERE  VRS.DTA_DATA_SRC_C = :VRS-DTA-DATA-SRC-C\n                   AND  VRS.VRS_UPDT_S     > :PV-PREV-RUN-TIMESTAMP\n                   AND  VRS.VRS_ACTIVE_F   = :PL-Y\n                   AND  VRS.VRS_TYP_LCL_CUST_C IN (:PL-F1,\n                                                   :PL-7,\n                                                   :PL-F2,\n                                                   :PL-3,\n                                                   :PL-F3,\n                                                   :PL-T,\n                                                   :PL-F4,\n                                                   :PL-4,\n                                                   :PL-L2,\n                                                   :PL-L4,\n                                                   :PL-D)\n                   AND  VEH.VEH_ORD_ID_C   = VRS.VEH_ORD_ID_C\n                   AND  VEH.DTA_DATA_SRC_C = VRS.DTA_DATA_SRC_C\n                   AND  VEH.VEH_VIN_FULL_C > :PL-VEH-VIN-BLANK\n                   AND  VEH.VEH_ACTIVE_F   = :PL-Y\n           END-EXEC\n      * THIS CURSOR WILL BE USED TO SELECT ONE ROW FROM TABLE MEXW031\n      * FOR NON 'NA' AND NON 'EA' DATA SOURCES.  THE RETRIEVED VALUES\n      * WILL BE USED IN PLACE OF THE LOCAL BODY STYLE CODE THAT WAS\n      * OBTAINED FROM TABLE MEXW001.\n           EXEC SQL\n               DECLARE  MEXW031_CSR CURSOR FOR\n               SELECT  OPT_OPTION_C\n                      ,VPT_PROD_TYP_C\n                 FROM  MEXW031_CATMAP\n                WHERE  DTA_DATA_SRC_C    = :CTM-DTA-DATA-SRC-C\n                  AND  CTM_LCL_CATALOG_C = :CTM-LCL-CATALOG-C\n                  AND  OFM_OPTION_FAM_C IN (:PL-BS, :PL-CA)\n                  OPTIMIZE FOR 1 ROW\n           END-EXEC\n      * THIS CURSOR IS BEING USED IN ORDER TO RETRIEVE THE ORIGINAL\n      * INVOICING DEALER FROM TABLE MEXW003 BY FETCHING THE NEWEST\n      * ROW CONTAINING A \"40V\" STATUS CODE AND A SENDING SOURCE OF WD.\n           EXEC SQL\n              DECLARE  MEXW003_40V_CSR CURSOR FOR\n               SELECT  VST_GBL_LOC_C\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C       = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C     = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C       = :VST-STA-STATUS-C\n                  AND  VST_ACTIVE_F       = :VST-ACTIVE-F\n                  AND  VST_STAT_TYP_C     = :VST-STAT-TYP-C\n                  AND  VST_CUR_DATA_SRC_C = :VST-CUR-DATA-SRC-C\r\n             ORDER BY  VST_STAT_Y  DESC\n                      ,VST_STATIC_ISRT_REC_S  DESC\r\n           END-EXEC\n      *            LINKAGE SECTION\n       LINKAGE SECTION.\n      *              P R O C E D U R E   D I V I S I O N               *\n       PROCEDURE DIVISION.\n      *                        M A I N L I N E                         *\n      * JOB WILL END WITH A RETURN-CODE 3 UNDER THE FOLLOWING          *\n      * CONDITIONS:                                                    *\n      *  1. IF AN ORDER-ID AND PRODUCTION SOURCES IS NOT FOUND (+100)  *\n      *     WHEN EXWWSSTK SUBROUTINE WAS CALLED.                       *\n      * AN EMAIL WILL BE SENT TO THE HELPDESK.                         *\n       0000P-MAINLINE.\n           PERFORM 0400P-INITIALIZE-OTHER\n           PERFORM 1000P-PROCESS UNTIL END-OF-SYSPARM-FILE\n           PERFORM 0700P-CONCLUDE-OTHER\n           IF SEND-EMAIL\n              MOVE 3 TO RETURN-CODE\n           END-IF\n           GOBACK\n           .\n      * PROGRAM SPECIFIC INITIALIZATION                                *\n       0400P-INITIALIZE-OTHER.\n           OPEN INPUT  SYSPARM-FILE\n                EXTEND AUDIT-FILE\n                OUTPUT MKT-ASSOC-FILE\n           SET NOT-END-OF-SYSPARM-FILE       TO TRUE\n           INITIALIZE  WS-MKT-ASSOC-DETAIL-RECORD\n                       PROGRAM-SWITCHES\n                       PROGRAM-VARIABLES\n           PERFORM 7000P-OBTAIN-DRBN-TIMESTAMP\n           PERFORM 7200P-SELECT-PRV-RUN-TIMESTAMP\n           MOVE GNT-ATTRIBUTE-DATA           TO PV-PREV-RUN-TIMESTAMP\n           PERFORM 7300P-GET-BATCH-NBR\n           MOVE GNT-ATTRIBUTE-DATA (1:5)     TO PV-PREV-BATCH-NBR\n           IF PV-PREV-BATCH-NBR = 99999\n              MOVE 0                         TO PV-PREV-BATCH-NBR\n           END-IF\n           COMPUTE PV-CURRENT-BATCH-NBR = PV-PREV-BATCH-NBR + 1\n           MOVE WHEN-COMPILED                TO SV-COMPILE-DATE-TIME\n           PERFORM 9100P-GET-CURRENT-DATE-TIME\n           PERFORM 9200P-WRITE-AUDIT-HEADER\n           PERFORM 8000P-GET-SYSPARM-RECORD\n           PERFORM 7400P-POPULATE-HUB-HEADER\n           .\n      * PROGRAM SPECIFIC CONCLUSION                                    *\n       0700P-CONCLUDE-OTHER.\n           PERFORM 7250P-UPDATE-TIMESTAMP\n           PERFORM 7350P-UPDATE-BATCH-NBR\n           PERFORM 7450P-POPULATE-HUB-TRAILER\n           PERFORM 6020P-WRITE-AUDIT-DETAIL\n           PERFORM 9100P-GET-CURRENT-DATE-TIME\n           PERFORM 9300P-WRITE-AUDIT-TRAILER\n           CLOSE SYSPARM-FILE\n                 AUDIT-FILE\n                 MKT-ASSOC-FILE\n           .\n      * MAIN DRIVING PARAGRAPH CALLED FROM 0000P-MAINLINE.  A LOOP WILL\n      * BE PERFORMED WHICH WILL PROCESS ALL VEHICLES FOR A PRODUCTION\n      * SOURCE.  AT THE END OF THE LOOP, THE NEXT PRODUCTION SOURCE\n      * WILL BE READ IN.\n       1000P-PROCESS.\n           PERFORM 2100P-OPEN-SALE-CHK-CSR\n           PERFORM 2120P-FETCH-SALE-CHK-CSR\n           PERFORM 2040P-PROCESS-SALE-CHK-CSR\n             UNTIL SALE-CHK-NOT-FOUND\n           PERFORM 2140P-CLOSE-SALE-CHK-CSR\n           PERFORM 8000P-GET-SYSPARM-RECORD\n           .\n      * THIS PARAGRAPH IS USED TO PROCESS ROWS SELECTED FROM THE\n      * SALE_CHK_CSR. FIRST, WE WILL VERIFY IF THE DEALER IS WDMO\n      * BASED AND IF IT IS, WE WILL THEN MOVE ALL DATA FOR THE\n      * VEHICLE TO THE OUTPUT RECORD.  AFTERWARDS, THE NEXT ROW WILL\n      * BE SELECTED FROM THE SALE_CHK_CSR.\n       2040P-PROCESS-SALE-CHK-CSR.\n           PERFORM 2050P-VERIFY-WDMO-DEALER\n           IF WDMO-DEALER AND SSTK-SUCCESSFUL\n              PERFORM 5000P-PROCESS-GEVIS-DETAIL-REC\n           END-IF\n           PERFORM 2120P-FETCH-SALE-CHK-CSR\n           .\n      * A CALL IS PLACED TO SUBROUTINE EXWWSSTK IN ORDER TO OBTAIN THE\n      * CURRENT STOCKING DEALER FOR A VEHICLE.  AFTERWARDS, USING THE\n      * CURRENT STOCKING DEALER (IF ONE WAS FOUND), A CALL WILL BE\n      * PLACED TO TABLE MEXW035 TO DETERMINE WHETHER OR NOT THE STOCK-\n      * ING DEALER IS WDMO BASED.\n       2050P-VERIFY-WDMO-DEALER.\n           PERFORM 2060P-CALL-EXWWSSTK\n           IF SSTK-SUCCESSFUL\n              MOVE SSTK-GBL-STK-DLR-C        TO\n                                              PV-VST-GBL-LOC-C-REFORMAT\n              MOVE PV-VST-GBL-LOC-C-REFORMAT TO DLR-DLR-DLR-C\n              PERFORM 5050P-GET-MEXW035-DATA\n              IF MEXW035-FOUND\n                 IF DLR-SUB-SUBLVL1-C  = PL-WDM\n                    SET WDMO-DEALER          TO TRUE\n                 ELSE\n                    SET NOT-WDMO-DEALER      TO TRUE\n                 END-IF\n              ELSE\n                 SET NOT-WDMO-DEALER         TO TRUE\n              END-IF\n           END-IF\n           .\n      * USING PRODUCTION SOURCE AND ORDER-ID, A CALL WILL NOW BE PLACED\n      * TO SUBROUTINE EXWWSSTK TO OBTAIN THE CURRENT STOCKING DEALER,\n      * CURRENT STOCKING DEALER STATUS CODE AND CURRENT STOCKING\n      * DEALER STATUS DATE.\n       2060P-CALL-EXWWSSTK.\n           INITIALIZE SSTK-I-O-DATA\n           SET SSTK-INQUIRY-MODE            TO TRUE\n           MOVE VEH-ORD-ID-C                TO SSTK-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C          TO SSTK-DTA-DATA-SRC-C\n           CALL  \"EXWWSSTK\"  USING SSTK-I-O-DATA\n           EVALUATE TRUE\n              WHEN SSTK-SUCCESSFUL\n                   ADD +1                   TO PV-NBR-EXWWSSTK-CALLS\n              WHEN SSTK-DB2-ERROR\n                   PERFORM 2070P-SSTK-FATAL-ERROR\n           END-EVALUATE\n           .\n      * THIS PARAGRAPH HANDLES THE FATAL ERROR TOMBSTONE FORMATTING OF\n      * THE CALL THAT WAS PLACED TO SUBROUTINE EXWWSSTK.\n       2070P-SSTK-FATAL-ERROR.\n           MOVE SPACES                      TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"PGM NAME: \"                TO AUDIT-LABEL\n           MOVE SSTK-PGM-ID                 TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"RET CODE: \"                TO AUDIT-LABEL\n           MOVE SSTK-RETURN-CD              TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"PARAGRAPH: \"               TO AUDIT-LABEL\n           MOVE SSTK-PARAGRAPH              TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE SPACES                      TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"TBL NAME1: \"               TO AUDIT-LABEL\n           MOVE SSTK-DB2-TABLE1             TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           IF SSTK-DB2-TABLE2 > SPACES\n              MOVE \"TBL NAME2: \"            TO AUDIT-LABEL\n              MOVE SSTK-DB2-TABLE2          TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-DB2-TABLE3 > SPACES\n              MOVE \"TBL NAME3: \"            TO AUDIT-LABEL\n              MOVE SSTK-DB2-TABLE3          TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-DB2-TABLE4 > SPACES\n              MOVE \"TBL NAME4: \"            TO AUDIT-LABEL\n              MOVE SSTK-DB2-TABLE4          TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-DB2-TABLE5 > SPACES\n              MOVE \"TBL NAME5: \"            TO AUDIT-LABEL\n              MOVE SSTK-DB2-TABLE5          TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           MOVE SPACES                      TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"HOST VAR1: \"               TO AUDIT-LABEL\n           MOVE SSTK-HOST-VAR1              TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           IF SSTK-HOST-VAR2 > SPACES\n              MOVE \"HOST VAR2: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR2           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR3 > SPACES\n              MOVE \"HOST VAR3: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR3           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR4 > SPACES\n              MOVE \"HOST VAR4: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR4           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR5 > SPACES\n              MOVE \"HOST VAR5: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR5           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR6 > SPACES\n              MOVE \"HOST VAR6: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR6           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR7 > SPACES\n              MOVE \"HOST VAR7: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR7           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           IF SSTK-HOST-VAR8 > SPACES\n              MOVE \"HOST VAR8: \"            TO AUDIT-LABEL\n              MOVE SSTK-HOST-VAR8           TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           MOVE SPACES                      TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"SQL CODE: \"                TO AUDIT-LABEL\n           MOVE SSTK-SQL-RETURN-CODE        TO PV-PROCESS-SQLCODE-EDIT\n           MOVE PV-PROCESS-SQLCODE-EDIT     TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           IF SSTK-SQL-WARNING > SPACES\n              MOVE \"SQL-WARN: \"             TO AUDIT-LABEL\n              MOVE  SSTK-SQL-WARNING        TO AUDIT-DATA\n              WRITE AUDIT-RECORD\n           END-IF\n           MOVE \"SQL-FUNC: \"                TO AUDIT-LABEL\n           MOVE SSTK-SQL-FUNCTION           TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"SQL-MSG1: \"                TO AUDIT-LABEL\n           MOVE  SSTK-SQL-MSG1              TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"SQL-MSG2: \"                TO AUDIT-LABEL\n           MOVE SSTK-SQL-MSG2               TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"SQL-MSG3: \"                TO AUDIT-LABEL\n           MOVE SSTK-SQL-MSG3               TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"SQL-MSG4: \"                TO AUDIT-LABEL\n           MOVE SSTK-SQL-MSG4               TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE SPACES                      TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           IF SSTK-SQL-RETURN-CODE = 100\n              SET SEND-EMAIL                TO TRUE\n              ADD +1 TO PV-NBR-EXWWSSTK-NOTFOUND-CALLS\n           ELSE\n              PERFORM 9999C-CALL-COREDUMP\n           END-IF\n           .\n      * OPENS THE SALES CHECK CURSOR WHICH RETRIEVES ALL SALES THAT\n      * HAVE OCCURRED SINCE THE LAST RUN.\n       2100P-OPEN-SALE-CHK-CSR.\n           MOVE WS-SYSPARM-DATA-SRC         TO VRS-DTA-DATA-SRC-C\n           MOVE PL-Y                        TO VRS-ACTIVE-F\n           EXEC SQL\n               OPEN SALE_CHK_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           IF  NOT SC-DB2-SQLCODE-OK\n               MOVE SQLCODE                 TO DB2-ABEND-SQLCODE\n               MOVE \"OPEN\"                  TO DB2-ABEND-FUNCTION\n               MOVE PL-SALE-CHK-CSR         TO DB2-ABEND-TABLE\n               MOVE DB2-ABEND-MSG           TO ABEND-MSG\n               MOVE \"2100P\"                 TO ABEND-PARAGRAPH\n               PERFORM 9999P-ABEND\n           END-IF\n           .\n      * FETCHES A ROW FROM THE SALES CHECK CURSOR WHICH RETRIEVES ALL\n      * SALES THAT HAVE OCCURRED SINCE THE LAST RUN.\n       2120P-FETCH-SALE-CHK-CSR.\n           EXEC SQL\n               FETCH  SALE_CHK_CSR\n                INTO  :VEH-VIN-FULL-C\n                     ,:VEH-ORD-ID-C\n                     ,:VEH-DTA-DATA-SRC-C\n                     ,:VEH-BDT-MDL-YR-Y\n                     ,:VEH-WMI-WMI-C\n                     ,:VEH-LCL-PLT-C\n                     ,:VEH-LCL-BDYTYP-C\n                     ,:VEH-GBL-ORD-DLR-C\n                     ,:VEH-GBL-SHIP-TO-C\n                     ,:VEH-ORD-RCPT-Y\n                     ,:VEH-WDMO-FLEET-C\n                     ,:VEH-WDMO-ORD-TYP\n                     ,:VEH-CATALOG-C\n                     ,:VEH-GBL-CATALOG-C\n                     ,:VEH-PO-Y\n                     ,:VEH-GEVIS-VL-C\n                     ,:VEH-COUNTRY-ISO3-C\n           END-EXEC\n           MOVE SQLCODE                    TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n              WHEN SC-DB2-SQLCODE-OK\n                   ADD +1                  TO PV-NBR-ROWS-READ-SALE-CHK\n                   SET SALE-CHK-FOUND      TO TRUE\n              WHEN SC-DB2-SQLCODE-END-OF-CURSOR\n                   SET SALE-CHK-NOT-FOUND  TO TRUE\n              WHEN OTHER\n                   MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                   MOVE \"FETCH\"            TO DB2-ABEND-FUNCTION\n                   MOVE PL-SALE-CHK-CSR    TO DB2-ABEND-TABLE\n                   MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                   MOVE \"2120P\"            TO ABEND-PARAGRAPH\n                   PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * CLOSES THE SALES CHECK CURSOR WHICH RETRIEVES ALL SALES THAT\n      * HAVE OCCURRED SINCE THE LAST RUN.\n       2140P-CLOSE-SALE-CHK-CSR.\n           EXEC SQL\n               CLOSE SALE_CHK_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           IF  NOT SC-DB2-SQLCODE-OK\n               MOVE SQLCODE                 TO DB2-ABEND-SQLCODE\n               MOVE \"CLOSE\"                 TO DB2-ABEND-FUNCTION\n               MOVE PL-SALE-CHK-CSR         TO DB2-ABEND-TABLE\n               MOVE DB2-ABEND-MSG           TO ABEND-MSG\n               MOVE \"2140P\"                 TO ABEND-PARAGRAPH\n               PERFORM 9999P-ABEND\n           END-IF\n           .\n      * AT THIS POINT, THE VEHICLE HAS BEEN IDENTIFED AS HAVING A\n      * CURRENT STOCKING DEALER THAT IS CLASSIFIED AS WDMO.  NOW, OTHER\n      * DATA WILL BE GATHERED FOR THE VEHICLE AND THEN MOVED AND\n      * WRITTEN TO THE OUTPUT FILE.\n       5000P-PROCESS-GEVIS-DETAIL-REC.\n           SET WERS-STRING-NOT-FOUND-SW     TO TRUE\n           INITIALIZE                          MEXW004-VEH-WERS-STRING\n                                               VWR-WERS-STRING-X-TEXT\n           MOVE VEH-DTA-DATA-SRC-C          TO VWR-DTA-DATA-SRC-C\n           MOVE VEH-ORD-ID-C                TO VWR-VEH-ORD-ID-C\n           PERFORM 7600P-SELECT-WERS-DATA-W004\n           MOVE PL-E                        TO WS-DTL-VEH-DIVISION-C\n           PERFORM 5020P-MOVE-MEXW001-TO-DTL\n           PERFORM 5060P-OBTAIN-RETAIL-DATA\n           PERFORM 5040P-MOVE-SSTK-CURRENT-TO-DTL\n           PERFORM 5080P-OBTAIN-WHOLESALE-DATA\n           PERFORM 5100P-OBTAIN-WERS-DATA\n           PERFORM 5120P-OBTAIN-MEXW003-20T\n           IF MEXW003-FOUND-20T\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-SCHD-VST-TARGET-Y\n              END-STRING\n           END-IF\n           PERFORM 5140P-OBTAIN-MEXW003-30R\n           IF MEXW003-FOUND-30R\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-PRODUCE-VST-STAT-Y\n              END-STRING\n           ELSE\n              PERFORM 5160P-OBTAIN-MEXW003-30P\n              IF MEXW003-FOUND-30P\n                 STRING VST-STAT-Y (1:4)\n                        VST-STAT-Y (6:2)\n                        VST-STAT-Y (9:2)\n                   DELIMITED BY SIZE\n                   INTO WS-DTL-VEH-PRODUCE-VST-STAT-Y\n                 END-STRING\n              END-IF\n           END-IF\n           PERFORM 5180P-OBTAIN-MEXW003-30T\n           IF MEXW003-FOUND-30T\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-RELEASE-VST-STAT-Y\n              END-STRING\n           END-IF\n           PERFORM 5200P-OBTAIN-MEXW003-80F\n           IF MEXW003-FOUND-80F\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-ARRIVAL-VST-STAT-Y\n              END-STRING\n           END-IF\n           PERFORM 5220P-OPEN-40V-CSR\n           PERFORM 5230P-FETCH-40V-ROW\n           IF MEXW003-40V-CSR-ROW-FOUND\n              MOVE VST-GBL-LOC-C           TO WS-DTL-ORIG-VST-GBL-LOC-C\n           END-IF\n           PERFORM 5240P-CLOSE-40V-CSR\n           IF   PV-COUNT-DTL-NBR  = 999999\n                MOVE ZERO                  TO PV-COUNT-DTL-NBR\n           END-IF\n           IF   PV-COUNT-LINE-NBR = 999999\n                MOVE ZERO                  TO PV-COUNT-LINE-NBR\n           END-IF\n           IF MEXW027-FOUND\n               INITIALIZE WS-DTL-HUB-REC-ID-NBR\n               ADD  +1                     TO PV-COUNT-DTL-NBR\n                                              PV-COUNT-LINE-NBR\n               MOVE PV-COUNT-LINE-NBR      TO WS-DTL-REC-ID-NBR\n                                              WS-DTL-HUB-LINE-NBR\n               MOVE PL-001                 TO WS-DTL-HUB-REC-SEQ-NBR\n               MOVE PL-010                 TO WS-DTL-HUB-REC-TYPE\n               MOVE WS-MKT-ASSOC-DETAIL-RECORD\n                                           TO MKT-ASSOC-RECORD\n               WRITE MKT-ASSOC-RECORD\n               ADD +1                      TO PV-NBR-OUTPUT-RECS-WRTN\n           END-IF\n           INITIALIZE  WS-MKT-ASSOC-DETAIL-RECORD\n           .\n      * DATA THAT WAS PREVIOUSLY FETCHED FROM TABLE MEXW001 WILL NOW\n      * BE MOVED TO THE OUTPUT RECORD.\n      * THE BODY STYLE INFORMATION WILL BE RETRIEVED FROM TABLE\n      * TABLE MEXW031_CATMAP FOR NON 'NA' AND NON 'EA' SOURCES.\n      * NOTE: IF THE NON 'NA' AND NON 'EA' SOURCES ARE NOT FOUND ON\n      * TABLE MEXW031, THEN WE WILL MOVE THE VEH-LCL-BDYTYP-C WHICH\n      * WAS RETRIEVED FROM TABLE MEXW001.\n      * THE MEXW031-CSR WHEN EXECUTED, BRINGS BACK ONE ROW.\n      * BODY STYLE - VWR-WERS-STRING-TEXT(10:2) IS THE WERS OPTION\n      *              CODE FOR BODY STYLE FROM TABLE MEXW004\n      * WHEN MEXW031-CSR IS EXECUTED, IT ONLY BRINGS BACK ONE ROW\n      * FOR PROCESSING.\n       5020P-MOVE-MEXW001-TO-DTL.\n           MOVE VEH-VIN-FULL-C              TO WS-DTL-VIN-FULL-C\n           MOVE VEH-DTA-DATA-SRC-C          TO WS-DTL-DTA-DATA-SRC-C\n           MOVE VEH-BDT-MDL-YR-Y            TO PV-VEH-BDT-MDL-YR-Y\n           MOVE PV-VEH-BDT-MDL-YR-YY        TO WS-DTL-BDT-MDL-YR-Y\n           MOVE VEH-WMI-WMI-C               TO WS-DTL-WMI-WMI-C\n           MOVE VEH-LCL-PLT-C               TO WS-DTL-LCL-PLT-C\n           IF  WERS-STRING-FOUND-SW\n               MOVE VWR-WERS-STRING-X-TEXT(10:2)\n                                            TO WS-DTL-LCL-BDYTYP-C\n           ELSE\n              PERFORM 5300P-OPEN-MEXW031-CSR\n              PERFORM 5320P-FETCH-MEXW031-CSR\n              PERFORM 5340P-CLOSE-MEXW031-CSR\n              IF MEXW031-FOUND\n                 MOVE CTM-OPT-OPTION-C      TO WS-DTL-LCL-BDYTYP-C\n              ELSE\n                 MOVE VEH-LCL-BDYTYP-C      TO WS-DTL-LCL-BDYTYP-C\n              END-IF\n           END-IF\n           MOVE VEH-GBL-ORD-DLR-C           TO DLR-DLR-DLR-C\n           PERFORM 5050P-GET-MEXW035-DATA\n           IF MEXW035-FOUND\n              IF DLR-SUPER-DLR-C = ZEROS\n                 MOVE SPACES                TO WS-DTL-VEH-GBL-DLR-C\n              ELSE\n                 MOVE DLR-SUPER-DLR-C       TO\n                      PV-DTL-VEH-GBL-DLR-C-REFORMAT\n                 MOVE PV-DTL-VEH-GBL-DLR-C-REFORMAT\n                                            TO WS-DTL-VEH-GBL-DLR-C\n              END-IF\n           ELSE\n              MOVE SPACES                   TO WS-DTL-VEH-GBL-DLR-C\n           END-IF\n      *    ----------------------------------------------------------\n      *    THE SHIP TO DEALER IS THE DEALER THAT WAS REPORTED AT THE\n      *    TIME OF THE ORDER, SO IF IT'S EQUAL TO SPACES, WE WILL USE\n      *    THE ORIGINAL ORDERING DEALER.\n      *    ----------------------------------------------------------\n           IF   VEH-GBL-SHIP-TO-C\n              > SPACES\n                MOVE VEH-GBL-SHIP-TO-C      TO WS-DTL-SHIP-TO-DLR-C\n           ELSE\n                MOVE WS-DTL-VEH-GBL-DLR-C   TO WS-DTL-SHIP-TO-DLR-C\n           END-IF\n           STRING VEH-ORD-RCPT-Y (1:4)\n                  VEH-ORD-RCPT-Y (6:2)\n                  VEH-ORD-RCPT-Y (9:2)\n             DELIMITED BY SIZE\n             INTO WS-DTL-VEH-ORD-RCPT-Y\n           END-STRING\n           MOVE VEH-WDMO-FLEET-C            TO WS-DTL-WDMO-FLEET-C\n           MOVE VEH-WDMO-ORD-TYP            TO WS-DTL-VEH-WDMO-ORD-TYP\n           MOVE VEH-GBL-CATALOG-C           TO WS-DTL-VEH-CATALOG-C\n           IF VEH-PO-Y > PL-DB2-DATE-MIN\n              STRING VEH-PO-Y (1:4)\n                     VEH-PO-Y (6:2)\n                     VEH-PO-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-PO-Y\n              END-STRING\n           END-IF\n           MOVE VEH-GEVIS-VL-C              TO WS-DTL-GEVIS-VEH-LINE-C\n           .\n      * THE CURRENT DEALER/STOCKING DEALER, CURRENT STATUS CODE AND\n      * CURRENT STATUS CODE DATE WERE RETRIEVED EARLIER.  NOW THE CUR-\n      * RENT VEHICLE'S STATUS CODE WILL BE USED TO OBTAIN THE VINCENT\n      * EQUIVALENT FROM TABLE MEXW027 USING \"VI\" AS THE PRODUCTION\n      * SOURCE.\n      * NOTE: DURING DEVELOPMENT OF THIS PROGRAM, IT WAS DECIDED TO\n      * INSERT GLOBAL/LOCAL CODES ON THE MEXW027 CONVERSION TABLE,\n      * WITH THE VALUES THAT VINCENT USES FOR THEIR VRULES PROCESSING.\n      * RATHER THAN HARD CODING THE VALUES IN THIS PROGRAM AND THE\n      * STORED PROCEDURE (EXWWGEVP), IT IS BETTER TO MAKE A DIRECT CALL\n      * TO THE TABLE WHERE THE CODES CAN BE MORE EASILY CHANGED, SHOULD\n      * A CHANGE ARISE IN THE FUTURE.\n      * A CHECK HAS BEEN ADDED TO SEND VINCENT A STATUS CODE OF 600\n      * INSTEAD OF 800 WHEN THERE ARE NO SALES TYPE OR SALES DATE\n      * AVAILABLE.\n       5040P-MOVE-SSTK-CURRENT-TO-DTL.\n           INITIALIZE PS-MEXW027-SW\n           MOVE SSTK-GBL-STK-DLR-C        TO\n                PV-VST-GBL-LOC-C-REFORMAT\n           MOVE PV-VST-GBL-LOC-C-REFORMAT TO DLR-DLR-DLR-C\n           PERFORM 5050P-GET-MEXW035-DATA\n           IF MEXW035-FOUND\n              IF DLR-SUPER-DLR-C = ZEROS\n                 MOVE SPACES              TO WS-DTL-CURR-STOCKING-DLR-C\n                      WS-DTL-CURR-DLR-C\n              ELSE\n                 MOVE DLR-SUPER-DLR-C     TO\n                      PV-DLR-SUPER-DLR-C-REFORMAT\n                 MOVE PV-DLR-SUPER-DLR-C-REFORMAT\n                                          TO\n                      WS-DTL-CURR-STOCKING-DLR-C\n                      WS-DTL-CURR-DLR-C\n              END-IF\n           ELSE\n              MOVE SPACES                 TO WS-DTL-CURR-STOCKING-DLR-C\n                                             WS-DTL-CURR-DLR-C\n           END-IF\n           IF WS-DTL-CURR-STOCKING-DLR-C > SPACES\n              STRING SSTK-CUR-STAT-Y (1:4)\n                     SSTK-CUR-STAT-Y (6:2)\n                     SSTK-CUR-STAT-Y (9:2)\n                  DELIMITED BY SIZE\n                INTO WS-DTL-VEH-STOCK-VST-STAT-Y\n              END-STRING\n           END-IF\n           IF SSTK-CUR-STAT-C > SPACES\n              PERFORM 5045P-SELECT-MEXW027-DATA\n              IF MEXW027-NOT-FOUND\n                 PERFORM 9050P-MISSING-MEXW027-ROW\n              END-IF\n              IF MEXW027-FOUND\n                 MOVE CNT-LCL-DATA-X (1:3)  TO WS-DTL-CUR-STA-STATUS-C\n              END-IF\n           END-IF\n           IF WS-DTL-CUR-STA-STATUS-C = PL-800\n              IF   VRS-TYP-LCL-CUST-C = PL-A4\n                   MOVE PL-801              TO WS-DTL-CUR-STA-STATUS-C\n              ELSE\n                 IF   WS-DTL-VRS-TYP-LCL-CUST-C     = SPACES\n                   OR WS-DTL-VEH-SLSRCPT-VST-STAT-Y = SPACES\n                      MOVE PL-600           TO WS-DTL-CUR-STA-STATUS-C\n                 END-IF\n              END-IF\n           END-IF\n           .\n      * THE VINCENT EQUIVALENT STATUS CODE WILL NOW BE OBTAINED FOR THE\n      * CURRENT STATUS CODE THAT WAS RETRIEVED FROM SUBROUTINE EXWWSSTK.\n      * SPECIAL NOTE:  WHEN ADDING ROWS TO TABLE MEXW027 FOR VINCENT,\n      * THE GLOBAL STATUS CODES MUST BE UNIQUE. THE FOLLOWING RULE\n      * ALSO APPLIES- THERE CAN EXIST ONE LOCAL STATUS CODE THAT CAN\n      * BE ASSIGNED TO SEVERAL DIFFERENT GLOBAL STATUS CODES (I.E.\n      * LOCAL CODE = 600 HAS MULTIPLE GLOBAL CODES OF 80J & 90U).\n       5045P-SELECT-MEXW027-DATA.\n           MOVE SSTK-CUR-STAT-C             TO CNT-GBL-DATA-X\n           MOVE PL-STATUS                   TO CNT-CND-CNV-TYP-C\n           MOVE PL-VI                       TO CNT-DTA-DATA-SRC-C\n           EXEC SQL\n               SELECT  CNT_LCL_DATA_X\n                 INTO :CNT-LCL-DATA-X\n                 FROM  MEXW027_CONV\n                WHERE  CND_CNV_TYP_C     = :CNT-CND-CNV-TYP-C\n                  AND  DTA_DATA_SRC_C    = :CNT-DTA-DATA-SRC-C\n                  AND  CNT_GBL_DATA_X    = :CNT-GBL-DATA-X\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW027\n                    SET MEXW027-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW027-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-CONV        TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5045P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n       5050P-GET-MEXW035-DATA.\n      * A CALL WILL BE PLACED TO TABLE MEXW035 IN EITHER OF TWO SIT-\n      * UATIONS.  1) TO OBTAIN THE SUPER DEALER CODE WHICH WILL BE\n      * USED IN PLACE OF THE GLOBAL ORDERING DEALER CODE AND/OR GLOBAL\n      * CURRENT STOCKING DEALER CODE.  2)  TO DETERMINE WHETHER OR NOT\n      * THE CURRENT STOCKING DEALER IS WDMO BASED.\n           EXEC SQL\n               SELECT\n                       SUB_SUBLVL1_C\n                      ,DLR_SUPER_DLR_C\n                 INTO :DLR-SUB-SUBLVL1-C\n                     ,:DLR-SUPER-DLR-C\n                 FROM  MEXW035_DLR_MSTR\n                WHERE  DLR_DLR_C           = :DLR-DLR-DLR-C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW035\n                    SET MEXW035-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW035-NOT-FOUND   TO TRUE\n                    PERFORM 9000P-MISSING-MEXW035-ROW\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-DLR-MSTR    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5050P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * A JOIN WILL BE DONE ON TABLES MEXW003 & MEXW008 TO OBTAIN\n      * VARIOUS RETAIL DATA (IF THE VEHICLE IS IN RETAIL STATUS).\n      * NOTE: THE RETAILED STATUS DATE WILL BE USED TO POPULATE THE\n      * DELIVERY DATE WHICH IS THE SAME.\n       5060P-OBTAIN-RETAIL-DATA.\n           PERFORM 5065P-SELECT-MEXW008-90V-DATA\n           IF MEXW008-FOUND-90V\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-RETAIL-VST-STAT-Y\n              END-STRING\n              MOVE WS-DTL-VEH-RETAIL-VST-STAT-Y\n                TO WS-DTL-VEH-DELIVER-VST-STAT-Y\n              PERFORM 5070P-POPULATE-RETAIL-OUTPUT\n           END-IF\n           .\n      * A JOIN WILL BE DONE ON TABLES MEXW003 & MEXW008 TO OBTAIN\n      * VARIOUS RETAILED DATA (IF THE VEHICLE HAS REACHED RETAIL STATUS)\n       5065P-SELECT-MEXW008-90V-DATA.\n           MOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\n           MOVE PL-90V                      TO VST-STA-STATUS-C\n           MOVE PL-Y                        TO VST-LAST-OCCUR-F\n                VST-ACTIVE-F\n           EXEC SQL\n               SELECT\n                       A.VST_STAT_Y\n                      ,B.VRS_LCL_FLEET_C\n                      ,B.VRS_CST_FIRST_N\n                      ,B.VRS_CST_BUS_1_N\n                      ,B.VRS_CST_BUS_2_N\n                      ,B.VRS_CST_MID_INIT_X\n                      ,B.VRS_CST_LAST_N\n                      ,B.VRS_CST_ADDR_1_X\n                      ,B.VRS_CST_ADD_DIV2_N\n                      ,B.VRS_CST_ADD_DIV1_C\n                      ,B.VRS_CST_POSTAL_C\n                      ,B.VRS_SALESPERSON_C\n                      ,B.VRS_TYP_LCL_CUST_C\n                      ,B.VRS_RPT_SALE_Y\n                      ,B.VRS_WARR_STRT_Y\n                 INTO  :VST-STAT-Y\n                      ,:VRS-LCL-FLEET-C\n                      ,:VRS-CST-FIRST-N\n                      ,:VRS-CST-BUS-1-N\n                      ,:VRS-CST-BUS-2-N\n                      ,:VRS-CST-MID-INIT-X\n                      ,:VRS-CST-LAST-N\n                      ,:VRS-CST-ADDR-1-X\n                      ,:VRS-CST-ADD-DIV2-N\n                      ,:VRS-CST-ADD-DIV1-C\n                      ,:VRS-CST-POSTAL-C\n                      ,:VRS-SALESPERSON-C\n                      ,:VRS-TYP-LCL-CUST-C\n                      ,:VRS-RPT-SALE-Y\n                      ,:VRS-WARR-STRT-Y\n                 FROM  MEXW003_VEH_STATUS A\n                      ,MEXW008_VEH_RTL B\n                WHERE  A.VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  A.DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  A.STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  A.VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  A.VST_ACTIVE_F      = :VST-ACTIVE-F\n                  AND  A.VST_ACTIVE_F      = B.VRS_ACTIVE_F\n                  AND  A.STA_STATUS_C      = B.STA_STATUS_C\n                  AND  A.VEH_ORD_ID_C      = B.VEH_ORD_ID_C\n                  AND  A.DTA_DATA_SRC_C    = B.DTA_DATA_SRC_C\n                  AND  SUBSTR(A.VST_LCL_LOC_C, 1,7)\n                                           = B.VRS_LCL_DLR_C\n                  AND  A.VST_STAT_Y        = B.VRS_RETAIL_Y\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW008\n                    SET MEXW008-FOUND-90V   TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW008-NOT-FOUND-90V TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-MEXW003-08  TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5065P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * IF A 90V STATUS WAS FOUND FOR THE VEHICLE, THEN VARIOUS RETAIL\n      * SALES DATA WILL BE MOVED TO CORRESPONDING OUTPUT FIELDS.  IF\n      * THE 90V STATUS WAS NOT FOUND FOR THE VEHICLE, THEN SPACES WILL\n      * BE MOVED TO THOSE OUTPUT FIELDS.\n      * PER CUSTOMER, IF CUSTOMER FIRST NAME & LAST NAME IS BLANK, THEN\n      * THE BUSINESS NAME WILL BE MOVED TO THE FIRST NAME FIELD\n       5070P-POPULATE-RETAIL-OUTPUT.\n           MOVE VRS-LCL-FLEET-C             TO WS-DTL-VRS-LCL-FLEET-C\n           IF    VRS-CST-FIRST-N = SPACES\n             AND VRS-CST-LAST-N  = SPACES\n                MOVE VRS-CST-BUS-1-N (1:30) TO WS-DTL-VRS-CST-FIRST-N\n                MOVE VRS-CST-BUS-2-N (1:30) TO WS-DTL-VRS-CST-LAST-N\n           ELSE\n                MOVE VRS-CST-FIRST-N       TO WS-DTL-VRS-CST-FIRST-N\n                MOVE VRS-CST-MID-INIT-X    TO WS-DTL-VRS-CST-MID-INIT-X\n                MOVE VRS-CST-LAST-N        TO WS-DTL-VRS-CST-LAST-N\n           END-IF\n           MOVE VRS-CST-ADDR-1-X           TO WS-DTL-VRS-CST-ADDR-1-X\n           MOVE VRS-CST-ADD-DIV2-N         TO WS-DTL-VRS-CST-ADD-DIV2-N\n           MOVE VRS-CST-ADD-DIV1-C         TO WS-DTL-VRS-CST-ADD-DIV1-C\n           MOVE VRS-CST-POSTAL-C           TO WS-DTL-VRS-CST-POSTAL-C\n           MOVE VRS-SALESPERSON-C          TO WS-DTL-VRS-SALESPERSON-C\n           PERFORM 5075P-POPULATE-CONCEPS-SLSTYP\n      *--- VEHICLE SALES RECEIPT DATE- IF IT EXISTS (> 0001-01-01)\n           IF VRS-RPT-SALE-Y > PL-DB2-DATE-MIN\n              STRING VRS-RPT-SALE-Y (1:4)\n                     VRS-RPT-SALE-Y (6:2)\n                     VRS-RPT-SALE-Y (9:2)\n                  DELIMITED BY SIZE\n                INTO WS-DTL-VEH-SLSRCPT-VST-STAT-Y\n              END-STRING\n           END-IF\n      *    ----------------------------------------------------------\n      *    IF VEHICLE WARRANTY START DATE DOES NOT EXIST (0001-01-01)\n      *    WE WILL USE THE RETAIL SALES DATE, IF THE RETAIL SALES\n      *    DATE EXISTS (> 0001-01-01).\n      *    ----------------------------------------------------------\n           IF   VRS-WARR-STRT-Y > PL-DB2-DATE-MIN\n                STRING VRS-WARR-STRT-Y (1:4)\n                       VRS-WARR-STRT-Y (6:2)\n                       VRS-WARR-STRT-Y (9:2)\n                   DELIMITED BY SIZE\n                    INTO WS-DTL-VEH-WARRANT-VST-STAT-Y\n                END-STRING\n           ELSE\n                IF VRS-RPT-SALE-Y  > PL-DB2-DATE-MIN\n                   MOVE WS-DTL-VEH-SLSRCPT-VST-STAT-Y\n                     TO WS-DTL-VEH-WARRANT-VST-STAT-Y\n                END-IF\n           END-IF\n           .\n      * THE GEVIS CUSTOMER TYPE CODE WILL BE CONVERTED TO A CONCEPS\n      * SALES TYPE CODE.\n       5075P-POPULATE-CONCEPS-SLSTYP.\n           EVALUATE VRS-TYP-LCL-CUST-C\n               WHEN PL-F1\n               WHEN PL-7-2\n                   MOVE PL-7               TO WS-DTL-VRS-TYP-LCL-CUST-C\n               WHEN PL-F2\n               WHEN PL-3-2\n                   MOVE PL-3               TO WS-DTL-VRS-TYP-LCL-CUST-C\n               WHEN PL-F3\n               WHEN PL-T-2\n                   MOVE PL-T               TO WS-DTL-VRS-TYP-LCL-CUST-C\n               WHEN PL-F4\n               WHEN PL-4-2\n                   MOVE PL-4               TO WS-DTL-VRS-TYP-LCL-CUST-C\n               WHEN PL-L2\n               WHEN PL-L4\n               WHEN PL-D-2\n                   MOVE PL-D               TO WS-DTL-VRS-TYP-LCL-CUST-C\n           END-EVALUATE\n           .\n      * TABLES MEXW003 & MEXW007 WILL BE JOINED IN ORDER TO OBTAIN\n      * VARIOUS WHOLESALE INFORMATION, IF THE VEHICLE HAS REACHED THAT\n      * STAGE.\n      * NOTE: THE VEHICLE TOTAL AMOUNT MUST BE IN UNITED STATES DOLLAR\n      * CURRENCY (USD).  IF IT IS NOT, THEN ZERO WILL BE MOVED TO THE\n      * FIELD.\n       5080P-OBTAIN-WHOLESALE-DATA.\n           PERFORM 5085P-SELECT-MEXW003-40V\n           IF MEXW003-FOUND-40V\n              MOVE VST-GBL-LOC-C           TO WS-DTL-CURR-VST-GBL-LOC-C\n              STRING VST-STAT-Y (1:4)\n                     VST-STAT-Y (6:2)\n                     VST-STAT-Y (9:2)\n                DELIMITED BY SIZE\n                INTO WS-DTL-VEH-INVOICE-VST-STAT-Y\n              END-STRING\n              IF VWS-CUR-CURRENCY-C = PL-USD\n                 MOVE VWS-TOT-LCL-A        TO WS-DTL-VWS-TOT-US-A\n              ELSE\n                 MOVE ZERO                 TO WS-DTL-VWS-TOT-US-A\n              END-IF\n           END-IF\n           .\n      * A JOIN ON TABLES MEXW003 & MEXW007 WILL BE DONE INTO ORDER TO\n      * RETRIEVE THE CURRENT INVOICE DEALER, THE INVOICING PREPARATION\n      * DATE, THE CURRENCY CODE AND THE VEHICLE TOTAL AMOUNT.\n       5085P-SELECT-MEXW003-40V.\n           MOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\n           MOVE PL-40V                      TO VST-STA-STATUS-C\n           MOVE PL-Y                        TO VST-LAST-OCCUR-F\n                VST-ACTIVE-F\n           EXEC SQL\n               SELECT A.VST_GBL_LOC_C\n                     ,A.VST_STAT_Y\n                     ,B.VWS_TOT_LCL_A\n                     ,B.CUR_CURRENCY_C\n                INTO  :VST-GBL-LOC-C\n                     ,:VST-STAT-Y\n                     ,:VWS-TOT-LCL-A\n                     ,:VWS-CUR-CURRENCY-C\n                FROM  MEXW003_VEH_STATUS A\n                     ,MEXW007_VEH_WHS B\n               WHERE  A.VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                 AND  A.DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                 AND  A.STA_STATUS_C      = :VST-STA-STATUS-C\n                 AND  A.VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                 AND  A.VST_ACTIVE_F      = :VST-ACTIVE-F\n                 AND  A.VST_ACTIVE_F      = B.VWS_ACTIVE_F\n                 AND  A.STA_STATUS_C      = B.STA_STATUS_C\n                 AND  A.VEH_ORD_ID_C      = B.VEH_ORD_ID_C\n                 AND  A.DTA_DATA_SRC_C    = B.DTA_DATA_SRC_C\n                 AND  A.VST_STAT_Y        = B.VWS_DATE_Y\n                 AND  SUBSTR(A.VST_LCL_LOC_C, 1,7)\n                                          = B.VWS_LCL_DLR_C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW007\n                    SET MEXW003-FOUND-40V   TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-40V TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-MEXW003-07    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5085P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * THE WERS VEHICLE LINE CODE WILL BE OBTAINED FROM TABLE MEXW034\n      * OR FROM TABLE MEXW004_WERS_VL_STRING.\n      * IF 'EA' OR 'NA' SOURCED, THE WERS VEHICLE LINE IS OBTAINED FROM\n      * MEXW034 DB2 TABLE USING THE PROD SOURCE AND GEVIS VEHICLE LINE,\n      * WHICH WAS OBTAINED FROM MEXW001 DB2 TABLE.\n      * FOR ALL OTHER SOURCES, IF THE ORDER IS FOUND ON MEXW004 DB2\n      * TABLE, USE THE WERS VEHICLE LINE FROM MEXW004 DB2 TABLE AND\n      * GEVIS VEHICLE LINE FROM MEXW034 DB2 TABLE WERS PRODUCT TYPE CODE\n      * AND WERS BODY USE TO MAKE UP THE WERS BODY STYLE.\n      * IF NOT FOUND ON MEXW004 DB2 TABLE, USE WERS VEHICLE LINE\n      * FROM MEXW0032 (CATALOG CODE), PRODUCT TYPE AND WERS BODY USE\n      * TO MAKE UP WERS BODY STYLE.\n      * IF NOT FOUND ON MEXW004 OR MEXW031/MEXW032 DB2 TABLES, WE ARE\n      * ASSUMING THE ORDER IS FROM HISTORY FOR 'NA' AND 'EA', USE\n      * MEXW034 DB2 TABLE PRODUCT TYPE CODE AND BODY TYPE FROM MEXW033\n      * USE TO MAKE UP THE BODY STYLE.\n       5100P-OBTAIN-WERS-DATA.\n           SET MEXW034-NOT-FOUND             TO TRUE\n           IF VEH-DTA-DATA-SRC-C = PL-EA OR PL-NA\n              IF VEH-GEVIS-VL-C  > PL-SPACES\n                 PERFORM 5110P-SELECT-W034-DATA\n              END-IF\n              IF MEXW034-FOUND\n                 MOVE VLN-WERS-VL-C          TO  WS-DTL-WERS-VEH-LINE-C\n                 MOVE VLN-WERS-BRAND-C (2:1) TO WS-DTL-WERS-BRAND-C\n                 MOVE VLN-GEVIS-VL-N         TO WS-DTL-VLN-GEVIS-VL-N\n              END-IF\n           ELSE\n               IF  WERS-STRING-FOUND-SW\n                   PERFORM 5102P-WERS-STRING-PROCESS\n               ELSE\n                   PERFORM 5112P-SELECT-MEXW032-WERS-VL\n                   IF  MEXW032-FOUND\n                       PERFORM 5104P-CATALOG-CODE-PROCESS\n                   END-IF\n               END-IF\n           END-IF\n           MOVE SPACES                      TO WS-DTL-WERS-BODY-STYLE-C\n           IF  WERS-STRING-FOUND-SW\n               STRING VWR-WERS-PRD-TP-C\n                    , VWR-WERS-STRING-X-TEXT(10:2)\n                        DELIMITED BY SIZE INTO WS-DTL-WERS-BODY-STYLE-C\n               END-STRING\n           ELSE\n               IF  MEXW031-FOUND\n                   STRING CTM-VPT-PROD-TYP-C\n                        , CTM-OPT-OPTION-C\n                        DELIMITED BY SIZE INTO WS-DTL-WERS-BODY-STYLE-C\n                   END-STRING\n               ELSE\n                   IF  VEH-DTA-DATA-SRC-C  =  PL-EA   OR  PL-NA\n                       PERFORM 5115P-SELECT-MEXW033-DATA\n                       IF  MEXW033-FOUND\n                           IF  BDT-WERS-BDY-TYP-C  >  SPACES\n                               STRING VLN-WERS-PRD-TP-C\n                                    , BDT-WERS-BDY-TYP-C\n                               DELIMITED BY SIZE\n                                          INTO WS-DTL-WERS-BODY-STYLE-C\n                              END-STRING\n                           END-IF\n                       END-IF\n                   END-IF\n               END-IF\n           END-IF\n           .\n      * PROCESS FEATURE DATA FROM WERS STRING W004 TABLE\n      * EVALUATE WERS VEHICLE LINE.  THESE ARE HANDLED AS\n      * EXEPTIONS AS THEY CAN APPEAR MUTIPLE TIMES FOR\n      * DIFFERENT GEVIS VEHICLE LINES.\n       5102P-WERS-STRING-PROCESS.\n           MOVE VWR-WERS-VL-C               TO PV-WERS-VL-C\n           IF  PV-VALID-VEH-LINE-CDS\n               PERFORM 5110P-SELECT-W034-DATA\n               EVALUATE VWR-WERS-VL-C\n                   WHEN PL-KI\n                   WHEN PL-K5\n                        MOVE PL-L5          TO VLN-GEVIS-VL-C\n                        MOVE PL-AB          TO VLN-WERS-BRAND-C\n                        SET MEXW034-FOUND   TO TRUE\n                   WHEN PL-DB\n                        MOVE PL-DB          TO VLN-GEVIS-VL-C\n                        MOVE PL-AB          TO VLN-WERS-BRAND-C\n                        SET MEXW034-FOUND   TO TRUE\n               END-EVALUATE\n           ELSE\n               PERFORM 5110P-SELECT-W034-DATA\n           END-IF\n           IF  VLN-GEVIS-VL-N = LOW-VALUES\n               MOVE SPACES TO VLN-GEVIS-VL-N\n           END-IF\n           IF  MEXW034-FOUND\n               MOVE VLN-GEVIS-VL-C          TO WS-DTL-GEVIS-VEH-LINE-C\n               MOVE VWR-WERS-VL-C           TO WS-DTL-WERS-VEH-LINE-C\n               MOVE VLN-WERS-BRAND-C (2:1)  TO WS-DTL-WERS-BRAND-C\n               MOVE VLN-GEVIS-VL-N          TO WS-DTL-VLN-GEVIS-VL-N\n           ELSE\n               MOVE VEH-GEVIS-VL-C          TO WS-DTL-GEVIS-VEH-LINE-C\n               MOVE VWR-WERS-VL-C           TO WS-DTL-WERS-VEH-LINE-C\n               MOVE SPACES                  TO WS-DTL-WERS-BRAND-C\n               MOVE SPACES                  TO WS-DTL-VLN-GEVIS-VL-N\n           END-IF\n           .\n      * PROCESS CATALOG CODE\n      * EVALUATE CATALOG CODE VEHICLE LINE.  THESE ARE HANDLED AS\n      * EXEPTIONS AS THEY CAN APPEAR MUTIPLE TIMES FOR\n      * DIFFERENT GEVIS VEHICLE LINES.\n       5104P-CATALOG-CODE-PROCESS.\n           MOVE CTG-VHL-VEH-LINE-C          TO PV-WERS-VL-C\n           IF  PV-VALID-VEH-LINE-CDS\n               PERFORM 5114P-SELECT-MEXW034-GEVIS-VL\n               EVALUATE CTG-VHL-VEH-LINE-C\n                   WHEN PL-KI\n                   WHEN PL-K5\n                        MOVE PL-L5          TO VLN-GEVIS-VL-C\n                        MOVE PL-AB          TO VLN-WERS-BRAND-C\n                        SET MEXW034-FOUND   TO TRUE\n                   WHEN PL-DB\n                        MOVE PL-DB          TO VLN-GEVIS-VL-C\n                        MOVE PL-AB          TO VLN-WERS-BRAND-C\n                        SET MEXW034-FOUND   TO TRUE\n               END-EVALUATE\n           ELSE\n                PERFORM 5114P-SELECT-MEXW034-GEVIS-VL\n           END-IF\n           IF MEXW034-FOUND\n                MOVE VLN-GEVIS-VL-C         TO WS-DTL-GEVIS-VEH-LINE-C\n                MOVE CTG-VHL-VEH-LINE-C     TO WS-DTL-WERS-VEH-LINE-C\n                MOVE VLN-WERS-BRAND-C (2:1) TO WS-DTL-WERS-BRAND-C\n                MOVE VLN-GEVIS-VL-N         TO WS-DTL-VLN-GEVIS-VL-N\n           END-IF\n           .\n      * RETRIEVES THE WERS VEHICLE LINE DATA USING THE GEVIS VEHICLE\n      * LINE CODE AND PRODUCTION SOURCE.\n      * NOTE: THIS ONLY APPLIES TO 'NA' AND 'EA' DATA SOURCES.\n       5110P-SELECT-W034-DATA.\n           MOVE VEH-DTA-DATA-SRC-C          TO VLN-DTA-DATA-SRC-C\n           MOVE VEH-GEVIS-VL-C              TO VLN-GEVIS-VL-C\n           MOVE PL-Y                        TO VLN-ACTIVE-F\n           EXEC SQL\n               SELECT   VLN_WERS_VL_C\n                       ,VLN_WERS_PRD_TP_C\n                       ,VLN_WERS_BRAND_C\n                       ,VLN_GEVIS_VL_N\n                 INTO  :VLN-WERS-VL-C\n                      ,:VLN-WERS-PRD-TP-C\n                      ,:VLN-WERS-BRAND-C\n                      ,:VLN-GEVIS-VL-N\n                 FROM  MEXW034_VL_BRAND\n                WHERE  DTA_DATA_SRC_C    = :VLN-DTA-DATA-SRC-C\n                  AND  VLN_GEVIS_VL_C    = :VLN-GEVIS-VL-C\n                  AND  VLN_ACTIVE_F      = :VLN-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW034\n                    SET MEXW034-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW034-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VL-BRAND    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5110P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * BY USING THE DATA OBTAINED FROM TABLE MEXW001 IN THE WHERE\n      * CLAUSE, THE WERS VEHICLE LINE WILL NOW BE SELECTED.\n      * NOTE: THIS ONLY APPLIES TO NON 'NA' AND NON 'EA' DATA SOURCES.\n       5112P-SELECT-MEXW032-WERS-VL.\n           MOVE VEH-DTA-DATA-SRC-C          TO CTG-DTA-DATA-SRC-C\n           MOVE VEH-CATALOG-C               TO CTG-LCL-CATALOG-C\n           EXEC SQL\n             SELECT  VHL_VEH_LINE_C\n                   , VPT_PROD_TYP_C\n               INTO :CTG-VHL-VEH-LINE-C\n                   ,:CTG-VPT-PROD-TYP-C\n               FROM  MEXW032_CATALOG\n              WHERE DTA_DATA_SRC_C    =  :CTG-DTA-DATA-SRC-C\n                AND CTG_LCL_CATALOG_C =  :CTG-LCL-CATALOG-C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW032\n                    SET MEXW032-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW032-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-CATALOG     TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5112P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * RETRIEVES THE GEVIS VEHICLE LINE DATA USING THE DATA SOURCE AND\n      * WERS VEHICLE LINE CODE.\n      * NOTE: THIS ONLY APPLIES TO NON 'NA' AND NON 'EA' DATA SOURCES.\n       5114P-SELECT-MEXW034-GEVIS-VL.\n           MOVE VEH-DTA-DATA-SRC-C          TO VLN-DTA-DATA-SRC-C\n           MOVE CTG-VHL-VEH-LINE-C          TO VLN-WERS-VL-C\n           MOVE CTG-VPT-PROD-TYP-C          TO VLN-WERS-PRD-TP-C\n           MOVE PL-Y                        TO VLN-ACTIVE-F\n           EXEC SQL\n              SELECT  VLN_GEVIS_VL_C\n                     ,VLN_WERS_PRD_TP_C\n                     ,VLN_WERS_BRAND_C\n                     ,VLN_GEVIS_VL_N\n                INTO :VLN-GEVIS-VL-C\n                    ,:VLN-WERS-PRD-TP-C\n                    ,:VLN-WERS-BRAND-C\n                    ,:VLN-GEVIS-VL-N\n                FROM  MEXW034_VL_BRAND\n               WHERE  DTA_DATA_SRC_C    = :VLN-DTA-DATA-SRC-C\n                 AND  VLN_WERS_VL_C     = :VLN-WERS-VL-C\n                 AND  VLN_ACTIVE_F      = :VLN-ACTIVE-F\n                 AND  VLN_WERS_PRD_TP_C = :VLN-WERS-PRD-TP-C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW034\n                    SET MEXW034-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW034-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VL-BRAND    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5114P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * BY USING THE DATA OBTAINED FROM TABLE MEXW001 IN THE WHERE\n      * CLAUSE, THE WERS BODY TYPE WILL NOW BE OBTAINED.\n       5115P-SELECT-MEXW033-DATA.\n           MOVE VEH-DTA-DATA-SRC-C          TO BDT-PROD-SRC-C\n           MOVE VEH-BDT-MDL-YR-Y            TO BDT-START-YR-R\n                                               BDT-END-YR-R\n           MOVE VEH-LCL-BDYTYP-C            TO BDT-BDY-TYP-C\n           EXEC SQL\n               SELECT  BDT_WERS_BDY_TYP_C\n                 INTO :BDT-WERS-BDY-TYP-C\n                 FROM  MEXW033_BODY_TYPE\n                WHERE  BDT_PROD_SRC_C  = :BDT-PROD-SRC-C\n                  AND  BDT_BDY_TYP_C   = :BDT-BDY-TYP-C\n                  AND  BDT_START_YR_R <= :BDT-START-YR-R\n                  AND  BDT_END_YR_R   >= :BDT-END-YR-R\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW033\n                    SET MEXW033-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW033-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-BODY-TYPE   TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5115P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * A ROW CONTAINING THE MOST RECENT 20T STATUS CODE WHICH CONSISTS\n      * OF THE DATE THAT THE VEHICLE WAS PRODUCED WILL BE RETRIEVED.\n       5120P-OBTAIN-MEXW003-20T.\n           MOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\n           MOVE PL-20T                        TO VST-STA-STATUS-C\n           MOVE PL-Y                          TO VST-LAST-OCCUR-F\n                                                 VST-ACTIVE-F\n           EXEC SQL\n               SELECT  VST_STAT_Y\n                 INTO :VST-STAT-Y\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  VST_ACTIVE_F      = :VST-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                       TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                    TO\n                    PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-FOUND-20T     TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-20T TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5120P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * RETRIEVES THE MOST RECENT 30R STATUS CODE WHICH CONSISTS OF THE\n      * DATE THAT THE VEHICLE WAS PRODUCED AND PASSED THE PLANT INSPEC-\n      * TION. IF NOT FOUND, THEN A 30P STATUS CODE WILL BE SELECTED.\n      * THE 30P CONSISTS OF THE DATE THAT THE VEHICLE WAS PRODUCED, BUT\n      * INSPECTION DID NOT OCCUR.\n       5140P-OBTAIN-MEXW003-30R.\n           MOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\n           MOVE PL-30R                        TO VST-STA-STATUS-C\n           MOVE PL-Y                          TO VST-LAST-OCCUR-F\n                                                 VST-ACTIVE-F\n           EXEC SQL\n               SELECT  VST_STAT_Y\n                 INTO :VST-STAT-Y\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  VST_ACTIVE_F      = :VST-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                       TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                    TO\n                    PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-FOUND-30R     TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-30R TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5140P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * RETRIEVES THE MOST RECENT 30P STATUS CODE WHICH CONSISTS OF THE\n      * DATE THAT THE VEHICLE WAS PRODUCED, BUT NOT INSPECTED.\n       5160P-OBTAIN-MEXW003-30P.\n           MOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\n           MOVE PL-30P                        TO VST-STA-STATUS-C\n           MOVE PL-Y                          TO VST-LAST-OCCUR-F\n                                                 VST-ACTIVE-F\n           EXEC SQL\n               SELECT  VST_STAT_Y\n                 INTO :VST-STAT-Y\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  VST_ACTIVE_F      = :VST-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                       TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                    TO\n                    PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-FOUND-30P     TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-30P TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5160P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * RETRIEVES THE MOST RECENT 30T STATUS CODE WHICH CONSISTS OF THE\n      * DATE THAT THE VEHICLE WAS RELEASED FROM THE ASSEMBLY PLANT.\n       5180P-OBTAIN-MEXW003-30T.\n           MOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\n           MOVE PL-30T                        TO VST-STA-STATUS-C\n           MOVE PL-Y                          TO VST-LAST-OCCUR-F\n                                                 VST-ACTIVE-F\n           EXEC SQL\n               SELECT  VST_STAT_Y\n                 INTO :VST-STAT-Y\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  VST_ACTIVE_F      = :VST-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                       TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                    TO\n                    PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-FOUND-30T     TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-30T TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5180P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * RETRIEVES THE MOST RECENT 80F STATUS CODE WHICH CONSISTS OF THE\n      * DATE THAT THE VEHICLE HAS ARRIVED AT THE FINAL DESTINATION.\n       5200P-OBTAIN-MEXW003-80F.\n           MOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\n           MOVE PL-80F                        TO VST-STA-STATUS-C\n           MOVE PL-Y                          TO VST-LAST-OCCUR-F\n                                                 VST-ACTIVE-F\n           EXEC SQL\n               SELECT  VST_STAT_Y\n                 INTO :VST-STAT-Y\n                 FROM  MEXW003_VEH_STATUS\n                WHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\n                  AND  STA_STATUS_C      = :VST-STA-STATUS-C\n                  AND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\n                  AND  VST_ACTIVE_F      = :VST-ACTIVE-F\n           END-EXEC\n           MOVE SQLCODE                       TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                    TO\n                    PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-FOUND-80F     TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-NOT-FOUND-80F TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE              TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG        TO ABEND-MSG\n                    MOVE \"5200P\"              TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * AT THIS POINT, A CURSOR WILL BE CREATED USING TABLE MEXW003 TO\n      * SELECT ALL 40V STATUS CODES.  THE ROW WHICH IS THE OLDEST\n      * REPRESENTS THE ROW WITH THE ORIGINAL INVOICING DEALER.\n      * AN ORDER BY VST_STAT_Y WILL BE USED TO ACCOMPLISH THIS.\n       5220P-OPEN-40V-CSR.\n           MOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\n           MOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\n           MOVE PL-40V                      TO VST-STA-STATUS-C\n           MOVE PL-D                        TO VST-STAT-TYP-C\n           MOVE PL-Y                        TO VST-ACTIVE-F\n           MOVE PL-WD                       TO VST-CUR-DATA-SRC-C\r\n           EXEC SQL\n              OPEN MEXW003_40V_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"OPEN\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS  TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5220P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * FETCHES A ROW FROM MEXW003_40V_CSR WHICH WILL RETRIEVE THE\n      * ORIGINAL INVOICING DEALER.\n       5230P-FETCH-40V-ROW.\n           EXEC SQL\n              FETCH  MEXW003_40V_CSR\n               INTO :VST-GBL-LOC-C\n           END-EXEC\n           MOVE SQLCODE                           TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                        TO\n                        PV-NBR-ROWS-READ-MEXW003\n                    SET MEXW003-40V-CSR-ROW-FOUND TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW003-40V-CSR-ROW-NOT-FOUND\n                                                  TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE                  TO DB2-ABEND-SQLCODE\n                    MOVE \"FETCH\"                  TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS        TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG            TO ABEND-MSG\n                    MOVE \"5230P\"                  TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * CLOSES THE MEXW003_40V_CSR WHICH WAS USED TO RETRIEVE THE ORIG-\n      * INAL INVOICING DEALER.\n       5240P-CLOSE-40V-CSR.\n           EXEC SQL\n              CLOSE MEXW003_40V_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"CLOSE\"            TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-VEH-STATUS  TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5240P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * A CURSOR WILL BE CREATED USING TABLE MEXW031.  ALL NON 'NA' AND\n      * NON 'EA' SOURCES WILL SELECT FROM IT.  THE RETRIEVED VALUES\n      * WILL BE SENT IN PLACE OF THE LOCAL BODY STYLE CODE THAT WAS\n      * OBTAINED FROM TABLE MEXW001_VEH_ORDER.\n       5300P-OPEN-MEXW031-CSR.\n           MOVE VEH-DTA-DATA-SRC-C          TO CTM-DTA-DATA-SRC-C\n           MOVE VEH-CATALOG-C               TO CTM-LCL-CATALOG-C\n           EXEC SQL\n              OPEN MEXW031_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"OPEN\"             TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5300P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * FETCHES A ROW FROM MEXW031_CSR WHICH WILL RETRIEVE OPTION CODE\n      * AND PRODUCT TYPE WHICH WILL BE COMBINED AND THEN USED TO POP-\n      * ULATE THE WERS BODY STYLE CODE FOR NON 'NA' AND NON 'EA' DATA\n      * SOURCES.\n       5320P-FETCH-MEXW031-CSR.\n           EXEC SQL\n              FETCH  MEXW031_CSR\n               INTO :CTM-OPT-OPTION-C\n                   ,:CTM-VPT-PROD-TYP-C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    ADD +1                  TO PV-NBR-ROWS-READ-MEXW031\n                    SET MEXW031-FOUND       TO TRUE\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET MEXW031-NOT-FOUND   TO TRUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"FETCH\"            TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5320P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * CLOSES CURSOR MEXW031_CSE WHICH RETRIEVED THE OPTION CODE AND\n      * PRODUCT TYPE FOR NON 'NA' AND NON 'EA' DATA SOURCES.\n       5340P-CLOSE-MEXW031-CSR.\n           EXEC SQL\n              CLOSE MEXW031_CSR\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"CLOSE\"            TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"5340P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * THIS PARAGRAPH WILL WRITE ALL THE AUDIT INFORMATION OUT TO THE\n      * AUDIT REPORT.\n       6020P-WRITE-AUDIT-DETAIL.\n           MOVE SPACES                          TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE ALL \"=\"                         TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE SPACES                          TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM SALE-CHK:\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-SALE-CHK       TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW003 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW003        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW004 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW004        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW007 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW007        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW008 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW008        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW027 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW027        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW031 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW031        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW032 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW032        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW033 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW033        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW034 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW034        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL ROWS READ FROM MEXW035 :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-ROWS-READ-MEXW035        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL SYSPARM RECORDS READ   :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-SYSPARM-RECS-READ        TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL SUBROUTINE SSTK CALLS  :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-EXWWSSTK-CALLS           TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL SSTK CALLS WITH +100   :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-EXWWSSTK-NOTFOUND-CALLS  TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL MEXW027 ROWS NOT FOUND :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-MEXW027-NOTFOUND-CALLS   TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL MEXW035 ROWS NOT FOUND :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-MEXW035-NOTFOUND-CALLS   TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"TTL OUTPUT RECORDS WRITTEN :\"  TO AUDIT-LABEL\n           MOVE PV-NBR-OUTPUT-RECS-WRTN         TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           .\n      * OBTAINS THE CURRENT DEARBORN TIMESTAMP, THIS WILL BE USED TO\n      * UPDATE MEXW016 FOR THE START TIME OF THE JOB.\n       7000P-OBTAIN-DRBN-TIMESTAMP.\n           EXEC SQL\n              SET  :PV-CURR-DRBN-TIMESTAMP  = CURRENT TIMESTAMP\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-GENERIC     TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"7000P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * SELECT THE PREVIOUS RUNS TIMESTAMP ON THE MEXS016 TABLE\n       7200P-SELECT-PRV-RUN-TIMESTAMP.\n           MOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\n           MOVE PL-TABLE-ID                 TO GNT-TABLE-ID\n           MOVE PL-KEY-DATA-TIMESTAMP       TO GNT-KEY-DATA\n           MOVE PL-Y                        TO GNT-SW-ACTIVE\n           EXEC SQL\n               SELECT GNT_ATTRIBUTE_DATA\n               INTO  :GNT-ATTRIBUTE-DATA\n               FROM   MEXS016_GENERIC2\n               WHERE  GNT_SYSTEM_CD    = :GNT-SYSTEM-CD\n               AND    GNT_TABLE_ID     = :GNT-TABLE-ID\n               AND    GNT_KEY_DATA     = :GNT-KEY-DATA\n               AND    GNT_SW_ACTIVE LIKE :GNT-SW-ACTIVE\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE \"MEXS016_GENERIC2\" TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"7200P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * UPDATE THE TIMESTAMP ON THE MEXS016 TABLE WITH THE TIME THAT\n      * THE JOB STARTED.  THIS VALUE WILL BE READ IN THE NEXT TIME THIS\n      * PROGRAM IS EXECUTED.\n       7250P-UPDATE-TIMESTAMP.\n            MOVE PL-SYSTEM-ID               TO GNT-SYSTEM-CD\n            MOVE PL-TABLE-ID                TO GNT-TABLE-ID\n            MOVE PL-KEY-DATA-TIMESTAMP      TO GNT-KEY-DATA\n            MOVE PV-CURR-DRBN-TIMESTAMP     TO GNT-ATTRIBUTE-DATA\n            EXEC SQL\n                UPDATE MEXS016_GENERIC2\n                SET    GNT_ATTRIBUTE_DATA = :GNT-ATTRIBUTE-DATA\n                WHERE  GNT_SYSTEM_CD      = :GNT-SYSTEM-CD\n                AND    GNT_TABLE_ID       = :GNT-TABLE-ID\n                AND    GNT_KEY_DATA       = :GNT-KEY-DATA\n            END-EXEC\n            MOVE SQLCODE                    TO SC-DB2-SQLCODE\n            IF  NOT SC-DB2-SQLCODE-OK\n                MOVE SQLCODE                TO DB2-ABEND-SQLCODE\n                MOVE \"UPDATE\"               TO DB2-ABEND-FUNCTION\n                MOVE \"MEXS016_GENERIC2\"     TO DB2-ABEND-TABLE\n                MOVE DB2-ABEND-MSG          TO ABEND-MSG\n                MOVE \"7250P\"                TO ABEND-PARAGRAPH\n                PERFORM 9999P-ABEND\n            END-IF\n           .\n      * SELECT THE PREVIOUS RUN'S OUTPUT FILE BATCH NUMBER.\n       7300P-GET-BATCH-NBR.\n           MOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\n           MOVE PL-TABLE-ID                 TO GNT-TABLE-ID\n           MOVE PL-KEY-DATA-BATCHCTL        TO GNT-KEY-DATA\n           MOVE PL-Y                        TO GNT-SW-ACTIVE\n           EXEC SQL\n               SELECT GNT_ATTRIBUTE_DATA\n               INTO  :GNT-ATTRIBUTE-DATA\n               FROM   MEXS016_GENERIC2\n               WHERE  GNT_SYSTEM_CD    = :GNT-SYSTEM-CD\n               AND    GNT_TABLE_ID     = :GNT-TABLE-ID\n               AND    GNT_KEY_DATA     = :GNT-KEY-DATA\n               AND    GNT_SW_ACTIVE LIKE :GNT-SW-ACTIVE\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    CONTINUE\n               WHEN OTHER\n                    MOVE SQLCODE            TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\n                    MOVE \"MEXS016_GENERIC2\" TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG      TO ABEND-MSG\n                    MOVE \"7300P\"            TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      * UPDATE THE OUTPUT FILE'S BATCH NUMBER BY +1.\n       7350P-UPDATE-BATCH-NBR.\n           MOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\n           MOVE PL-TABLE-ID                 TO GNT-TABLE-ID\n           MOVE PL-KEY-DATA-BATCHCTL        TO GNT-KEY-DATA\n           MOVE PV-CURRENT-BATCH-NBR        TO GNT-ATTRIBUTE-DATA\n            EXEC SQL\n                UPDATE MEXS016_GENERIC2\n                SET    GNT_ATTRIBUTE_DATA = :GNT-ATTRIBUTE-DATA\n                WHERE  GNT_SYSTEM_CD      = :GNT-SYSTEM-CD\n                AND    GNT_TABLE_ID       = :GNT-TABLE-ID\n                AND    GNT_KEY_DATA       = :GNT-KEY-DATA\n            END-EXEC\n            MOVE SQLCODE                    TO SC-DB2-SQLCODE\n            IF  NOT SC-DB2-SQLCODE-OK\n                MOVE SQLCODE                TO DB2-ABEND-SQLCODE\n                MOVE \"UPDATE\"               TO DB2-ABEND-FUNCTION\n                MOVE \"MEXS016_GENERIC2\"     TO DB2-ABEND-TABLE\n                MOVE DB2-ABEND-MSG          TO ABEND-MSG\n                MOVE \"7350P\"                TO ABEND-PARAGRAPH\n                PERFORM 9999P-ABEND\n            END-IF\n           .\n      * POPULATES THE HUB HEADER TO THE OUTPUT FILE.\n       7400P-POPULATE-HUB-HEADER.\n           MOVE PL-LAYOUT-ID                TO HUB-HDR-LAYOUT-ID\n           MOVE PL-ENTITY-CD                TO HUB-HDR-ENTITY-CODE\n           MOVE PL-LAYOUT-ID                TO HUB-HDR-LAYOUT-ID\n           MOVE PV-CURR-DRBN-TIMESTAMP      TO HUB-HDR-TIMESTAMP\n           MOVE PV-CURRENT-BATCH-NBR        TO HUB-HDR-BATCH-NBR\n           MOVE PL-PROCESS-ID               TO HUB-HDR-PROCESS-ID\n           MOVE ZERO                        TO HUB-HDR-TOTAL-REC-CNT\n           MOVE SPACES                      TO HUB-HDR-PRIMARY-CONTACT\n                                               HUB-HDR-SECOND-CONTACT\n           MOVE HUB-HEADER                  TO MKT-ASSOC-RECORD\n           WRITE MKT-ASSOC-RECORD\n            .\n      * POPULATES THE HUB TRAILER IN THE OUTPUT FILE.\n       7450P-POPULATE-HUB-TRAILER.\n           MOVE PL-ENTITY-CD                TO HUB-TRL-ENTITY-CODE\n           MOVE PL-LAYOUT-ID                TO HUB-TRL-LAYOUT-ID\n           MOVE PV-CURR-DRBN-TIMESTAMP      TO HUB-TRL-TIMESTAMP\n           MOVE PV-CURRENT-BATCH-NBR        TO HUB-TRL-BATCH-NBR\n           MOVE PL-PROCESS-ID               TO HUB-TRL-PROCESS-ID\n           MOVE PV-COUNT-DTL-NBR            TO HUB-TRL-TOTAL-REC-CNT\n           MOVE SPACES                      TO HUB-TRL-PRIMARY-CONTACT\n                                               HUB-TRL-SECOND-CONTACT\n           MOVE HUB-TRAILER                 TO MKT-ASSOC-RECORD\n           WRITE MKT-ASSOC-RECORD\n            .\n      * SELECTS WERS STRING FROM MEXW004_VEH_WERS_STRING DB2 TABLE\n       7600P-SELECT-WERS-DATA-W004.\n           EXEC SQL\n               SELECT  VWR_WERS_STRING_X\n                      ,VWR_WERS_VL_C\n                      ,VWR_WERS_PRD_TP_C\n                      ,VWR_MAJ_FEAT_DFNED_F\n                 INTO :VWR-WERS-STRING-X\n                     ,:VWR-WERS-VL-C\n                     ,:VWR-WERS-PRD-TP-C\n                     ,:VWR-MAJ-FEAT-DFNED-F\n                 FROM  MEXW004_VEH_WERS_STRING\n                WHERE  VEH_ORD_ID_C     =  :VWR-VEH-ORD-ID-C\n                  AND  DTA_DATA_SRC_C   =  :VWR-DTA-DATA-SRC-C\n           END-EXEC\n           MOVE SQLCODE                     TO SC-DB2-SQLCODE\n           EVALUATE TRUE\n               WHEN SC-DB2-SQLCODE-OK\n                    IF VWR-WERS-STRING-X-TEXT    > SPACES  AND\n                       VWR-MAJ-FEAT-DFNED-F      = PL-Y\n                       SET WERS-STRING-FOUND-SW  TO TRUE\n                       ADD +1                    TO\n                                               PV-NBR-ROWS-READ-MEXW004\n                    END-IF\n               WHEN SC-DB2-SQLCODE-NOT-FOUND\n                    SET WERS-STRING-NOT-FOUND-SW TO TRUE\n               WHEN OTHER\n                    PERFORM 7620P-WRITE-MEXW004-AUDIT-RPT\n                    MOVE SC-DB2-SQLCODE          TO DB2-ABEND-SQLCODE\n                    MOVE \"SELECT\"                TO DB2-ABEND-FUNCTION\n                    MOVE PL-TBL-MEXW004          TO DB2-ABEND-TABLE\n                    MOVE DB2-ABEND-MSG           TO ABEND-MSG\n                    MOVE \"7600P\"                 TO ABEND-PARAGRAPH\n                    PERFORM 9999P-ABEND\n           END-EVALUATE\n           .\n      /*****************************************************************\n      * WRITE AUDIT REPORT FOR MEXW004_VEH_WERS_STRING TABLE           *\n       7620P-WRITE-MEXW004-AUDIT-RPT.\n           MOVE SPACES                     TO AUDIT-RECORD\n           MOVE \" VWR-VEH-ORD-ID-C: \"      TO AUDIT-LABEL\n           MOVE VWR-VEH-ORD-ID-C           TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE SPACES                     TO AUDIT-RECORD\n           MOVE \" VWR-DTA-DATA-SRC-C: \"    TO AUDIT-LABEL\n           MOVE VWR-DTA-DATA-SRC-C         TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE SPACES                     TO AUDIT-RECORD\n           .\n      * READS THE INPUT SYSPARM FILE TO OBTAIN THE PRODUCTION SOURCE.\n       8000P-GET-SYSPARM-RECORD.\n           READ SYSPARM-FILE\n           INTO WS-SYSPARM-DETAIL\n             AT END SET END-OF-SYSPARM-FILE TO TRUE\n           END-READ\n           EVALUATE TRUE\n               WHEN END-OF-SYSPARM-FILE\n                AND PV-NBR-SYSPARM-RECS-READ = ZERO\n                    MOVE \"MISSING SYSPARM\"  TO ABEND-MSG\n                    MOVE \"8000P\"            TO ABEND-MSG-2\n                    PERFORM 9999P-ABEND\n               WHEN END-OF-SYSPARM-FILE\n                    CONTINUE\n               WHEN OTHER\n                    ADD +1                  TO PV-NBR-SYSPARM-RECS-READ\n           END-EVALUATE\n           .\n      * IF A CALL TO TABLE MEXW035 RESULTED IN A SQL +100 (NOT FOUND)\n      * CONDITION, THE INFORMATION WILL BE WRITTEN OUT TO THE AUDIT\n      * REPORT AND RETURN-CODE WILL BE SET TO 3, SO THAT AN EMAIL\n      * MESSAGE WILL BE SENT TO THE GEVIS HELPDESK TO INFORM THEM TO\n      * LOOK AT THE AUDIT REPORT.\n       9000P-MISSING-MEXW035-ROW.\n           MOVE SPACES                         TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"MISSING DEALER ON MEXW035:  \" TO AUDIT-LABEL\n           WRITE AUDIT-RECORD\n           MOVE \"DEALER CODE:         \"        TO AUDIT-LABEL\n           MOVE DLR-DLR-DLR-C                  TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"ASSOCIATED VIN:      \"        TO AUDIT-LABEL\n           MOVE VEH-VIN-FULL-C                 TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           ADD +1 TO PV-NBR-MEXW035-NOTFOUND-CALLS\n           .\n      * IF A CALL TO TABLE MEXW027 RESULTED IN A SQL +100 (NOT FOUND)\n      * CONDITION, THE INFORMATION WILL BE WRITTEN OUT TO THE AUDIT\n      * REPORT AND RETURN-CODE WILL BE SET TO 3, SO THAT AN EMAIL\n      * MESSAGE WILL BE SENT TO THE GEVIS HELPDESK TO INFORM THEM TO\n      * LOOK AT THE AUDIT REPORT.\n       9050P-MISSING-MEXW027-ROW.\n           MOVE SPACES                         TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"MISSING STATUS ON MEXW027: \"  TO AUDIT-LABEL\n           MOVE PL-SPACES                      TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"STATUS CODE:         \"        TO AUDIT-LABEL\n           MOVE CNT-GBL-DATA-X                 TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"ASSOCIATED VIN:      \"        TO AUDIT-LABEL\n           MOVE VEH-VIN-FULL-C                 TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           SET  SEND-EMAIL                     TO TRUE\n           ADD +1 TO PV-NBR-MEXW027-NOTFOUND-CALLS\n           .\n      /*****************************************************************\n      * ACCEPT AND FORMAT THE CURRENT DATE AND TIME.                   *\n       9100P-GET-CURRENT-DATE-TIME.\n           ACCEPT SV-CURRENT-DATE FROM DATE\n           ACCEPT SV-CURRENT-TIME FROM TIME\n           MOVE SV-CURRENT-DATE-YY            TO SV-FORMAT-DATE-YY\n           MOVE SV-CURRENT-DATE-MM            TO SV-FORMAT-DATE-MM\n           MOVE SV-CURRENT-DATE-DD            TO SV-FORMAT-DATE-DD\n           MOVE SV-CURRENT-TIME-HH            TO SV-FORMAT-TIME-HH\n           MOVE SV-CURRENT-TIME-MM            TO SV-FORMAT-TIME-MM\n           MOVE SV-CURRENT-TIME-SS            TO SV-FORMAT-TIME-SS\n           .\n      /*****************************************************************\n      * WRITE AUDIT HEADER LINES                                       *\n       9200P-WRITE-AUDIT-HEADER.\n           MOVE PL-PGM-NAME                    TO AUDIT-RECORD\n           MOVE \"AUDIT REPORT\"                 TO AUDIT-RECORD (10:)\n           WRITE AUDIT-RECORD\n           MOVE \"PROGRAM VERSION            :\" TO AUDIT-LABEL\n           MOVE PAN-VALET                      TO AUDIT-DATA\n           WRITE AUDIT-RECORD\n           MOVE \"PROGRAM COMPILE DATE/TIME  :\" TO AUDIT-LABEL\n           MOVE SV-COMPILE-DATE                TO AUDIT-DATA\n           MOVE SV-COMPILE-TIME                TO AUDIT-DATA (10:)\n           WRITE AUDIT-RECORD\n           MOVE \"PROGRAM START   DATE/TIME  :\" TO AUDIT-LABEL\n           MOVE SV-FORMAT-DATE                 TO AUDIT-DATA\n           MOVE SV-FORMAT-TIME                 TO AUDIT-DATA (10:)\n           WRITE AUDIT-RECORD\n           .\n      /*****************************************************************\n      * WRITE AUDIT TRAILER LINES                                      *\n       9300P-WRITE-AUDIT-TRAILER.\n           MOVE SPACES                         TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE \"PROGRAM STOP    DATE/TIME  :\" TO AUDIT-LABEL\n           MOVE SV-FORMAT-DATE                 TO AUDIT-DATA\n           MOVE SV-FORMAT-TIME                 TO AUDIT-DATA (10:)\n           WRITE AUDIT-RECORD\n           MOVE PL-PGM-NAME                    TO AUDIT-RECORD\n           MOVE \"ENDED SUCCESSFULLY\"           TO AUDIT-RECORD (10:)\n           WRITE AUDIT-RECORD\n           .\n      /*****************************************************************\n      * WRITE ABEND MESSAGES TO AUDIT FILE, CALL COREDUMP.             *\n       9999P-ABEND.\n           IF  ABEND-PROGRAM                 = SPACES\n               MOVE PL-PGM-NAME               TO ABEND-PROGRAM\n           END-IF\n           MOVE SPACES                        TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE ABEND-MSG                     TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE ABEND-MSG-2                   TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           MOVE SPACES                        TO AUDIT-RECORD\n           WRITE AUDIT-RECORD\n           PERFORM 9999C-CALL-COREDUMP\n           .\n      * CALLS COREDUMP TO FORCE AN ABEND CAUSED BY AN ERROR.\n       9999C-CALL-COREDUMP.\n           CALL \"COREDUMP\"\n           .",
    "structured_code": {
      "identification_division": [
        {
          "line": "1-54",
          "type": "NA",
          "syntax": "IDENTIFICATION DIVISION.\nPROGRAM-ID.    EXWWB911.\nDATE-WRITTEN.  NOVEMBER 2011.\nDATE-COMPILED.\n* PROGRAM DESCRIPTION\n* EXWWB911 IS A BATCH PROGRAM THAT IS DESIGNED TO EXTRACT VEHICLE\n* DATA, DEALER DATA FROM VARIOUS DB2 TABLES WHICH ARE OWNED AND\n* MAINTAINED BY GEVIS AND TO CREATE AN OUTBOUND BRIDGE FILE WHICH\n* WHICH WILL BE USED BY MARKETING ASSOCIATES.\n* PROGRAM PROCESSSING:\n* THE PROGRAM WILL READ IN AN INPUT SYSPARM FILE WHICH WILL\n* CONTAIN A LIST OF PRODUCERS TO BE PROCESSED.  IT WILL PROCESS\n* ONE PRODUCER AT A TIME.  WHEN A PRODUCER IS FIRST READ IN, A\n* DB2 CURSOR WILL BE OPENED WHICH DRIVES OFF OF TABLES MEXW001_\n* VEH_ORDER AND MEWX008_VEH_RTL FOR FLEET SALES THAT HAVE BEEN\n* UPDATED SINCE THE LAST RUN.  ONLY ROWS THAT ARE ASSOCIATED WITH\n* A CURRENT WDMO DEALER WILL BE FURTHER PROCESSED AND OUTPUT\n* TO THE OUTBOUND BRIDGE FILE.\n* NOTE: THERE MAY BE INSTANCES WHERE SOME FIELDS EXTRACTED\n* FROM THE GEVIS DB2 TABLES, MAY NOT BE POPULATED WITH DATA.\n* IN THAT CASE, IF THE FIELD IS ALPHANUMERIC, SPACES WILL BE\n* CONTAINED WITHIN THE CORRESPONDING OUTPUT FIELD AND IF THE\n* FIELD IS NUMERIC, ZEROS WILL BE CONTAINED WITHIN THE COR-\n* CORRESPONDING OUTPUT FIELD.\n* NOTE: FILE FDEX.WW.PROD.EXWWB490.MKTASC.FLTSLS WILL BE PICKED\n*       UP BY MARKETING ASSOCIATES USING FTP ID FDFTPMK.\n*                       REVISION LOG\n* DATE    : 12/12/2011  PROGRAMMER: DAWN MAHN\n* ETRACKER: 10427340\n* REASON  ; ORIGINAL PROGRAM CREATION.\n* DATE    : 03/18/2013  PROGRAMMER: ESTES DAVIS\n* ETRACKER: 11838861\n* REASON  : CHANGE PROGRAM TO REMOVE THE CALL TO SUBROUTINE\n*           EXWWSWER, IT IS  USE TO FORMAT THE WERS STRING\n*           PROCESS\n* DATE    : 05/20/2013  PROGRAMMER: DAWN MAHN\n* ETRACKER: 11108662\n* REASON  : IF STATUS ROW IS NOT FOUND ON MEXW027 FOR SOURCE VI,\n*           THE JOB WILL END WITH CC3 AND AN EMAIL WILL BE SENT\n*           TO THE GEVIS HELP DESK.  THE TRANSACTION WILL NOT BE\n*           WRITTEN TO THE OUTPUT FILE.\n* DATE    : 11/19/2015  PROGRAMMER: ESTES DAVIS                  *\n* ETRACKER: 13836661 (13880434 EMERGENCY CODE DROP)              *\n* REASON  : INCLUDED WERS PRODUCT TYPE TO                        *\n*           5114P-SELECT-MEXW034-GEVIS-VL PARAGRAPH. ALSO,       *\n*           INCLUDED VPT_PROD_TYP_C TO MEXW032_CATALOG           *\n*           TABLE SQL CALL IN 5112P-SELECT-MEXW032-WERS-VL       *\n*           PARAGRAPH.                                           *\n* DATE    : 10/12/2017  PROGRAMMER: DAWN MAHN                    *\n* ETRACKER: 15164314                                             *\n* REASON  : CHANGE MEXW003_40V_CSR TO PULL ONLY THE FTC          *\n*           WHOLESALE (VST_CUR_DATA_SRC_C = WD) INSTEAD          *\n*           OF PULLING ANY WHOLESALE REGARDLESS OF SOURCE.       *",
          "is_file_call_required": false
        }
      ],
      "environment_division": [
        {
          "line": "55-60",
          "type": "NA",
          "syntax": "ENVIRONMENT DIVISION.\nINPUT-OUTPUT SECTION.\nFILE-CONTROL.\nSELECT AUDIT-FILE           ASSIGN TO AUDIT.\nSELECT SYSPARM-FILE         ASSIGN TO PARMFILE.\nSELECT MKT-ASSOC-FILE       ASSIGN TO MKTASSOC.",
          "is_file_call_required": false
        }
      ],
      "data_division": [
        {
          "file_section": [
            {
              "type": "FileDescription",
              "line": "63-66",
              "syntax": "FD  AUDIT-FILE.\n01  AUDIT-RECORD.\n05  AUDIT-LABEL             PIC X(30).\n05  AUDIT-DATA              PIC X(50).",
              "is_file_call_required": false
            },
            {
              "type": "FileDescription",
              "line": "67-68",
              "syntax": "FD  SYSPARM-FILE.\n01  SYSPARM-RECORD              PIC X(80).",
              "is_file_call_required": false
            },
            {
              "type": "FileDescription",
              "line": "69-71",
              "syntax": "FD  MKT-ASSOC-FILE.\n01  MKT-ASSOC-RECORD            PIC X(1000).\n*                 W O R K I N G   S T O R A G E                  *",
              "is_file_call_required": false
            }
          ]
        },
        {
          "working_storage_section": [
            {
              "type": "WorkingStorageDataDescription",
              "line": "73-111",
              "syntax": "77  PAN-VALET PICTURE X(24) VALUE \"070PEXWWB911 12/12/11\".\n* WORKING STORAGE COPYBOOKS\nCOPY CPEWD001.\n*MEXW001 TABLE LAYOUT\nCOPY CPEWD003.\n*MEXW003 TABLE LAYOUT\nCOPY CPEWD004.\n*MEXW004 TABLE LAYOUT\nCOPY CPEWD007.\n*MEXW007 TABLE LAYOUT\nCOPY CPEWD008.\n*MEXW008 TABLE LAYOUT\nCOPY CPESD016.\n*MEXS016_GENERIC2\nCOPY CPEWD021.\n*MEXW021 TABLE LAYOUT\nCOPY CPEWD027.\n*MEXW027 TABLE LAYOUT\nCOPY CPEWD031.\n*MEXW031 TABLE LAYOUT\nCOPY CPEWD032.\n*MEXW032 TABLE LAYOUT\nCOPY CPEWD033.\n*MEXW033 TABLE LAYOUT\nCOPY CPEWD034.\n*MEXW034 TABLE LAYOUT\nCOPY CPEWD035.\n*MEXW035 TABLE LAYOUT\nCOPY CPESDB2.\n*SQLCA AND SQLCODES\nCOPY CPESGNTB.\n*GENERIC TABLE LAYOUTS - EXSE SYSTEM\nCOPY CPEWGNTB.\n*GENERIC TABLE LAYOUT  - EXWW SYSTEM\nCOPY CPESEBWS.\n*BMPSHELL WORKING STORAGE\nCOPY CPEWSSTK.\n*I/O PARAMETERS FOR SUBROUTINE EXWWSSTK\n* WORKING STORAGE LITERALS",
              "is_file_call_required": true,
              "file_dependencies": [
                {
                  "line": "73-111",
                  "file_name": "CPEWD001"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD003"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD004"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD007"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD008"
                },
                {
                  "line": "73-111",
                  "file_name": "CPESD016"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD021"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD027"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD031"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD032"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD033"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD034"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWD035"
                },
                {
                  "line": "73-111",
                  "file_name": "CPESDB2"
                },
                {
                  "line": "73-111",
                  "file_name": "CPESGNTB"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWGNTB"
                },
                {
                  "line": "73-111",
                  "file_name": "CPESEBWS"
                },
                {
                  "line": "73-111",
                  "file_name": "CPEWSSTK"
                }
              ]
            },
            {
              "type": "WorkingStorageDataDescription",
              "line": "112-219",
              "syntax": "01 PROGRAM-LITERALS.\n05  PL-00A                      PIC  X(03) VALUE \"00A\".\n05  PL-001                      PIC  X(03) VALUE \"001\".\n05  PL-010                      PIC  X(03) VALUE \"010\".\n05  PL-10M                      PIC  X(03) VALUE \"10M\".\n05  PL-20M                      PIC  X(03) VALUE \"20M\".\n05  PL-20T                      PIC  X(03) VALUE \"20T\".\n05  PL-30P                      PIC  X(03) VALUE \"30P\".\n05  PL-30R                      PIC  X(03) VALUE \"30R\".\n05  PL-30T                      PIC  X(03) VALUE \"30T\".\n05  PL-40V                      PIC  X(03) VALUE \"40V\".\n05  PL-80F                      PIC  X(03) VALUE \"80F\".\n05  PL-90V                      PIC  X(03) VALUE \"90V\".\n05  PL-025                      PIC  X(03) VALUE \"025\".\n05  PL-185                      PIC  X(03) VALUE \"185\".\n05  PL-190                      PIC  X(03) VALUE \"190\".\n05  PL-600                      PIC  X(03) VALUE \"600\".\n05  PL-800                      PIC  X(03) VALUE \"800\".\n05  PL-801                      PIC  X(03) VALUE \"801\".\n05  PL-999                      PIC  X(03) VALUE \"999\".\n05  PL-TBL-VEH-STATUS           PIC X(18)\nVALUE \"MEXW003_VEH_STATUS\".\n05  PL-TBL-VEH-WHS              PIC X(18)\nVALUE \"MEXW007_VEH_WHS   \".\n05  PL-TBL-MEXW003-07           PIC X(18)\nVALUE \"MEXW003/MEXW007   \".\n05  PL-TBL-MEXW003-08           PIC X(18)\nVALUE \"MEXW003/MEXW008   \".\n05  PL-TBL-MEXW004              PIC X(18)\nVALUE \"MEXW004_VEH_WERS_S\".\n05  PL-TBL-VEH-RTL              PIC X(18)\nVALUE \"MEXW008_VEH_RTL   \".\n05  PL-TBL-GENERIC              PIC X(18)\nVALUE \"MEXS016_GENERIC2  \".\n05  PL-TBL-SUBLVL-ASG           PIC X(18)\nVALUE \"MEXW021_SUBLVL_ASG\".\n05  PL-TBL-CONV                 PIC X(18)\nVALUE \"MEXW027_CONV      \".\n05  PL-TBL-VL-BRAND             PIC X(18)\nVALUE \"MEXW034_VL_BRAND  \".\n05  PL-TBL-BODY-TYPE            PIC X(18)\nVALUE \"MEXW033_BODY_TYPE \".\n05  PL-TBL-DLR-MSTR             PIC X(18)\nVALUE \"MEXW035_DLR_MSTR  \".\n05  PL-TBL-CATMAP               PIC X(18)\nVALUE \"MEXW031_CATMAP    \".\n05  PL-TBL-CATALOG              PIC X(18)\nVALUE \"MEXW032_CATALOG   \".\n05  PL-SALE-CHK-CSR             PIC X(18)\nVALUE \"SALE_CHK_CSR      \".\n05  PL-DB2-DATE-MIN             PIC  X(10)\nVALUE \"0001-01-01\".\n05  PL-D                        PIC  X(01) VALUE \"D\".\n05  PL-E                        PIC  X(01) VALUE \"E\".\n05  PL-EX                       PIC  X(02) VALUE \"EX\".\n05  PL-Y                        PIC  X(01) VALUE \"Y\".\n05  PL-N                        PIC  X(01) VALUE \"N\".\n05  PL-STATUS                   PIC  X(06) VALUE \"STATUS\".\n05  PL-SYSTEM-ID                PIC  X(04) VALUE \"EXWW\".\n05  PL-VEHLINE                  PIC  X(08) VALUE \"VEHLINE \".\n05  PL-USD                      PIC  X(04) VALUE \"USD \".\n05  PL-WDMSALEM                 PIC  X(08) VALUE \"WDMSALEM\".\n05  PL-TABLE-ID                 PIC  X(08) VALUE \"SYSPARM \".\n05  PL-KEY-DATA-TIMESTAMP       PIC  X(20) VALUE\n\"EXWWB911TIMESTMP\".\n05  PL-KEY-DATA-BATCHCTL        PIC  X(20) VALUE\n\"EXWWB911BATCHCTL\".\n05  PL-PGM-NAME                 PIC  X(08) VALUE \"EXWWB911\".\n05  PL-SUBRTN-NAME              PIC  X(08) VALUE \"EXWWSSTK\".\n05  PL-SYSTEM-CD                PIC  X(04) VALUE  \"EXWW\".\n05  PL-LAYOUT-ID                PIC  X(20) VALUE\n\"WGEVMKTASOCEXTOUT010\".\n05  PL-PROCESS-ID               PIC  X(20) VALUE\n\"GEVMKTASOCEXTOUT010\".\n05  PL-ENTITY-CD                PIC  X(05) VALUE\n\"EXPNG\".\n05  PL-VEH-VIN-BLANK            PIC  X(17) VALUE\n\"                 \".\n05  PL-BS                       PIC  X(02) VALUE \"BS\".\n05  PL-CA                       PIC  X(02) VALUE \"CA\".\n05  PL-NA                       PIC  X(02) VALUE \"NA\".\n05  PL-EA                       PIC  X(02) VALUE \"EA\".\n05  PL-A4                       PIC  X(02) VALUE \"A4\".\n05  PL-AB                       PIC  X(02) VALUE \"AB\".\n05  PL-D-2                      PIC  X(02) VALUE \"D \".\n05  PL-DB                       PIC  X(02) VALUE \"DB\".\n05  PL-F1                       PIC  X(02) VALUE \"F1\".\n05  PL-F2                       PIC  X(02) VALUE \"F2\".\n05  PL-F3                       PIC  X(02) VALUE \"F3\".\n05  PL-F4                       PIC  X(02) VALUE \"F4\".\n05  PL-KI                       PIC  X(02) VALUE \"KI\".\n05  PL-K5                       PIC  X(02) VALUE \"K5\".\n05  PL-L2                       PIC  X(02) VALUE \"L2\".\n05  PL-L4                       PIC  X(02) VALUE \"L4\".\n05  PL-L5                       PIC  X(02) VALUE \"L5\".\n05  PL-T                        PIC  X(01) VALUE \"T\".\n05  PL-T-2                      PIC  X(02) VALUE \"T \".\n05  PL-VI                       PIC  X(02) VALUE \"VI\".\n05  PL-3                        PIC  X(01) VALUE \"3\".\n05  PL-3-2                      PIC  X(02) VALUE \"3 \".\n05  PL-4                        PIC  X(01) VALUE \"4\".\n05  PL-4-2                      PIC  X(02) VALUE \"4 \".\n05  PL-7                        PIC  X(01) VALUE \"7\".\n05  PL-7-2                      PIC  X(02) VALUE \"7 \".\n05  PL-WDM                      PIC  X(03) VALUE \"WDM\".\n05  PL-SPACES                   PIC  X(02) VALUE \"  \".\n05  PL-WD                       PIC  X(02) VALUE \"WD\".\n* WORKING STORAGE SWITCHES",
              "is_file_call_required": false
            },
            {
              "type": "WorkingStorageDataDescription",
              "line": "220-294",
              "syntax": "01  PROGRAM-SWITCHES.\n05  PS-MEXW003-20T-SW           PIC X(01).\n88 MEXW003-FOUND-20T        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-20T    VALUE \"N\".\n05  PS-MEXW003-30P-SW           PIC X(01).\n88 MEXW003-FOUND-30P        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-30P    VALUE \"N\".\n05  PS-MEXW003-30R-SW           PIC X(01).\n88 MEXW003-FOUND-30R        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-30R    VALUE \"N\".\n05  PS-MEXW003-30T-SW           PIC X(01).\n88 MEXW003-FOUND-30T        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-30T    VALUE \"N\".\n05  PS-MEXW003-40V-SW           PIC X(01).\n88 MEXW003-FOUND-40V        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-40V    VALUE \"N\".\n05  PS-MEXW003-80F-SW           PIC X(01).\n88 MEXW003-FOUND-80F        VALUE \"Y\".\n88 MEXW003-NOT-FOUND-80F    VALUE \"N\".\n05  PS-MEXW008-90V-SW           PIC X(01).\n88 MEXW008-FOUND-90V        VALUE \"Y\".\n88 MEXW008-NOT-FOUND-90V    VALUE \"N\".\n05  PS-MEXW003-40V-CSR-ROW-FOUND\nPIC X(01).\n88 MEXW003-40V-CSR-ROW-FOUND\nVALUE \"Y\".\n88 MEXW003-40V-CSR-ROW-NOT-FOUND\nVALUE \"N\".\n05  PS-MEXW007-SW               PIC X(01).\n88 MEXW007-FOUND            VALUE \"Y\".\n88 MEXW007-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW008-SW               PIC X(01).\n88 MEXW008-FOUND            VALUE \"Y\".\n88 MEXW008-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW021-SW               PIC X(01).\n88 MEXW021-FOUND            VALUE \"Y\".\n88 MEXW021-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW027-SW               PIC X(01).\n88 MEXW027-FOUND            VALUE \"Y\".\n88 MEXW027-NOT-FOUND        VALUE \"N\".\n05  WS-MEXW027-MULTIPLE-SW      PIC X(01).\n88 MEXW027-MULTIPLE-FOUND   VALUE \"Y\".\n88 MEXW027-MULTIPLE-NOT-FOUND\nVALUE \"N\".\n05  PS-MEXW031-SW               PIC X(01).\n88 MEXW031-FOUND            VALUE \"Y\".\n88 MEXW031-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW032-SW               PIC X(01).\n88 MEXW032-FOUND            VALUE \"Y\".\n88 MEXW032-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW033-SW               PIC X(01).\n88 MEXW033-FOUND            VALUE \"Y\".\n88 MEXW033-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW034-SW                PIC X(01).\n88 MEXW034-FOUND            VALUE \"Y\".\n88 MEXW034-NOT-FOUND        VALUE \"N\".\n05  PS-MEXW035-SW               PIC X(01).\n88 MEXW035-FOUND            VALUE \"Y\".\n88 MEXW035-NOT-FOUND        VALUE \"N\".\n05  PS-END-OF-SYSPARM-FILE      PIC X(01).\n88 END-OF-SYSPARM-FILE      VALUE \"Y\".\n88 NOT-END-OF-SYSPARM-FILE  VALUE \"N\".\n05  PS-WDMO-DEALER              PIC X(01).\n88 WDMO-DEALER              VALUE \"Y\".\n88 NOT-WDMO-DEALER          VALUE \"N\".\n05  PS-SEND-EMAIL               PIC X(01).\n88 SEND-EMAIL               VALUE \"Y\".\n88 NOT-SEND-EMAIL           VALUE \"N\".\n05  PS-SALE-CHK-SW              PIC X(01).\n88 SALE-CHK-FOUND           VALUE \"Y\".\n88 SALE-CHK-NOT-FOUND       VALUE \"N\".\n05  PS-WERS-STRING              PIC X(01).\n88 WERS-STRING-FOUND-SW     VALUE \"Y\".\n88 WERS-STRING-NOT-FOUND-SW VALUE \"N\".\n* WORKING STORAGE VARIABLES",
              "is_file_call_required": false
            },
            {
              "type": "WorkingStorageDataDescription",
              "line": "295-342",
              "syntax": "01  PROGRAM-VARIABLES.\n05  PV-NBR-ROWS-READ-MEXW003    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW004    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW007    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW008    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-SALE-CHK   PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW021    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW027    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW031    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW032    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW033    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW034    PIC S9(9) COMP.\n05  PV-NBR-ROWS-READ-MEXW035    PIC S9(9) COMP.\n05  PV-NBR-SYSPARM-RECS-READ    PIC S9(9) COMP.\n05  PV-NBR-EXWWSSTK-CALLS       PIC S9(9) COMP.\n05  PV-NBR-EXWWSSTK-NOTFOUND-CALLS\nPIC S9(9) COMP.\n05  PV-NBR-MEXW027-NOTFOUND-CALLS\nPIC S9(9) COMP.\n05  PV-NBR-MEXW035-NOTFOUND-CALLS\nPIC S9(9) COMP.\n05  PV-NBR-OUTPUT-RECS-WRTN     PIC S9(9) COMP.\n05  PV-COUNT-DTL-NBR            PIC S9(9) COMP.\n05  PV-COUNT-LINE-NBR           PIC S9(9) COMP.\n05  PV-PREV-RUN-TIMESTAMP       PIC X(26).\n05  PV-PREV-BATCH-NBR           PIC 9(05).\n05  PV-CURRENT-BATCH-NBR        PIC 9(05).\n05  PV-CURR-DRBN-TIMESTAMP      PIC X(26).\n05  PV-VEH-BDT-MDL-YR-Y         PIC 9(04).99.\n05  PV-VEH-BDT-MDL-YR-Y-RDF\nREDEFINES PV-VEH-BDT-MDL-YR-Y.\n15 PV-VEH-BDT-MDL-YR-CC     PIC X(02).\n15 PV-VEH-BDT-MDL-YR-YY     PIC X(02).\n15 PV-VEH-BDT-MDL-YR-FILLE  PIC X(01).\n15 PV-VEH-BDT-MDL-YR-QTR    PIC X(02).\n05  PV-VST-GBL-LOC-C-REFORMAT   PIC 9(06).\n05  PV-DLR-SUPER-DLR-C-REFORMAT PIC 9(06).\n05  PV-DTL-VEH-GBL-DLR-C-REFORMAT\nPIC 9(06).\n05  PV-PROCESS-SQLCODE-EDIT     PIC +++++.\n05  PV-VALID-VARIABLES.\n10  PV-WERS-VL-C                PIC  X(02).\n88  PV-VALID-VEH-LINE-CDS   VALUE \"KI\", \"K5\", \"DB\".\n* DO NOT PUT ANY COPYBOOKS WITH AN 01 LEVEL IN THIS SECTION. THIS*\n* AREA IS USED STRICTLY FOR DATA TO BE SAVED IN THE CHKP AREA.   *\nCOPY CPEWHUB.\n*E & G HUB HEADER/TRAILER LAYOUT\n* RECORD LAYOUTS                                                 *",
              "is_file_call_required": true,
              "file_dependencies": [
                {
                  "line": "337-342",
                  "file_name": "CPEWHUB"
                }
              ]
            },
            {
              "type": "WorkingStorageDataDescription",
              "line": "343-345",
              "syntax": "01  WS-SYSPARM-DETAIL.\n05  WS-SYSPARM-DATA-SRC             PIC X(02).\n05  FILLER                          PIC X(78).",
              "is_file_call_required": false
            },
            {
              "type": "WorkingStorageDataDescription",
              "line": "346-477",
              "syntax": "01  WS-MKT-ASSOC-DETAIL-RECORD.\n05  WS-DTL-HUB-LINE-NBR             PIC 9(06).\n05  WS-DTL-HUB-REC-ID               PIC X(25).\n05  WS-DTL-HUB-REC-ID-NBR REDEFINES\nWS-DTL-HUB-REC-ID.\n10  WS-DTL-REC-ID-ZEROS         PIC 9(16).\n10  WS-DTL-REC-ID-NBR           PIC 9(09).\n05  WS-DTL-HUB-REC-TYPE             PIC X(03).\n05  WS-DTL-HUB-REC-SEQ-NBR          PIC 9(03).\n05  WS-DTL-VIN-FULL-C               PIC X(17).\n05  WS-DTL-DTA-DATA-SRC-C           PIC X(02).\n05  WS-DTL-BDT-MDL-YR-Y             PIC X(02).\n05  WS-DTL-GEVIS-VEH-LINE-C         PIC X(02).\n05  WS-DTL-LCL-BDYTYP-C             PIC X(05).\n05  WS-DTL-CUR-STA-STATUS-C         PIC X(03).\n05  WS-DTL-VEH-DIVISION-C           PIC X(01).\n05  WS-DTL-WMI-WMI-C                PIC X(03).\n05  WS-DTL-LCL-PLT-C                PIC X(03).\n05  WS-DTL-VWS-TOT-US-A             PIC S9(07)V99 COMP-3.\n05  WS-DTL-VEH-GBL-DLR-C            PIC X(06).\n05  WS-DTL-ORIG-VST-GBL-LOC-C       PIC X(06).\n05  WS-DTL-CURR-VST-GBL-LOC-C       PIC X(06).\n05  WS-DTL-SHIP-TO-DLR-C            PIC X(06).\n05  WS-DTL-CURR-STOCKING-DLR-C      PIC X(06).\n05  WS-DTL-CURR-DLR-C               PIC X(06).\n05  WS-DTL-WDMO-FLEET-C             PIC X(05).\n05  WS-DTL-VRS-LCL-FLEET-C          PIC X(06).\n05  WS-DTL-VRS-CST-FIRST-N          PIC X(30).\n05  WS-DTL-VRS-CST-MID-INIT-X       PIC X(01).\n05  WS-DTL-VRS-CST-LAST-N           PIC X(30).\n05  WS-DTL-VRS-CST-ADDR-1-X         PIC X(40).\n05  WS-DTL-VRS-CST-ADD-DIV2-N       PIC X(40).\n05  WS-DTL-VRS-CST-ADD-DIV1-C       PIC X(02).\n05  WS-DTL-VRS-CST-POSTAL-C         PIC X(10).\n05  WS-DTL-VRS-SALESPERSON-C        PIC X(11).\n05  WS-DTL-VRS-TYP-LCL-CUST-C       PIC X(01).\n05  WS-DTL-VEH-WDMO-ORD-TYP         PIC X(01).\n05  WS-DTL-VEH-ORD-RCPT-Y           PIC X(08).\n05  WS-DTL-VEH-SCHD-VST-TARGET-Y    PIC X(08).\n05  WS-DTL-VEH-PRODUCE-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-RELEASE-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-ARRIVAL-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-INVOICE-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-STOCK-VST-STAT-Y     PIC X(08).\n05  WS-DTL-VEH-RETAIL-VST-STAT-Y    PIC X(08).\n05  WS-DTL-VEH-DELIVER-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-SLSRCPT-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-WARRANT-VST-STAT-Y   PIC X(08).\n05  WS-DTL-VEH-CATALOG-C            PIC X(15).\n05  WS-DTL-WERS-VEH-LINE-C          PIC X(02).\n05  WS-DTL-WERS-BODY-STYLE-C        PIC X(03).\n05  WS-DTL-WERS-BRAND-C             PIC X(01).\n05  WS-DTL-VEH-PO-Y                 PIC X(08).\n05  WS-DTL-VLN-GEVIS-VL-N           PIC X(40).\n05  WS-DTL-FILLER-01                PIC X(550).\n05  INPUT-OUTPUT-PARAMETERS           PIC X(4020).\n* MAIN DRIVING CURSOR\n* THIS CURSOR WILL BE USED TO JOIN THE MEXW001 AND MEXW008 TABLES\n* TO GATHER FLEET SAMES DATA THAT WAS ADDED/UPDATED AFTER THE\n* THE LAST RUN.\n* NOTE: THE DATA SOURCE IS POPULATED FROM THE INPUT SYSPARM FILE.\nEXEC SQL\nDECLARE  SALE_CHK_CSR CURSOR FOR\nSELECT  VEH.VEH_VIN_FULL_C\n,VEH.VEH_ORD_ID_C\n,VEH.DTA_DATA_SRC_C\n,VEH.BDT_MDL_YR_Y\n,VEH.WMI_WMI_C\n,VEH.VEH_LCL_PLT_C\n,VEH.VEH_LCL_BDYTYP_C\n,VEH.VEH_GBL_ORD_DLR_C\n,VEH.VEH_GBL_SHIP_TO_C\n,VEH.VEH_ORD_RCPT_Y\n,VEH.VEH_WDMO_FLEET_C\n,VEH.VEH_WDMO_ORD_TYP\n,VEH.VEH_CATALOG_C\n,VEH.VEH_GBL_CATALOG_C\n,VEH.VEH_PO_Y\n,VEH.VEH_GEVIS_VL_C\n,VEH.COUNTRY_ISO3_C\nFROM  MEXW001_VEH_ORDER VEH\n,MEXW008_VEH_RTL   VRS\nWHERE  VRS.DTA_DATA_SRC_C = :VRS-DTA-DATA-SRC-C\nAND  VRS.VRS_UPDT_S     > :PV-PREV-RUN-TIMESTAMP\nAND  VRS.VRS_ACTIVE_F   = :PL-Y\nAND  VRS.VRS_TYP_LCL_CUST_C IN (:PL-F1,\n:PL-7,\n:PL-F2,\n:PL-3,\n:PL-F3,\n:PL-T,\n:PL-F4,\n:PL-4,\n:PL-L2,\n:PL-L4,\n:PL-D)\nAND  VEH.VEH_ORD_ID_C   = VRS.VEH_ORD_ID_C\nAND  VEH.DTA_DATA_SRC_C = VRS.DTA_DATA_SRC_C\nAND  VEH.VEH_VIN_FULL_C > :PL-VEH-VIN-BLANK\nAND  VEH.VEH_ACTIVE_F   = :PL-Y\nEND-EXEC\n* THIS CURSOR WILL BE USED TO SELECT ONE ROW FROM TABLE MEXW031\n* FOR NON 'NA' AND NON 'EA' DATA SOURCES.  THE RETRIEVED VALUES\n* WILL BE USED IN PLACE OF THE LOCAL BODY STYLE CODE THAT WAS\n* OBTAINED FROM TABLE MEXW001.\nEXEC SQL\nDECLARE  MEXW031_CSR CURSOR FOR\nSELECT  OPT_OPTION_C\n,VPT_PROD_TYP_C\nFROM  MEXW031_CATMAP\nWHERE  DTA_DATA_SRC_C    = :CTM-DTA-DATA-SRC-C\nAND  CTM_LCL_CATALOG_C = :CTM-LCL-CATALOG-C\nAND  OFM_OPTION_FAM_C IN (:PL-BS, :PL-CA)\nOPTIMIZE FOR 1 ROW\nEND-EXEC\n* THIS CURSOR IS BEING USED IN ORDER TO RETRIEVE THE ORIGINAL\n* INVOICING DEALER FROM TABLE MEXW003 BY FETCHING THE NEWEST\n* ROW CONTAINING A \"40V\" STATUS CODE AND A SENDING SOURCE OF WD.\nEXEC SQL\nDECLARE  MEXW003_40V_CSR CURSOR FOR\nSELECT  VST_GBL_LOC_C\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C       = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C     = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C       = :VST-STA-STATUS-C\nAND  VST_ACTIVE_F       = :VST-ACTIVE-F\nAND  VST_STAT_TYP_C     = :VST-STAT-TYP-C\nAND  VST_CUR_DATA_SRC_C = :VST-CUR-DATA-SRC-C\nORDER BY  VST_STAT_Y  DESC\n,VST_STATIC_ISRT_REC_S  DESC\nEND-EXEC\n*            LINKAGE SECTION",
              "is_file_call_required": false
            }
          ]
        },
        {
          "linkage_section": [
            {
              "line": "478-479",
              "type": "LinkageDescription",
              "syntax": "LINKAGE SECTION.\n*              P R O C E D U R E   D I V I S I O N               *",
              "is_file_call_required": false
            }
          ]
        }
      ],
      "procedure_division": [
        {
          "line": "481-486",
          "type": "Paragraph",
          "syntax": "*                        M A I N L I N E                         *\n* JOB WILL END WITH A RETURN-CODE 3 UNDER THE FOLLOWING          *\n* CONDITIONS:                                                    *\n*  1. IF AN ORDER-ID AND PRODUCTION SOURCES IS NOT FOUND (+100)  *\n*     WHEN EXWWSSTK SUBROUTINE WAS CALLED.                       *\n* AN EMAIL WILL BE SENT TO THE HELPDESK.                         *",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "487-496",
          "type": "Paragraph",
          "syntax": "0000P-MAINLINE.\nPERFORM 0400P-INITIALIZE-OTHER\nPERFORM 1000P-PROCESS UNTIL END-OF-SYSPARM-FILE\nPERFORM 0700P-CONCLUDE-OTHER\nIF SEND-EMAIL\nMOVE 3 TO RETURN-CODE\nEND-IF\nGOBACK\n.\n* PROGRAM SPECIFIC INITIALIZATION                                *",
          "paragraph_name": "0000P-MAINLINE",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "0400P-INITIALIZE-OTHER",
            "1000P-PROCESS",
            "0700P-CONCLUDE-OTHER"
          ]
        },
        {
          "line": "497-520",
          "type": "Paragraph",
          "syntax": "0400P-INITIALIZE-OTHER.\nOPEN INPUT  SYSPARM-FILE\nEXTEND AUDIT-FILE\nOUTPUT MKT-ASSOC-FILE\nSET NOT-END-OF-SYSPARM-FILE       TO TRUE\nINITIALIZE  WS-MKT-ASSOC-DETAIL-RECORD\nPROGRAM-SWITCHES\nPROGRAM-VARIABLES\nPERFORM 7000P-OBTAIN-DRBN-TIMESTAMP\nPERFORM 7200P-SELECT-PRV-RUN-TIMESTAMP\nMOVE GNT-ATTRIBUTE-DATA           TO PV-PREV-RUN-TIMESTAMP\nPERFORM 7300P-GET-BATCH-NBR\nMOVE GNT-ATTRIBUTE-DATA (1:5)     TO PV-PREV-BATCH-NBR\nIF PV-PREV-BATCH-NBR = 99999\nMOVE 0                         TO PV-PREV-BATCH-NBR\nEND-IF\nCOMPUTE PV-CURRENT-BATCH-NBR = PV-PREV-BATCH-NBR + 1\nMOVE WHEN-COMPILED                TO SV-COMPILE-DATE-TIME\nPERFORM 9100P-GET-CURRENT-DATE-TIME\nPERFORM 9200P-WRITE-AUDIT-HEADER\nPERFORM 8000P-GET-SYSPARM-RECORD\nPERFORM 7400P-POPULATE-HUB-HEADER\n.\n* PROGRAM SPECIFIC CONCLUSION                                    *",
          "paragraph_name": "0400P-INITIALIZE-OTHER",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "7000P-OBTAIN-DRBN-TIMESTAMP",
            "7200P-SELECT-PRV-RUN-TIMESTAMP",
            "7300P-GET-BATCH-NBR",
            "9100P-GET-CURRENT-DATE-TIME",
            "9200P-WRITE-AUDIT-HEADER",
            "8000P-GET-SYSPARM-RECORD",
            "7400P-POPULATE-HUB-HEADER"
          ]
        },
        {
          "line": "521-535",
          "type": "Paragraph",
          "syntax": "0700P-CONCLUDE-OTHER.\nPERFORM 7250P-UPDATE-TIMESTAMP\nPERFORM 7350P-UPDATE-BATCH-NBR\nPERFORM 7450P-POPULATE-HUB-TRAILER\nPERFORM 6020P-WRITE-AUDIT-DETAIL\nPERFORM 9100P-GET-CURRENT-DATE-TIME\nPERFORM 9300P-WRITE-AUDIT-TRAILER\nCLOSE SYSPARM-FILE\nAUDIT-FILE\nMKT-ASSOC-FILE\n.\n* MAIN DRIVING PARAGRAPH CALLED FROM 0000P-MAINLINE.  A LOOP WILL\n* BE PERFORMED WHICH WILL PROCESS ALL VEHICLES FOR A PRODUCTION\n* SOURCE.  AT THE END OF THE LOOP, THE NEXT PRODUCTION SOURCE\n* WILL BE READ IN.",
          "paragraph_name": "0700P-CONCLUDE-OTHER",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "7250P-UPDATE-TIMESTAMP",
            "7350P-UPDATE-BATCH-NBR",
            "7450P-POPULATE-HUB-TRAILER",
            "6020P-WRITE-AUDIT-DETAIL",
            "9100P-GET-CURRENT-DATE-TIME",
            "9300P-WRITE-AUDIT-TRAILER"
          ]
        },
        {
          "line": "536-548",
          "type": "Paragraph",
          "syntax": "1000P-PROCESS.\nPERFORM 2100P-OPEN-SALE-CHK-CSR\nPERFORM 2120P-FETCH-SALE-CHK-CSR\nPERFORM 2040P-PROCESS-SALE-CHK-CSR\nUNTIL SALE-CHK-NOT-FOUND\nPERFORM 2140P-CLOSE-SALE-CHK-CSR\nPERFORM 8000P-GET-SYSPARM-RECORD\n.\n* THIS PARAGRAPH IS USED TO PROCESS ROWS SELECTED FROM THE\n* SALE_CHK_CSR. FIRST, WE WILL VERIFY IF THE DEALER IS WDMO\n* BASED AND IF IT IS, WE WILL THEN MOVE ALL DATA FOR THE\n* VEHICLE TO THE OUTPUT RECORD.  AFTERWARDS, THE NEXT ROW WILL\n* BE SELECTED FROM THE SALE_CHK_CSR.",
          "paragraph_name": "1000P-PROCESS",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "2100P-OPEN-SALE-CHK-CSR",
            "2120P-FETCH-SALE-CHK-CSR",
            "2040P-PROCESS-SALE-CHK-CSR",
            "2140P-CLOSE-SALE-CHK-CSR",
            "8000P-GET-SYSPARM-RECORD"
          ]
        },
        {
          "line": "549-560",
          "type": "Paragraph",
          "syntax": "2040P-PROCESS-SALE-CHK-CSR.\nPERFORM 2050P-VERIFY-WDMO-DEALER\nIF WDMO-DEALER AND SSTK-SUCCESSFUL\nPERFORM 5000P-PROCESS-GEVIS-DETAIL-REC\nEND-IF\nPERFORM 2120P-FETCH-SALE-CHK-CSR\n.\n* A CALL IS PLACED TO SUBROUTINE EXWWSSTK IN ORDER TO OBTAIN THE\n* CURRENT STOCKING DEALER FOR A VEHICLE.  AFTERWARDS, USING THE\n* CURRENT STOCKING DEALER (IF ONE WAS FOUND), A CALL WILL BE\n* PLACED TO TABLE MEXW035 TO DETERMINE WHETHER OR NOT THE STOCK-\n* ING DEALER IS WDMO BASED.",
          "paragraph_name": "2040P-PROCESS-SALE-CHK-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "2050P-VERIFY-WDMO-DEALER",
            "5000P-PROCESS-GEVIS-DETAIL-REC",
            "2120P-FETCH-SALE-CHK-CSR"
          ]
        },
        {
          "line": "561-582",
          "type": "Paragraph",
          "syntax": "2050P-VERIFY-WDMO-DEALER.\nPERFORM 2060P-CALL-EXWWSSTK\nIF SSTK-SUCCESSFUL\nMOVE SSTK-GBL-STK-DLR-C        TO\nPV-VST-GBL-LOC-C-REFORMAT\nMOVE PV-VST-GBL-LOC-C-REFORMAT TO DLR-DLR-DLR-C\nPERFORM 5050P-GET-MEXW035-DATA\nIF MEXW035-FOUND\nIF DLR-SUB-SUBLVL1-C  = PL-WDM\nSET WDMO-DEALER          TO TRUE\nELSE\nSET NOT-WDMO-DEALER      TO TRUE\nEND-IF\nELSE\nSET NOT-WDMO-DEALER         TO TRUE\nEND-IF\nEND-IF\n.\n* USING PRODUCTION SOURCE AND ORDER-ID, A CALL WILL NOW BE PLACED\n* TO SUBROUTINE EXWWSSTK TO OBTAIN THE CURRENT STOCKING DEALER,\n* CURRENT STOCKING DEALER STATUS CODE AND CURRENT STOCKING\n* DEALER STATUS DATE.",
          "paragraph_name": "2050P-VERIFY-WDMO-DEALER",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "2060P-CALL-EXWWSSTK",
            "5050P-GET-MEXW035-DATA"
          ]
        },
        {
          "line": "583-597",
          "type": "Paragraph",
          "syntax": "2060P-CALL-EXWWSSTK.\nINITIALIZE SSTK-I-O-DATA\nSET SSTK-INQUIRY-MODE            TO TRUE\nMOVE VEH-ORD-ID-C                TO SSTK-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C          TO SSTK-DTA-DATA-SRC-C\nCALL  \"EXWWSSTK\"  USING SSTK-I-O-DATA\nEVALUATE TRUE\nWHEN SSTK-SUCCESSFUL\nADD +1                   TO PV-NBR-EXWWSSTK-CALLS\nWHEN SSTK-DB2-ERROR\nPERFORM 2070P-SSTK-FATAL-ERROR\nEND-EVALUATE\n.\n* THIS PARAGRAPH HANDLES THE FATAL ERROR TOMBSTONE FORMATTING OF\n* THE CALL THAT WAS PLACED TO SUBROUTINE EXWWSSTK.",
          "paragraph_name": "2060P-CALL-EXWWSSTK",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "2070P-SSTK-FATAL-ERROR"
          ]
        },
        {
          "line": "598-711",
          "type": "Paragraph",
          "syntax": "2070P-SSTK-FATAL-ERROR.\nMOVE SPACES                      TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"PGM NAME: \"                TO AUDIT-LABEL\nMOVE SSTK-PGM-ID                 TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"RET CODE: \"                TO AUDIT-LABEL\nMOVE SSTK-RETURN-CD              TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"PARAGRAPH: \"               TO AUDIT-LABEL\nMOVE SSTK-PARAGRAPH              TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE SPACES                      TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"TBL NAME1: \"               TO AUDIT-LABEL\nMOVE SSTK-DB2-TABLE1             TO AUDIT-DATA\nWRITE AUDIT-RECORD\nIF SSTK-DB2-TABLE2 > SPACES\nMOVE \"TBL NAME2: \"            TO AUDIT-LABEL\nMOVE SSTK-DB2-TABLE2          TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-DB2-TABLE3 > SPACES\nMOVE \"TBL NAME3: \"            TO AUDIT-LABEL\nMOVE SSTK-DB2-TABLE3          TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-DB2-TABLE4 > SPACES\nMOVE \"TBL NAME4: \"            TO AUDIT-LABEL\nMOVE SSTK-DB2-TABLE4          TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-DB2-TABLE5 > SPACES\nMOVE \"TBL NAME5: \"            TO AUDIT-LABEL\nMOVE SSTK-DB2-TABLE5          TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nMOVE SPACES                      TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"HOST VAR1: \"               TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR1              TO AUDIT-DATA\nWRITE AUDIT-RECORD\nIF SSTK-HOST-VAR2 > SPACES\nMOVE \"HOST VAR2: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR2           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR3 > SPACES\nMOVE \"HOST VAR3: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR3           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR4 > SPACES\nMOVE \"HOST VAR4: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR4           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR5 > SPACES\nMOVE \"HOST VAR5: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR5           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR6 > SPACES\nMOVE \"HOST VAR6: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR6           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR7 > SPACES\nMOVE \"HOST VAR7: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR7           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nIF SSTK-HOST-VAR8 > SPACES\nMOVE \"HOST VAR8: \"            TO AUDIT-LABEL\nMOVE SSTK-HOST-VAR8           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nMOVE SPACES                      TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"SQL CODE: \"                TO AUDIT-LABEL\nMOVE SSTK-SQL-RETURN-CODE        TO PV-PROCESS-SQLCODE-EDIT\nMOVE PV-PROCESS-SQLCODE-EDIT     TO AUDIT-DATA\nWRITE AUDIT-RECORD\nIF SSTK-SQL-WARNING > SPACES\nMOVE \"SQL-WARN: \"             TO AUDIT-LABEL\nMOVE  SSTK-SQL-WARNING        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nEND-IF\nMOVE \"SQL-FUNC: \"                TO AUDIT-LABEL\nMOVE SSTK-SQL-FUNCTION           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"SQL-MSG1: \"                TO AUDIT-LABEL\nMOVE  SSTK-SQL-MSG1              TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"SQL-MSG2: \"                TO AUDIT-LABEL\nMOVE SSTK-SQL-MSG2               TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"SQL-MSG3: \"                TO AUDIT-LABEL\nMOVE SSTK-SQL-MSG3               TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"SQL-MSG4: \"                TO AUDIT-LABEL\nMOVE SSTK-SQL-MSG4               TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE SPACES                      TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nIF SSTK-SQL-RETURN-CODE = 100\nSET SEND-EMAIL                TO TRUE\nADD +1 TO PV-NBR-EXWWSSTK-NOTFOUND-CALLS\nELSE\nPERFORM 9999C-CALL-COREDUMP\nEND-IF\n.\n* OPENS THE SALES CHECK CURSOR WHICH RETRIEVES ALL SALES THAT\n* HAVE OCCURRED SINCE THE LAST RUN.",
          "paragraph_name": "2070P-SSTK-FATAL-ERROR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999C-CALL-COREDUMP"
          ]
        },
        {
          "line": "712-729",
          "type": "Paragraph",
          "syntax": "2100P-OPEN-SALE-CHK-CSR.\nMOVE WS-SYSPARM-DATA-SRC         TO VRS-DTA-DATA-SRC-C\nMOVE PL-Y                        TO VRS-ACTIVE-F\nEXEC SQL\nOPEN SALE_CHK_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nIF  NOT SC-DB2-SQLCODE-OK\nMOVE SQLCODE                 TO DB2-ABEND-SQLCODE\nMOVE \"OPEN\"                  TO DB2-ABEND-FUNCTION\nMOVE PL-SALE-CHK-CSR         TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG           TO ABEND-MSG\nMOVE \"2100P\"                 TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-IF\n.\n* FETCHES A ROW FROM THE SALES CHECK CURSOR WHICH RETRIEVES ALL\n* SALES THAT HAVE OCCURRED SINCE THE LAST RUN.",
          "paragraph_name": "2100P-OPEN-SALE-CHK-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "730-768",
          "type": "Paragraph",
          "syntax": "2120P-FETCH-SALE-CHK-CSR.\nEXEC SQL\nFETCH  SALE_CHK_CSR\nINTO  :VEH-VIN-FULL-C\n,:VEH-ORD-ID-C\n,:VEH-DTA-DATA-SRC-C\n,:VEH-BDT-MDL-YR-Y\n,:VEH-WMI-WMI-C\n,:VEH-LCL-PLT-C\n,:VEH-LCL-BDYTYP-C\n,:VEH-GBL-ORD-DLR-C\n,:VEH-GBL-SHIP-TO-C\n,:VEH-ORD-RCPT-Y\n,:VEH-WDMO-FLEET-C\n,:VEH-WDMO-ORD-TYP\n,:VEH-CATALOG-C\n,:VEH-GBL-CATALOG-C\n,:VEH-PO-Y\n,:VEH-GEVIS-VL-C\n,:VEH-COUNTRY-ISO3-C\nEND-EXEC\nMOVE SQLCODE                    TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-SALE-CHK\nSET SALE-CHK-FOUND      TO TRUE\nWHEN SC-DB2-SQLCODE-END-OF-CURSOR\nSET SALE-CHK-NOT-FOUND  TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"FETCH\"            TO DB2-ABEND-FUNCTION\nMOVE PL-SALE-CHK-CSR    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"2120P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* CLOSES THE SALES CHECK CURSOR WHICH RETRIEVES ALL SALES THAT\n* HAVE OCCURRED SINCE THE LAST RUN.",
          "paragraph_name": "2120P-FETCH-SALE-CHK-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "769-786",
          "type": "Paragraph",
          "syntax": "2140P-CLOSE-SALE-CHK-CSR.\nEXEC SQL\nCLOSE SALE_CHK_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nIF  NOT SC-DB2-SQLCODE-OK\nMOVE SQLCODE                 TO DB2-ABEND-SQLCODE\nMOVE \"CLOSE\"                 TO DB2-ABEND-FUNCTION\nMOVE PL-SALE-CHK-CSR         TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG           TO ABEND-MSG\nMOVE \"2140P\"                 TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-IF\n.\n* AT THIS POINT, THE VEHICLE HAS BEEN IDENTIFED AS HAVING A\n* CURRENT STOCKING DEALER THAT IS CLASSIFIED AS WDMO.  NOW, OTHER\n* DATA WILL BE GATHERED FOR THE VEHICLE AND THEN MOVED AND\n* WRITTEN TO THE OUTPUT FILE.",
          "paragraph_name": "2140P-CLOSE-SALE-CHK-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "787-884",
          "type": "Paragraph",
          "syntax": "5000P-PROCESS-GEVIS-DETAIL-REC.\nSET WERS-STRING-NOT-FOUND-SW     TO TRUE\nINITIALIZE                          MEXW004-VEH-WERS-STRING\nVWR-WERS-STRING-X-TEXT\nMOVE VEH-DTA-DATA-SRC-C          TO VWR-DTA-DATA-SRC-C\nMOVE VEH-ORD-ID-C                TO VWR-VEH-ORD-ID-C\nPERFORM 7600P-SELECT-WERS-DATA-W004\nMOVE PL-E                        TO WS-DTL-VEH-DIVISION-C\nPERFORM 5020P-MOVE-MEXW001-TO-DTL\nPERFORM 5060P-OBTAIN-RETAIL-DATA\nPERFORM 5040P-MOVE-SSTK-CURRENT-TO-DTL\nPERFORM 5080P-OBTAIN-WHOLESALE-DATA\nPERFORM 5100P-OBTAIN-WERS-DATA\nPERFORM 5120P-OBTAIN-MEXW003-20T\nIF MEXW003-FOUND-20T\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-SCHD-VST-TARGET-Y\nEND-STRING\nEND-IF\nPERFORM 5140P-OBTAIN-MEXW003-30R\nIF MEXW003-FOUND-30R\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-PRODUCE-VST-STAT-Y\nEND-STRING\nELSE\nPERFORM 5160P-OBTAIN-MEXW003-30P\nIF MEXW003-FOUND-30P\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-PRODUCE-VST-STAT-Y\nEND-STRING\nEND-IF\nEND-IF\nPERFORM 5180P-OBTAIN-MEXW003-30T\nIF MEXW003-FOUND-30T\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-RELEASE-VST-STAT-Y\nEND-STRING\nEND-IF\nPERFORM 5200P-OBTAIN-MEXW003-80F\nIF MEXW003-FOUND-80F\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-ARRIVAL-VST-STAT-Y\nEND-STRING\nEND-IF\nPERFORM 5220P-OPEN-40V-CSR\nPERFORM 5230P-FETCH-40V-ROW\nIF MEXW003-40V-CSR-ROW-FOUND\nMOVE VST-GBL-LOC-C           TO WS-DTL-ORIG-VST-GBL-LOC-C\nEND-IF\nPERFORM 5240P-CLOSE-40V-CSR\nIF   PV-COUNT-DTL-NBR  = 999999\nMOVE ZERO                  TO PV-COUNT-DTL-NBR\nEND-IF\nIF   PV-COUNT-LINE-NBR = 999999\nMOVE ZERO                  TO PV-COUNT-LINE-NBR\nEND-IF\nIF MEXW027-FOUND\nINITIALIZE WS-DTL-HUB-REC-ID-NBR\nADD  +1                     TO PV-COUNT-DTL-NBR\nPV-COUNT-LINE-NBR\nMOVE PV-COUNT-LINE-NBR      TO WS-DTL-REC-ID-NBR\nWS-DTL-HUB-LINE-NBR\nMOVE PL-001                 TO WS-DTL-HUB-REC-SEQ-NBR\nMOVE PL-010                 TO WS-DTL-HUB-REC-TYPE\nMOVE WS-MKT-ASSOC-DETAIL-RECORD\nTO MKT-ASSOC-RECORD\nWRITE MKT-ASSOC-RECORD\nADD +1                      TO PV-NBR-OUTPUT-RECS-WRTN\nEND-IF\nINITIALIZE  WS-MKT-ASSOC-DETAIL-RECORD\n.\n* DATA THAT WAS PREVIOUSLY FETCHED FROM TABLE MEXW001 WILL NOW\n* BE MOVED TO THE OUTPUT RECORD.\n* THE BODY STYLE INFORMATION WILL BE RETRIEVED FROM TABLE\n* TABLE MEXW031_CATMAP FOR NON 'NA' AND NON 'EA' SOURCES.\n* NOTE: IF THE NON 'NA' AND NON 'EA' SOURCES ARE NOT FOUND ON\n* TABLE MEXW031, THEN WE WILL MOVE THE VEH-LCL-BDYTYP-C WHICH\n* WAS RETRIEVED FROM TABLE MEXW001.\n* THE MEXW031-CSR WHEN EXECUTED, BRINGS BACK ONE ROW.\n* BODY STYLE - VWR-WERS-STRING-TEXT(10:2) IS THE WERS OPTION\n*              CODE FOR BODY STYLE FROM TABLE MEXW004\n* WHEN MEXW031-CSR IS EXECUTED, IT ONLY BRINGS BACK ONE ROW\n* FOR PROCESSING.",
          "paragraph_name": "5000P-PROCESS-GEVIS-DETAIL-REC",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "7600P-SELECT-WERS-DATA-W004",
            "5020P-MOVE-MEXW001-TO-DTL",
            "5060P-OBTAIN-RETAIL-DATA",
            "5040P-MOVE-SSTK-CURRENT-TO-DTL",
            "5080P-OBTAIN-WHOLESALE-DATA",
            "5100P-OBTAIN-WERS-DATA",
            "5120P-OBTAIN-MEXW003-20T",
            "5140P-OBTAIN-MEXW003-30R",
            "5160P-OBTAIN-MEXW003-30P",
            "5180P-OBTAIN-MEXW003-30T",
            "5200P-OBTAIN-MEXW003-80F",
            "5220P-OPEN-40V-CSR",
            "5230P-FETCH-40V-ROW",
            "5240P-CLOSE-40V-CSR"
          ]
        },
        {
          "line": "885-963",
          "type": "Paragraph",
          "syntax": "5020P-MOVE-MEXW001-TO-DTL.\nMOVE VEH-VIN-FULL-C              TO WS-DTL-VIN-FULL-C\nMOVE VEH-DTA-DATA-SRC-C          TO WS-DTL-DTA-DATA-SRC-C\nMOVE VEH-BDT-MDL-YR-Y            TO PV-VEH-BDT-MDL-YR-Y\nMOVE PV-VEH-BDT-MDL-YR-YY        TO WS-DTL-BDT-MDL-YR-Y\nMOVE VEH-WMI-WMI-C               TO WS-DTL-WMI-WMI-C\nMOVE VEH-LCL-PLT-C               TO WS-DTL-LCL-PLT-C\nIF  WERS-STRING-FOUND-SW\nMOVE VWR-WERS-STRING-X-TEXT(10:2)\nTO WS-DTL-LCL-BDYTYP-C\nELSE\nPERFORM 5300P-OPEN-MEXW031-CSR\nPERFORM 5320P-FETCH-MEXW031-CSR\nPERFORM 5340P-CLOSE-MEXW031-CSR\nIF MEXW031-FOUND\nMOVE CTM-OPT-OPTION-C      TO WS-DTL-LCL-BDYTYP-C\nELSE\nMOVE VEH-LCL-BDYTYP-C      TO WS-DTL-LCL-BDYTYP-C\nEND-IF\nEND-IF\nMOVE VEH-GBL-ORD-DLR-C           TO DLR-DLR-DLR-C\nPERFORM 5050P-GET-MEXW035-DATA\nIF MEXW035-FOUND\nIF DLR-SUPER-DLR-C = ZEROS\nMOVE SPACES                TO WS-DTL-VEH-GBL-DLR-C\nELSE\nMOVE DLR-SUPER-DLR-C       TO\nPV-DTL-VEH-GBL-DLR-C-REFORMAT\nMOVE PV-DTL-VEH-GBL-DLR-C-REFORMAT\nTO WS-DTL-VEH-GBL-DLR-C\nEND-IF\nELSE\nMOVE SPACES                   TO WS-DTL-VEH-GBL-DLR-C\nEND-IF\n*    ----------------------------------------------------------\n*    THE SHIP TO DEALER IS THE DEALER THAT WAS REPORTED AT THE\n*    TIME OF THE ORDER, SO IF IT'S EQUAL TO SPACES, WE WILL USE\n*    THE ORIGINAL ORDERING DEALER.\n*    ----------------------------------------------------------\nIF   VEH-GBL-SHIP-TO-C\n> SPACES\nMOVE VEH-GBL-SHIP-TO-C      TO WS-DTL-SHIP-TO-DLR-C\nELSE\nMOVE WS-DTL-VEH-GBL-DLR-C   TO WS-DTL-SHIP-TO-DLR-C\nEND-IF\nSTRING VEH-ORD-RCPT-Y (1:4)\nVEH-ORD-RCPT-Y (6:2)\nVEH-ORD-RCPT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-ORD-RCPT-Y\nEND-STRING\nMOVE VEH-WDMO-FLEET-C            TO WS-DTL-WDMO-FLEET-C\nMOVE VEH-WDMO-ORD-TYP            TO WS-DTL-VEH-WDMO-ORD-TYP\nMOVE VEH-GBL-CATALOG-C           TO WS-DTL-VEH-CATALOG-C\nIF VEH-PO-Y > PL-DB2-DATE-MIN\nSTRING VEH-PO-Y (1:4)\nVEH-PO-Y (6:2)\nVEH-PO-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-PO-Y\nEND-STRING\nEND-IF\nMOVE VEH-GEVIS-VL-C              TO WS-DTL-GEVIS-VEH-LINE-C\n.\n* THE CURRENT DEALER/STOCKING DEALER, CURRENT STATUS CODE AND\n* CURRENT STATUS CODE DATE WERE RETRIEVED EARLIER.  NOW THE CUR-\n* RENT VEHICLE'S STATUS CODE WILL BE USED TO OBTAIN THE VINCENT\n* EQUIVALENT FROM TABLE MEXW027 USING \"VI\" AS THE PRODUCTION\n* SOURCE.\n* NOTE: DURING DEVELOPMENT OF THIS PROGRAM, IT WAS DECIDED TO\n* INSERT GLOBAL/LOCAL CODES ON THE MEXW027 CONVERSION TABLE,\n* WITH THE VALUES THAT VINCENT USES FOR THEIR VRULES PROCESSING.\n* RATHER THAN HARD CODING THE VALUES IN THIS PROGRAM AND THE\n* STORED PROCEDURE (EXWWGEVP), IT IS BETTER TO MAKE A DIRECT CALL\n* TO THE TABLE WHERE THE CODES CAN BE MORE EASILY CHANGED, SHOULD\n* A CHANGE ARISE IN THE FUTURE.\n* A CHECK HAS BEEN ADDED TO SEND VINCENT A STATUS CODE OF 600\n* INSTEAD OF 800 WHEN THERE ARE NO SALES TYPE OR SALES DATE\n* AVAILABLE.",
          "paragraph_name": "5020P-MOVE-MEXW001-TO-DTL",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5300P-OPEN-MEXW031-CSR",
            "5320P-FETCH-MEXW031-CSR",
            "5340P-CLOSE-MEXW031-CSR",
            "5050P-GET-MEXW035-DATA"
          ]
        },
        {
          "line": "964-1020",
          "type": "Paragraph",
          "syntax": "5040P-MOVE-SSTK-CURRENT-TO-DTL.\nINITIALIZE PS-MEXW027-SW\nMOVE SSTK-GBL-STK-DLR-C        TO\nPV-VST-GBL-LOC-C-REFORMAT\nMOVE PV-VST-GBL-LOC-C-REFORMAT TO DLR-DLR-DLR-C\nPERFORM 5050P-GET-MEXW035-DATA\nIF MEXW035-FOUND\nIF DLR-SUPER-DLR-C = ZEROS\nMOVE SPACES              TO WS-DTL-CURR-STOCKING-DLR-C\nWS-DTL-CURR-DLR-C\nELSE\nMOVE DLR-SUPER-DLR-C     TO\nPV-DLR-SUPER-DLR-C-REFORMAT\nMOVE PV-DLR-SUPER-DLR-C-REFORMAT\nTO\nWS-DTL-CURR-STOCKING-DLR-C\nWS-DTL-CURR-DLR-C\nEND-IF\nELSE\nMOVE SPACES                 TO WS-DTL-CURR-STOCKING-DLR-C\nWS-DTL-CURR-DLR-C\nEND-IF\nIF WS-DTL-CURR-STOCKING-DLR-C > SPACES\nSTRING SSTK-CUR-STAT-Y (1:4)\nSSTK-CUR-STAT-Y (6:2)\nSSTK-CUR-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-STOCK-VST-STAT-Y\nEND-STRING\nEND-IF\nIF SSTK-CUR-STAT-C > SPACES\nPERFORM 5045P-SELECT-MEXW027-DATA\nIF MEXW027-NOT-FOUND\nPERFORM 9050P-MISSING-MEXW027-ROW\nEND-IF\nIF MEXW027-FOUND\nMOVE CNT-LCL-DATA-X (1:3)  TO WS-DTL-CUR-STA-STATUS-C\nEND-IF\nEND-IF\nIF WS-DTL-CUR-STA-STATUS-C = PL-800\nIF   VRS-TYP-LCL-CUST-C = PL-A4\nMOVE PL-801              TO WS-DTL-CUR-STA-STATUS-C\nELSE\nIF   WS-DTL-VRS-TYP-LCL-CUST-C     = SPACES\nOR WS-DTL-VEH-SLSRCPT-VST-STAT-Y = SPACES\nMOVE PL-600           TO WS-DTL-CUR-STA-STATUS-C\nEND-IF\nEND-IF\nEND-IF\n.\n* THE VINCENT EQUIVALENT STATUS CODE WILL NOW BE OBTAINED FOR THE\n* CURRENT STATUS CODE THAT WAS RETRIEVED FROM SUBROUTINE EXWWSSTK.\n* SPECIAL NOTE:  WHEN ADDING ROWS TO TABLE MEXW027 FOR VINCENT,\n* THE GLOBAL STATUS CODES MUST BE UNIQUE. THE FOLLOWING RULE\n* ALSO APPLIES- THERE CAN EXIST ONE LOCAL STATUS CODE THAT CAN\n* BE ASSIGNED TO SEVERAL DIFFERENT GLOBAL STATUS CODES (I.E.\n* LOCAL CODE = 600 HAS MULTIPLE GLOBAL CODES OF 80J & 90U).",
          "paragraph_name": "5040P-MOVE-SSTK-CURRENT-TO-DTL",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5050P-GET-MEXW035-DATA",
            "5045P-SELECT-MEXW027-DATA",
            "9050P-MISSING-MEXW027-ROW"
          ]
        },
        {
          "line": "1021-1048",
          "type": "Paragraph",
          "syntax": "5045P-SELECT-MEXW027-DATA.\nMOVE SSTK-CUR-STAT-C             TO CNT-GBL-DATA-X\nMOVE PL-STATUS                   TO CNT-CND-CNV-TYP-C\nMOVE PL-VI                       TO CNT-DTA-DATA-SRC-C\nEXEC SQL\nSELECT  CNT_LCL_DATA_X\nINTO :CNT-LCL-DATA-X\nFROM  MEXW027_CONV\nWHERE  CND_CNV_TYP_C     = :CNT-CND-CNV-TYP-C\nAND  DTA_DATA_SRC_C    = :CNT-DTA-DATA-SRC-C\nAND  CNT_GBL_DATA_X    = :CNT-GBL-DATA-X\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW027\nSET MEXW027-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW027-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-CONV        TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5045P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.",
          "paragraph_name": "5045P-SELECT-MEXW027-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1049-1084",
          "type": "Paragraph",
          "syntax": "5050P-GET-MEXW035-DATA.\n* A CALL WILL BE PLACED TO TABLE MEXW035 IN EITHER OF TWO SIT-\n* UATIONS.  1) TO OBTAIN THE SUPER DEALER CODE WHICH WILL BE\n* USED IN PLACE OF THE GLOBAL ORDERING DEALER CODE AND/OR GLOBAL\n* CURRENT STOCKING DEALER CODE.  2)  TO DETERMINE WHETHER OR NOT\n* THE CURRENT STOCKING DEALER IS WDMO BASED.\nEXEC SQL\nSELECT\nSUB_SUBLVL1_C\n,DLR_SUPER_DLR_C\nINTO :DLR-SUB-SUBLVL1-C\n,:DLR-SUPER-DLR-C\nFROM  MEXW035_DLR_MSTR\nWHERE  DLR_DLR_C           = :DLR-DLR-DLR-C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW035\nSET MEXW035-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW035-NOT-FOUND   TO TRUE\nPERFORM 9000P-MISSING-MEXW035-ROW\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-DLR-MSTR    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5050P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* A JOIN WILL BE DONE ON TABLES MEXW003 & MEXW008 TO OBTAIN\n* VARIOUS RETAIL DATA (IF THE VEHICLE IS IN RETAIL STATUS).\n* NOTE: THE RETAILED STATUS DATE WILL BE USED TO POPULATE THE\n* DELIVERY DATE WHICH IS THE SAME.",
          "paragraph_name": "5050P-GET-MEXW035-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9000P-MISSING-MEXW035-ROW",
            "9999P-ABEND"
          ]
        },
        {
          "line": "1085-1100",
          "type": "Paragraph",
          "syntax": "5060P-OBTAIN-RETAIL-DATA.\nPERFORM 5065P-SELECT-MEXW008-90V-DATA\nIF MEXW008-FOUND-90V\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-RETAIL-VST-STAT-Y\nEND-STRING\nMOVE WS-DTL-VEH-RETAIL-VST-STAT-Y\nTO WS-DTL-VEH-DELIVER-VST-STAT-Y\nPERFORM 5070P-POPULATE-RETAIL-OUTPUT\nEND-IF\n.\n* A JOIN WILL BE DONE ON TABLES MEXW003 & MEXW008 TO OBTAIN\n* VARIOUS RETAILED DATA (IF THE VEHICLE HAS REACHED RETAIL STATUS)",
          "paragraph_name": "5060P-OBTAIN-RETAIL-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5065P-SELECT-MEXW008-90V-DATA",
            "5070P-POPULATE-RETAIL-OUTPUT"
          ]
        },
        {
          "line": "1101-1175",
          "type": "Paragraph",
          "syntax": "5065P-SELECT-MEXW008-90V-DATA.\nMOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\nMOVE PL-90V                      TO VST-STA-STATUS-C\nMOVE PL-Y                        TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT\nA.VST_STAT_Y\n,B.VRS_LCL_FLEET_C\n,B.VRS_CST_FIRST_N\n,B.VRS_CST_BUS_1_N\n,B.VRS_CST_BUS_2_N\n,B.VRS_CST_MID_INIT_X\n,B.VRS_CST_LAST_N\n,B.VRS_CST_ADDR_1_X\n,B.VRS_CST_ADD_DIV2_N\n,B.VRS_CST_ADD_DIV1_C\n,B.VRS_CST_POSTAL_C\n,B.VRS_SALESPERSON_C\n,B.VRS_TYP_LCL_CUST_C\n,B.VRS_RPT_SALE_Y\n,B.VRS_WARR_STRT_Y\nINTO  :VST-STAT-Y\n,:VRS-LCL-FLEET-C\n,:VRS-CST-FIRST-N\n,:VRS-CST-BUS-1-N\n,:VRS-CST-BUS-2-N\n,:VRS-CST-MID-INIT-X\n,:VRS-CST-LAST-N\n,:VRS-CST-ADDR-1-X\n,:VRS-CST-ADD-DIV2-N\n,:VRS-CST-ADD-DIV1-C\n,:VRS-CST-POSTAL-C\n,:VRS-SALESPERSON-C\n,:VRS-TYP-LCL-CUST-C\n,:VRS-RPT-SALE-Y\n,:VRS-WARR-STRT-Y\nFROM  MEXW003_VEH_STATUS A\n,MEXW008_VEH_RTL B\nWHERE  A.VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  A.DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  A.STA_STATUS_C      = :VST-STA-STATUS-C\nAND  A.VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  A.VST_ACTIVE_F      = :VST-ACTIVE-F\nAND  A.VST_ACTIVE_F      = B.VRS_ACTIVE_F\nAND  A.STA_STATUS_C      = B.STA_STATUS_C\nAND  A.VEH_ORD_ID_C      = B.VEH_ORD_ID_C\nAND  A.DTA_DATA_SRC_C    = B.DTA_DATA_SRC_C\nAND  SUBSTR(A.VST_LCL_LOC_C, 1,7)\n= B.VRS_LCL_DLR_C\nAND  A.VST_STAT_Y        = B.VRS_RETAIL_Y\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW008\nSET MEXW008-FOUND-90V   TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW008-NOT-FOUND-90V TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-MEXW003-08  TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5065P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* IF A 90V STATUS WAS FOUND FOR THE VEHICLE, THEN VARIOUS RETAIL\n* SALES DATA WILL BE MOVED TO CORRESPONDING OUTPUT FIELDS.  IF\n* THE 90V STATUS WAS NOT FOUND FOR THE VEHICLE, THEN SPACES WILL\n* BE MOVED TO THOSE OUTPUT FIELDS.\n* PER CUSTOMER, IF CUSTOMER FIRST NAME & LAST NAME IS BLANK, THEN\n* THE BUSINESS NAME WILL BE MOVED TO THE FIRST NAME FIELD",
          "paragraph_name": "5065P-SELECT-MEXW008-90V-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1176-1222",
          "type": "Paragraph",
          "syntax": "5070P-POPULATE-RETAIL-OUTPUT.\nMOVE VRS-LCL-FLEET-C             TO WS-DTL-VRS-LCL-FLEET-C\nIF    VRS-CST-FIRST-N = SPACES\nAND VRS-CST-LAST-N  = SPACES\nMOVE VRS-CST-BUS-1-N (1:30) TO WS-DTL-VRS-CST-FIRST-N\nMOVE VRS-CST-BUS-2-N (1:30) TO WS-DTL-VRS-CST-LAST-N\nELSE\nMOVE VRS-CST-FIRST-N       TO WS-DTL-VRS-CST-FIRST-N\nMOVE VRS-CST-MID-INIT-X    TO WS-DTL-VRS-CST-MID-INIT-X\nMOVE VRS-CST-LAST-N        TO WS-DTL-VRS-CST-LAST-N\nEND-IF\nMOVE VRS-CST-ADDR-1-X           TO WS-DTL-VRS-CST-ADDR-1-X\nMOVE VRS-CST-ADD-DIV2-N         TO WS-DTL-VRS-CST-ADD-DIV2-N\nMOVE VRS-CST-ADD-DIV1-C         TO WS-DTL-VRS-CST-ADD-DIV1-C\nMOVE VRS-CST-POSTAL-C           TO WS-DTL-VRS-CST-POSTAL-C\nMOVE VRS-SALESPERSON-C          TO WS-DTL-VRS-SALESPERSON-C\nPERFORM 5075P-POPULATE-CONCEPS-SLSTYP\n*--- VEHICLE SALES RECEIPT DATE- IF IT EXISTS (> 0001-01-01)\nIF VRS-RPT-SALE-Y > PL-DB2-DATE-MIN\nSTRING VRS-RPT-SALE-Y (1:4)\nVRS-RPT-SALE-Y (6:2)\nVRS-RPT-SALE-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-SLSRCPT-VST-STAT-Y\nEND-STRING\nEND-IF\n*    ----------------------------------------------------------\n*    IF VEHICLE WARRANTY START DATE DOES NOT EXIST (0001-01-01)\n*    WE WILL USE THE RETAIL SALES DATE, IF THE RETAIL SALES\n*    DATE EXISTS (> 0001-01-01).\n*    ----------------------------------------------------------\nIF   VRS-WARR-STRT-Y > PL-DB2-DATE-MIN\nSTRING VRS-WARR-STRT-Y (1:4)\nVRS-WARR-STRT-Y (6:2)\nVRS-WARR-STRT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-WARRANT-VST-STAT-Y\nEND-STRING\nELSE\nIF VRS-RPT-SALE-Y  > PL-DB2-DATE-MIN\nMOVE WS-DTL-VEH-SLSRCPT-VST-STAT-Y\nTO WS-DTL-VEH-WARRANT-VST-STAT-Y\nEND-IF\nEND-IF\n.\n* THE GEVIS CUSTOMER TYPE CODE WILL BE CONVERTED TO A CONCEPS\n* SALES TYPE CODE.",
          "paragraph_name": "5070P-POPULATE-RETAIL-OUTPUT",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5075P-POPULATE-CONCEPS-SLSTYP"
          ]
        },
        {
          "line": "1223-1248",
          "type": "Paragraph",
          "syntax": "5075P-POPULATE-CONCEPS-SLSTYP.\nEVALUATE VRS-TYP-LCL-CUST-C\nWHEN PL-F1\nWHEN PL-7-2\nMOVE PL-7               TO WS-DTL-VRS-TYP-LCL-CUST-C\nWHEN PL-F2\nWHEN PL-3-2\nMOVE PL-3               TO WS-DTL-VRS-TYP-LCL-CUST-C\nWHEN PL-F3\nWHEN PL-T-2\nMOVE PL-T               TO WS-DTL-VRS-TYP-LCL-CUST-C\nWHEN PL-F4\nWHEN PL-4-2\nMOVE PL-4               TO WS-DTL-VRS-TYP-LCL-CUST-C\nWHEN PL-L2\nWHEN PL-L4\nWHEN PL-D-2\nMOVE PL-D               TO WS-DTL-VRS-TYP-LCL-CUST-C\nEND-EVALUATE\n.\n* TABLES MEXW003 & MEXW007 WILL BE JOINED IN ORDER TO OBTAIN\n* VARIOUS WHOLESALE INFORMATION, IF THE VEHICLE HAS REACHED THAT\n* STAGE.\n* NOTE: THE VEHICLE TOTAL AMOUNT MUST BE IN UNITED STATES DOLLAR\n* CURRENCY (USD).  IF IT IS NOT, THEN ZERO WILL BE MOVED TO THE\n* FIELD.",
          "paragraph_name": "5075P-POPULATE-CONCEPS-SLSTYP",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "1249-1268",
          "type": "Paragraph",
          "syntax": "5080P-OBTAIN-WHOLESALE-DATA.\nPERFORM 5085P-SELECT-MEXW003-40V\nIF MEXW003-FOUND-40V\nMOVE VST-GBL-LOC-C           TO WS-DTL-CURR-VST-GBL-LOC-C\nSTRING VST-STAT-Y (1:4)\nVST-STAT-Y (6:2)\nVST-STAT-Y (9:2)\nDELIMITED BY SIZE\nINTO WS-DTL-VEH-INVOICE-VST-STAT-Y\nEND-STRING\nIF VWS-CUR-CURRENCY-C = PL-USD\nMOVE VWS-TOT-LCL-A        TO WS-DTL-VWS-TOT-US-A\nELSE\nMOVE ZERO                 TO WS-DTL-VWS-TOT-US-A\nEND-IF\nEND-IF\n.\n* A JOIN ON TABLES MEXW003 & MEXW007 WILL BE DONE INTO ORDER TO\n* RETRIEVE THE CURRENT INVOICE DEALER, THE INVOICING PREPARATION\n* DATE, THE CURRENCY CODE AND THE VEHICLE TOTAL AMOUNT.",
          "paragraph_name": "5080P-OBTAIN-WHOLESALE-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5085P-SELECT-MEXW003-40V"
          ]
        },
        {
          "line": "1269-1330",
          "type": "Paragraph",
          "syntax": "5085P-SELECT-MEXW003-40V.\nMOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\nMOVE PL-40V                      TO VST-STA-STATUS-C\nMOVE PL-Y                        TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT A.VST_GBL_LOC_C\n,A.VST_STAT_Y\n,B.VWS_TOT_LCL_A\n,B.CUR_CURRENCY_C\nINTO  :VST-GBL-LOC-C\n,:VST-STAT-Y\n,:VWS-TOT-LCL-A\n,:VWS-CUR-CURRENCY-C\nFROM  MEXW003_VEH_STATUS A\n,MEXW007_VEH_WHS B\nWHERE  A.VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  A.DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  A.STA_STATUS_C      = :VST-STA-STATUS-C\nAND  A.VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  A.VST_ACTIVE_F      = :VST-ACTIVE-F\nAND  A.VST_ACTIVE_F      = B.VWS_ACTIVE_F\nAND  A.STA_STATUS_C      = B.STA_STATUS_C\nAND  A.VEH_ORD_ID_C      = B.VEH_ORD_ID_C\nAND  A.DTA_DATA_SRC_C    = B.DTA_DATA_SRC_C\nAND  A.VST_STAT_Y        = B.VWS_DATE_Y\nAND  SUBSTR(A.VST_LCL_LOC_C, 1,7)\n= B.VWS_LCL_DLR_C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW007\nSET MEXW003-FOUND-40V   TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-40V TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-MEXW003-07    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5085P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* THE WERS VEHICLE LINE CODE WILL BE OBTAINED FROM TABLE MEXW034\n* OR FROM TABLE MEXW004_WERS_VL_STRING.\n* IF 'EA' OR 'NA' SOURCED, THE WERS VEHICLE LINE IS OBTAINED FROM\n* MEXW034 DB2 TABLE USING THE PROD SOURCE AND GEVIS VEHICLE LINE,\n* WHICH WAS OBTAINED FROM MEXW001 DB2 TABLE.\n* FOR ALL OTHER SOURCES, IF THE ORDER IS FOUND ON MEXW004 DB2\n* TABLE, USE THE WERS VEHICLE LINE FROM MEXW004 DB2 TABLE AND\n* GEVIS VEHICLE LINE FROM MEXW034 DB2 TABLE WERS PRODUCT TYPE CODE\n* AND WERS BODY USE TO MAKE UP THE WERS BODY STYLE.\n* IF NOT FOUND ON MEXW004 DB2 TABLE, USE WERS VEHICLE LINE\n* FROM MEXW0032 (CATALOG CODE), PRODUCT TYPE AND WERS BODY USE\n* TO MAKE UP WERS BODY STYLE.\n* IF NOT FOUND ON MEXW004 OR MEXW031/MEXW032 DB2 TABLES, WE ARE\n* ASSUMING THE ORDER IS FROM HISTORY FOR 'NA' AND 'EA', USE\n* MEXW034 DB2 TABLE PRODUCT TYPE CODE AND BODY TYPE FROM MEXW033\n* USE TO MAKE UP THE BODY STYLE.",
          "paragraph_name": "5085P-SELECT-MEXW003-40V",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "1331-1383",
          "type": "Paragraph",
          "syntax": "5100P-OBTAIN-WERS-DATA.\nSET MEXW034-NOT-FOUND             TO TRUE\nIF VEH-DTA-DATA-SRC-C = PL-EA OR PL-NA\nIF VEH-GEVIS-VL-C  > PL-SPACES\nPERFORM 5110P-SELECT-W034-DATA\nEND-IF\nIF MEXW034-FOUND\nMOVE VLN-WERS-VL-C          TO  WS-DTL-WERS-VEH-LINE-C\nMOVE VLN-WERS-BRAND-C (2:1) TO WS-DTL-WERS-BRAND-C\nMOVE VLN-GEVIS-VL-N         TO WS-DTL-VLN-GEVIS-VL-N\nEND-IF\nELSE\nIF  WERS-STRING-FOUND-SW\nPERFORM 5102P-WERS-STRING-PROCESS\nELSE\nPERFORM 5112P-SELECT-MEXW032-WERS-VL\nIF  MEXW032-FOUND\nPERFORM 5104P-CATALOG-CODE-PROCESS\nEND-IF\nEND-IF\nEND-IF\nMOVE SPACES                      TO WS-DTL-WERS-BODY-STYLE-C\nIF  WERS-STRING-FOUND-SW\nSTRING VWR-WERS-PRD-TP-C\n, VWR-WERS-STRING-X-TEXT(10:2)\nDELIMITED BY SIZE INTO WS-DTL-WERS-BODY-STYLE-C\nEND-STRING\nELSE\nIF  MEXW031-FOUND\nSTRING CTM-VPT-PROD-TYP-C\n, CTM-OPT-OPTION-C\nDELIMITED BY SIZE INTO WS-DTL-WERS-BODY-STYLE-C\nEND-STRING\nELSE\nIF  VEH-DTA-DATA-SRC-C  =  PL-EA   OR  PL-NA\nPERFORM 5115P-SELECT-MEXW033-DATA\nIF  MEXW033-FOUND\nIF  BDT-WERS-BDY-TYP-C  >  SPACES\nSTRING VLN-WERS-PRD-TP-C\n, BDT-WERS-BDY-TYP-C\nDELIMITED BY SIZE\nINTO WS-DTL-WERS-BODY-STYLE-C\nEND-STRING\nEND-IF\nEND-IF\nEND-IF\nEND-IF\nEND-IF\n.\n* PROCESS FEATURE DATA FROM WERS STRING W004 TABLE\n* EVALUATE WERS VEHICLE LINE.  THESE ARE HANDLED AS\n* EXEPTIONS AS THEY CAN APPEAR MUTIPLE TIMES FOR\n* DIFFERENT GEVIS VEHICLE LINES.",
          "paragraph_name": "5100P-OBTAIN-WERS-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5110P-SELECT-W034-DATA",
            "5102P-WERS-STRING-PROCESS",
            "5112P-SELECT-MEXW032-WERS-VL",
            "5104P-CATALOG-CODE-PROCESS",
            "5115P-SELECT-MEXW033-DATA"
          ]
        },
        {
          "line": "1384-1420",
          "type": "Paragraph",
          "syntax": "5102P-WERS-STRING-PROCESS.\nMOVE VWR-WERS-VL-C               TO PV-WERS-VL-C\nIF  PV-VALID-VEH-LINE-CDS\nPERFORM 5110P-SELECT-W034-DATA\nEVALUATE VWR-WERS-VL-C\nWHEN PL-KI\nWHEN PL-K5\nMOVE PL-L5          TO VLN-GEVIS-VL-C\nMOVE PL-AB          TO VLN-WERS-BRAND-C\nSET MEXW034-FOUND   TO TRUE\nWHEN PL-DB\nMOVE PL-DB          TO VLN-GEVIS-VL-C\nMOVE PL-AB          TO VLN-WERS-BRAND-C\nSET MEXW034-FOUND   TO TRUE\nEND-EVALUATE\nELSE\nPERFORM 5110P-SELECT-W034-DATA\nEND-IF\nIF  VLN-GEVIS-VL-N = LOW-VALUES\nMOVE SPACES TO VLN-GEVIS-VL-N\nEND-IF\nIF  MEXW034-FOUND\nMOVE VLN-GEVIS-VL-C          TO WS-DTL-GEVIS-VEH-LINE-C\nMOVE VWR-WERS-VL-C           TO WS-DTL-WERS-VEH-LINE-C\nMOVE VLN-WERS-BRAND-C (2:1)  TO WS-DTL-WERS-BRAND-C\nMOVE VLN-GEVIS-VL-N          TO WS-DTL-VLN-GEVIS-VL-N\nELSE\nMOVE VEH-GEVIS-VL-C          TO WS-DTL-GEVIS-VEH-LINE-C\nMOVE VWR-WERS-VL-C           TO WS-DTL-WERS-VEH-LINE-C\nMOVE SPACES                  TO WS-DTL-WERS-BRAND-C\nMOVE SPACES                  TO WS-DTL-VLN-GEVIS-VL-N\nEND-IF\n.\n* PROCESS CATALOG CODE\n* EVALUATE CATALOG CODE VEHICLE LINE.  THESE ARE HANDLED AS\n* EXEPTIONS AS THEY CAN APPEAR MUTIPLE TIMES FOR\n* DIFFERENT GEVIS VEHICLE LINES.",
          "paragraph_name": "5102P-WERS-STRING-PROCESS",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5110P-SELECT-W034-DATA"
          ]
        },
        {
          "line": "1421-1448",
          "type": "Paragraph",
          "syntax": "5104P-CATALOG-CODE-PROCESS.\nMOVE CTG-VHL-VEH-LINE-C          TO PV-WERS-VL-C\nIF  PV-VALID-VEH-LINE-CDS\nPERFORM 5114P-SELECT-MEXW034-GEVIS-VL\nEVALUATE CTG-VHL-VEH-LINE-C\nWHEN PL-KI\nWHEN PL-K5\nMOVE PL-L5          TO VLN-GEVIS-VL-C\nMOVE PL-AB          TO VLN-WERS-BRAND-C\nSET MEXW034-FOUND   TO TRUE\nWHEN PL-DB\nMOVE PL-DB          TO VLN-GEVIS-VL-C\nMOVE PL-AB          TO VLN-WERS-BRAND-C\nSET MEXW034-FOUND   TO TRUE\nEND-EVALUATE\nELSE\nPERFORM 5114P-SELECT-MEXW034-GEVIS-VL\nEND-IF\nIF MEXW034-FOUND\nMOVE VLN-GEVIS-VL-C         TO WS-DTL-GEVIS-VEH-LINE-C\nMOVE CTG-VHL-VEH-LINE-C     TO WS-DTL-WERS-VEH-LINE-C\nMOVE VLN-WERS-BRAND-C (2:1) TO WS-DTL-WERS-BRAND-C\nMOVE VLN-GEVIS-VL-N         TO WS-DTL-VLN-GEVIS-VL-N\nEND-IF\n.\n* RETRIEVES THE WERS VEHICLE LINE DATA USING THE GEVIS VEHICLE\n* LINE CODE AND PRODUCTION SOURCE.\n* NOTE: THIS ONLY APPLIES TO 'NA' AND 'EA' DATA SOURCES.",
          "paragraph_name": "5104P-CATALOG-CODE-PROCESS",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "5114P-SELECT-MEXW034-GEVIS-VL"
          ]
        },
        {
          "line": "1449-1485",
          "type": "Paragraph",
          "syntax": "5110P-SELECT-W034-DATA.\nMOVE VEH-DTA-DATA-SRC-C          TO VLN-DTA-DATA-SRC-C\nMOVE VEH-GEVIS-VL-C              TO VLN-GEVIS-VL-C\nMOVE PL-Y                        TO VLN-ACTIVE-F\nEXEC SQL\nSELECT   VLN_WERS_VL_C\n,VLN_WERS_PRD_TP_C\n,VLN_WERS_BRAND_C\n,VLN_GEVIS_VL_N\nINTO  :VLN-WERS-VL-C\n,:VLN-WERS-PRD-TP-C\n,:VLN-WERS-BRAND-C\n,:VLN-GEVIS-VL-N\nFROM  MEXW034_VL_BRAND\nWHERE  DTA_DATA_SRC_C    = :VLN-DTA-DATA-SRC-C\nAND  VLN_GEVIS_VL_C    = :VLN-GEVIS-VL-C\nAND  VLN_ACTIVE_F      = :VLN-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW034\nSET MEXW034-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW034-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VL-BRAND    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5110P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* BY USING THE DATA OBTAINED FROM TABLE MEXW001 IN THE WHERE\n* CLAUSE, THE WERS VEHICLE LINE WILL NOW BE SELECTED.\n* NOTE: THIS ONLY APPLIES TO NON 'NA' AND NON 'EA' DATA SOURCES.",
          "paragraph_name": "5110P-SELECT-W034-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1486-1516",
          "type": "Paragraph",
          "syntax": "5112P-SELECT-MEXW032-WERS-VL.\nMOVE VEH-DTA-DATA-SRC-C          TO CTG-DTA-DATA-SRC-C\nMOVE VEH-CATALOG-C               TO CTG-LCL-CATALOG-C\nEXEC SQL\nSELECT  VHL_VEH_LINE_C\n, VPT_PROD_TYP_C\nINTO :CTG-VHL-VEH-LINE-C\n,:CTG-VPT-PROD-TYP-C\nFROM  MEXW032_CATALOG\nWHERE DTA_DATA_SRC_C    =  :CTG-DTA-DATA-SRC-C\nAND CTG_LCL_CATALOG_C =  :CTG-LCL-CATALOG-C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW032\nSET MEXW032-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW032-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-CATALOG     TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5112P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* RETRIEVES THE GEVIS VEHICLE LINE DATA USING THE DATA SOURCE AND\n* WERS VEHICLE LINE CODE.\n* NOTE: THIS ONLY APPLIES TO NON 'NA' AND NON 'EA' DATA SOURCES.",
          "paragraph_name": "5112P-SELECT-MEXW032-WERS-VL",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1517-1554",
          "type": "Paragraph",
          "syntax": "5114P-SELECT-MEXW034-GEVIS-VL.\nMOVE VEH-DTA-DATA-SRC-C          TO VLN-DTA-DATA-SRC-C\nMOVE CTG-VHL-VEH-LINE-C          TO VLN-WERS-VL-C\nMOVE CTG-VPT-PROD-TYP-C          TO VLN-WERS-PRD-TP-C\nMOVE PL-Y                        TO VLN-ACTIVE-F\nEXEC SQL\nSELECT  VLN_GEVIS_VL_C\n,VLN_WERS_PRD_TP_C\n,VLN_WERS_BRAND_C\n,VLN_GEVIS_VL_N\nINTO :VLN-GEVIS-VL-C\n,:VLN-WERS-PRD-TP-C\n,:VLN-WERS-BRAND-C\n,:VLN-GEVIS-VL-N\nFROM  MEXW034_VL_BRAND\nWHERE  DTA_DATA_SRC_C    = :VLN-DTA-DATA-SRC-C\nAND  VLN_WERS_VL_C     = :VLN-WERS-VL-C\nAND  VLN_ACTIVE_F      = :VLN-ACTIVE-F\nAND  VLN_WERS_PRD_TP_C = :VLN-WERS-PRD-TP-C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW034\nSET MEXW034-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW034-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VL-BRAND    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5114P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* BY USING THE DATA OBTAINED FROM TABLE MEXW001 IN THE WHERE\n* CLAUSE, THE WERS BODY TYPE WILL NOW BE OBTAINED.",
          "paragraph_name": "5114P-SELECT-MEXW034-GEVIS-VL",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1555-1586",
          "type": "Paragraph",
          "syntax": "5115P-SELECT-MEXW033-DATA.\nMOVE VEH-DTA-DATA-SRC-C          TO BDT-PROD-SRC-C\nMOVE VEH-BDT-MDL-YR-Y            TO BDT-START-YR-R\nBDT-END-YR-R\nMOVE VEH-LCL-BDYTYP-C            TO BDT-BDY-TYP-C\nEXEC SQL\nSELECT  BDT_WERS_BDY_TYP_C\nINTO :BDT-WERS-BDY-TYP-C\nFROM  MEXW033_BODY_TYPE\nWHERE  BDT_PROD_SRC_C  = :BDT-PROD-SRC-C\nAND  BDT_BDY_TYP_C   = :BDT-BDY-TYP-C\nAND  BDT_START_YR_R <= :BDT-START-YR-R\nAND  BDT_END_YR_R   >= :BDT-END-YR-R\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW033\nSET MEXW033-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW033-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-BODY-TYPE   TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5115P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* A ROW CONTAINING THE MOST RECENT 20T STATUS CODE WHICH CONSISTS\n* OF THE DATE THAT THE VEHICLE WAS PRODUCED WILL BE RETRIEVED.",
          "paragraph_name": "5115P-SELECT-MEXW033-DATA",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1587-1624",
          "type": "Paragraph",
          "syntax": "5120P-OBTAIN-MEXW003-20T.\nMOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\nMOVE PL-20T                        TO VST-STA-STATUS-C\nMOVE PL-Y                          TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT  VST_STAT_Y\nINTO :VST-STAT-Y\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C      = :VST-STA-STATUS-C\nAND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  VST_ACTIVE_F      = :VST-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                       TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-FOUND-20T     TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-20T TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5120P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* RETRIEVES THE MOST RECENT 30R STATUS CODE WHICH CONSISTS OF THE\n* DATE THAT THE VEHICLE WAS PRODUCED AND PASSED THE PLANT INSPEC-\n* TION. IF NOT FOUND, THEN A 30P STATUS CODE WILL BE SELECTED.\n* THE 30P CONSISTS OF THE DATE THAT THE VEHICLE WAS PRODUCED, BUT\n* INSPECTION DID NOT OCCUR.",
          "paragraph_name": "5120P-OBTAIN-MEXW003-20T",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1625-1659",
          "type": "Paragraph",
          "syntax": "5140P-OBTAIN-MEXW003-30R.\nMOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\nMOVE PL-30R                        TO VST-STA-STATUS-C\nMOVE PL-Y                          TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT  VST_STAT_Y\nINTO :VST-STAT-Y\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C      = :VST-STA-STATUS-C\nAND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  VST_ACTIVE_F      = :VST-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                       TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-FOUND-30R     TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-30R TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5140P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* RETRIEVES THE MOST RECENT 30P STATUS CODE WHICH CONSISTS OF THE\n* DATE THAT THE VEHICLE WAS PRODUCED, BUT NOT INSPECTED.",
          "paragraph_name": "5140P-OBTAIN-MEXW003-30R",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1660-1694",
          "type": "Paragraph",
          "syntax": "5160P-OBTAIN-MEXW003-30P.\nMOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\nMOVE PL-30P                        TO VST-STA-STATUS-C\nMOVE PL-Y                          TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT  VST_STAT_Y\nINTO :VST-STAT-Y\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C      = :VST-STA-STATUS-C\nAND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  VST_ACTIVE_F      = :VST-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                       TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-FOUND-30P     TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-30P TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5160P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* RETRIEVES THE MOST RECENT 30T STATUS CODE WHICH CONSISTS OF THE\n* DATE THAT THE VEHICLE WAS RELEASED FROM THE ASSEMBLY PLANT.",
          "paragraph_name": "5160P-OBTAIN-MEXW003-30P",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1695-1729",
          "type": "Paragraph",
          "syntax": "5180P-OBTAIN-MEXW003-30T.\nMOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\nMOVE PL-30T                        TO VST-STA-STATUS-C\nMOVE PL-Y                          TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT  VST_STAT_Y\nINTO :VST-STAT-Y\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C      = :VST-STA-STATUS-C\nAND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  VST_ACTIVE_F      = :VST-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                       TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-FOUND-30T     TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-30T TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5180P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* RETRIEVES THE MOST RECENT 80F STATUS CODE WHICH CONSISTS OF THE\n* DATE THAT THE VEHICLE HAS ARRIVED AT THE FINAL DESTINATION.",
          "paragraph_name": "5180P-OBTAIN-MEXW003-30T",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1730-1766",
          "type": "Paragraph",
          "syntax": "5200P-OBTAIN-MEXW003-80F.\nMOVE VEH-ORD-ID-C                  TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C            TO VST-DTA-DATA-SRC-C\nMOVE PL-80F                        TO VST-STA-STATUS-C\nMOVE PL-Y                          TO VST-LAST-OCCUR-F\nVST-ACTIVE-F\nEXEC SQL\nSELECT  VST_STAT_Y\nINTO :VST-STAT-Y\nFROM  MEXW003_VEH_STATUS\nWHERE  VEH_ORD_ID_C      = :VST-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C    = :VST-DTA-DATA-SRC-C\nAND  STA_STATUS_C      = :VST-STA-STATUS-C\nAND  VST_LAST_OCCUR_F  = :VST-LAST-OCCUR-F\nAND  VST_ACTIVE_F      = :VST-ACTIVE-F\nEND-EXEC\nMOVE SQLCODE                       TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-FOUND-80F     TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-NOT-FOUND-80F TO TRUE\nWHEN OTHER\nMOVE SQLCODE              TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS    TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG        TO ABEND-MSG\nMOVE \"5200P\"              TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* AT THIS POINT, A CURSOR WILL BE CREATED USING TABLE MEXW003 TO\n* SELECT ALL 40V STATUS CODES.  THE ROW WHICH IS THE OLDEST\n* REPRESENTS THE ROW WITH THE ORIGINAL INVOICING DEALER.\n* AN ORDER BY VST_STAT_Y WILL BE USED TO ACCOMPLISH THIS.",
          "paragraph_name": "5200P-OBTAIN-MEXW003-80F",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1767-1791",
          "type": "Paragraph",
          "syntax": "5220P-OPEN-40V-CSR.\nMOVE VEH-ORD-ID-C                TO VST-VEH-ORD-ID-C\nMOVE VEH-DTA-DATA-SRC-C          TO VST-DTA-DATA-SRC-C\nMOVE PL-40V                      TO VST-STA-STATUS-C\nMOVE PL-D                        TO VST-STAT-TYP-C\nMOVE PL-Y                        TO VST-ACTIVE-F\nMOVE PL-WD                       TO VST-CUR-DATA-SRC-C\nEXEC SQL\nOPEN MEXW003_40V_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"OPEN\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS  TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5220P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* FETCHES A ROW FROM MEXW003_40V_CSR WHICH WILL RETRIEVE THE\n* ORIGINAL INVOICING DEALER.",
          "paragraph_name": "5220P-OPEN-40V-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1792-1816",
          "type": "Paragraph",
          "syntax": "5230P-FETCH-40V-ROW.\nEXEC SQL\nFETCH  MEXW003_40V_CSR\nINTO :VST-GBL-LOC-C\nEND-EXEC\nMOVE SQLCODE                           TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                        TO\nPV-NBR-ROWS-READ-MEXW003\nSET MEXW003-40V-CSR-ROW-FOUND TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW003-40V-CSR-ROW-NOT-FOUND\nTO TRUE\nWHEN OTHER\nMOVE SQLCODE                  TO DB2-ABEND-SQLCODE\nMOVE \"FETCH\"                  TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS        TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG            TO ABEND-MSG\nMOVE \"5230P\"                  TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* CLOSES THE MEXW003_40V_CSR WHICH WAS USED TO RETRIEVE THE ORIG-\n* INAL INVOICING DEALER.",
          "paragraph_name": "5230P-FETCH-40V-ROW",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1817-1837",
          "type": "Paragraph",
          "syntax": "5240P-CLOSE-40V-CSR.\nEXEC SQL\nCLOSE MEXW003_40V_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"CLOSE\"            TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-VEH-STATUS  TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5240P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* A CURSOR WILL BE CREATED USING TABLE MEXW031.  ALL NON 'NA' AND\n* NON 'EA' SOURCES WILL SELECT FROM IT.  THE RETRIEVED VALUES\n* WILL BE SENT IN PLACE OF THE LOCAL BODY STYLE CODE THAT WAS\n* OBTAINED FROM TABLE MEXW001_VEH_ORDER.",
          "paragraph_name": "5240P-CLOSE-40V-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1838-1860",
          "type": "Paragraph",
          "syntax": "5300P-OPEN-MEXW031-CSR.\nMOVE VEH-DTA-DATA-SRC-C          TO CTM-DTA-DATA-SRC-C\nMOVE VEH-CATALOG-C               TO CTM-LCL-CATALOG-C\nEXEC SQL\nOPEN MEXW031_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"OPEN\"             TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5300P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* FETCHES A ROW FROM MEXW031_CSR WHICH WILL RETRIEVE OPTION CODE\n* AND PRODUCT TYPE WHICH WILL BE COMBINED AND THEN USED TO POP-\n* ULATE THE WERS BODY STYLE CODE FOR NON 'NA' AND NON 'EA' DATA\n* SOURCES.",
          "paragraph_name": "5300P-OPEN-MEXW031-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1861-1884",
          "type": "Paragraph",
          "syntax": "5320P-FETCH-MEXW031-CSR.\nEXEC SQL\nFETCH  MEXW031_CSR\nINTO :CTM-OPT-OPTION-C\n,:CTM-VPT-PROD-TYP-C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nADD +1                  TO PV-NBR-ROWS-READ-MEXW031\nSET MEXW031-FOUND       TO TRUE\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET MEXW031-NOT-FOUND   TO TRUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"FETCH\"            TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5320P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* CLOSES CURSOR MEXW031_CSE WHICH RETRIEVED THE OPTION CODE AND\n* PRODUCT TYPE FOR NON 'NA' AND NON 'EA' DATA SOURCES.",
          "paragraph_name": "5320P-FETCH-MEXW031-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1885-1903",
          "type": "Paragraph",
          "syntax": "5340P-CLOSE-MEXW031-CSR.\nEXEC SQL\nCLOSE MEXW031_CSR\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"CLOSE\"            TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-CATMAP      TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"5340P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* THIS PARAGRAPH WILL WRITE ALL THE AUDIT INFORMATION OUT TO THE\n* AUDIT REPORT.",
          "paragraph_name": "5340P-CLOSE-MEXW031-CSR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1904-1964",
          "type": "Paragraph",
          "syntax": "6020P-WRITE-AUDIT-DETAIL.\nMOVE SPACES                          TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE ALL \"=\"                         TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE SPACES                          TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM SALE-CHK:\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-SALE-CHK       TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW003 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW003        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW004 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW004        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW007 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW007        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW008 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW008        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW027 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW027        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW031 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW031        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW032 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW032        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW033 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW033        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW034 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW034        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL ROWS READ FROM MEXW035 :\"  TO AUDIT-LABEL\nMOVE PV-NBR-ROWS-READ-MEXW035        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL SYSPARM RECORDS READ   :\"  TO AUDIT-LABEL\nMOVE PV-NBR-SYSPARM-RECS-READ        TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL SUBROUTINE SSTK CALLS  :\"  TO AUDIT-LABEL\nMOVE PV-NBR-EXWWSSTK-CALLS           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL SSTK CALLS WITH +100   :\"  TO AUDIT-LABEL\nMOVE PV-NBR-EXWWSSTK-NOTFOUND-CALLS  TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL MEXW027 ROWS NOT FOUND :\"  TO AUDIT-LABEL\nMOVE PV-NBR-MEXW027-NOTFOUND-CALLS   TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL MEXW035 ROWS NOT FOUND :\"  TO AUDIT-LABEL\nMOVE PV-NBR-MEXW035-NOTFOUND-CALLS   TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"TTL OUTPUT RECORDS WRITTEN :\"  TO AUDIT-LABEL\nMOVE PV-NBR-OUTPUT-RECS-WRTN         TO AUDIT-DATA\nWRITE AUDIT-RECORD\n.\n* OBTAINS THE CURRENT DEARBORN TIMESTAMP, THIS WILL BE USED TO\n* UPDATE MEXW016 FOR THE START TIME OF THE JOB.",
          "paragraph_name": "6020P-WRITE-AUDIT-DETAIL",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "1965-1982",
          "type": "Paragraph",
          "syntax": "7000P-OBTAIN-DRBN-TIMESTAMP.\nEXEC SQL\nSET  :PV-CURR-DRBN-TIMESTAMP  = CURRENT TIMESTAMP\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-GENERIC     TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"7000P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* SELECT THE PREVIOUS RUNS TIMESTAMP ON THE MEXS016 TABLE",
          "paragraph_name": "7000P-OBTAIN-DRBN-TIMESTAMP",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "1983-2012",
          "type": "Paragraph",
          "syntax": "7200P-SELECT-PRV-RUN-TIMESTAMP.\nMOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\nMOVE PL-TABLE-ID                 TO GNT-TABLE-ID\nMOVE PL-KEY-DATA-TIMESTAMP       TO GNT-KEY-DATA\nMOVE PL-Y                        TO GNT-SW-ACTIVE\nEXEC SQL\nSELECT GNT_ATTRIBUTE_DATA\nINTO  :GNT-ATTRIBUTE-DATA\nFROM   MEXS016_GENERIC2\nWHERE  GNT_SYSTEM_CD    = :GNT-SYSTEM-CD\nAND    GNT_TABLE_ID     = :GNT-TABLE-ID\nAND    GNT_KEY_DATA     = :GNT-KEY-DATA\nAND    GNT_SW_ACTIVE LIKE :GNT-SW-ACTIVE\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE \"MEXS016_GENERIC2\" TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"7200P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* UPDATE THE TIMESTAMP ON THE MEXS016 TABLE WITH THE TIME THAT\n* THE JOB STARTED.  THIS VALUE WILL BE READ IN THE NEXT TIME THIS\n* PROGRAM IS EXECUTED.",
          "paragraph_name": "7200P-SELECT-PRV-RUN-TIMESTAMP",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "2013-2035",
          "type": "Paragraph",
          "syntax": "7250P-UPDATE-TIMESTAMP.\nMOVE PL-SYSTEM-ID               TO GNT-SYSTEM-CD\nMOVE PL-TABLE-ID                TO GNT-TABLE-ID\nMOVE PL-KEY-DATA-TIMESTAMP      TO GNT-KEY-DATA\nMOVE PV-CURR-DRBN-TIMESTAMP     TO GNT-ATTRIBUTE-DATA\nEXEC SQL\nUPDATE MEXS016_GENERIC2\nSET    GNT_ATTRIBUTE_DATA = :GNT-ATTRIBUTE-DATA\nWHERE  GNT_SYSTEM_CD      = :GNT-SYSTEM-CD\nAND    GNT_TABLE_ID       = :GNT-TABLE-ID\nAND    GNT_KEY_DATA       = :GNT-KEY-DATA\nEND-EXEC\nMOVE SQLCODE                    TO SC-DB2-SQLCODE\nIF  NOT SC-DB2-SQLCODE-OK\nMOVE SQLCODE                TO DB2-ABEND-SQLCODE\nMOVE \"UPDATE\"               TO DB2-ABEND-FUNCTION\nMOVE \"MEXS016_GENERIC2\"     TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG          TO ABEND-MSG\nMOVE \"7250P\"                TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-IF\n.\n* SELECT THE PREVIOUS RUN'S OUTPUT FILE BATCH NUMBER.",
          "paragraph_name": "7250P-UPDATE-TIMESTAMP",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "2036-2063",
          "type": "Paragraph",
          "syntax": "7300P-GET-BATCH-NBR.\nMOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\nMOVE PL-TABLE-ID                 TO GNT-TABLE-ID\nMOVE PL-KEY-DATA-BATCHCTL        TO GNT-KEY-DATA\nMOVE PL-Y                        TO GNT-SW-ACTIVE\nEXEC SQL\nSELECT GNT_ATTRIBUTE_DATA\nINTO  :GNT-ATTRIBUTE-DATA\nFROM   MEXS016_GENERIC2\nWHERE  GNT_SYSTEM_CD    = :GNT-SYSTEM-CD\nAND    GNT_TABLE_ID     = :GNT-TABLE-ID\nAND    GNT_KEY_DATA     = :GNT-KEY-DATA\nAND    GNT_SW_ACTIVE LIKE :GNT-SW-ACTIVE\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nCONTINUE\nWHEN OTHER\nMOVE SQLCODE            TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"           TO DB2-ABEND-FUNCTION\nMOVE \"MEXS016_GENERIC2\" TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG      TO ABEND-MSG\nMOVE \"7300P\"            TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n* UPDATE THE OUTPUT FILE'S BATCH NUMBER BY +1.",
          "paragraph_name": "7300P-GET-BATCH-NBR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "2064-2086",
          "type": "Paragraph",
          "syntax": "7350P-UPDATE-BATCH-NBR.\nMOVE PL-SYSTEM-ID                TO GNT-SYSTEM-CD\nMOVE PL-TABLE-ID                 TO GNT-TABLE-ID\nMOVE PL-KEY-DATA-BATCHCTL        TO GNT-KEY-DATA\nMOVE PV-CURRENT-BATCH-NBR        TO GNT-ATTRIBUTE-DATA\nEXEC SQL\nUPDATE MEXS016_GENERIC2\nSET    GNT_ATTRIBUTE_DATA = :GNT-ATTRIBUTE-DATA\nWHERE  GNT_SYSTEM_CD      = :GNT-SYSTEM-CD\nAND    GNT_TABLE_ID       = :GNT-TABLE-ID\nAND    GNT_KEY_DATA       = :GNT-KEY-DATA\nEND-EXEC\nMOVE SQLCODE                    TO SC-DB2-SQLCODE\nIF  NOT SC-DB2-SQLCODE-OK\nMOVE SQLCODE                TO DB2-ABEND-SQLCODE\nMOVE \"UPDATE\"               TO DB2-ABEND-FUNCTION\nMOVE \"MEXS016_GENERIC2\"     TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG          TO ABEND-MSG\nMOVE \"7350P\"                TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-IF\n.\n* POPULATES THE HUB HEADER TO THE OUTPUT FILE.",
          "paragraph_name": "7350P-UPDATE-BATCH-NBR",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "2087-2100",
          "type": "Paragraph",
          "syntax": "7400P-POPULATE-HUB-HEADER.\nMOVE PL-LAYOUT-ID                TO HUB-HDR-LAYOUT-ID\nMOVE PL-ENTITY-CD                TO HUB-HDR-ENTITY-CODE\nMOVE PL-LAYOUT-ID                TO HUB-HDR-LAYOUT-ID\nMOVE PV-CURR-DRBN-TIMESTAMP      TO HUB-HDR-TIMESTAMP\nMOVE PV-CURRENT-BATCH-NBR        TO HUB-HDR-BATCH-NBR\nMOVE PL-PROCESS-ID               TO HUB-HDR-PROCESS-ID\nMOVE ZERO                        TO HUB-HDR-TOTAL-REC-CNT\nMOVE SPACES                      TO HUB-HDR-PRIMARY-CONTACT\nHUB-HDR-SECOND-CONTACT\nMOVE HUB-HEADER                  TO MKT-ASSOC-RECORD\nWRITE MKT-ASSOC-RECORD\n.\n* POPULATES THE HUB TRAILER IN THE OUTPUT FILE.",
          "paragraph_name": "7400P-POPULATE-HUB-HEADER",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2101-2113",
          "type": "Paragraph",
          "syntax": "7450P-POPULATE-HUB-TRAILER.\nMOVE PL-ENTITY-CD                TO HUB-TRL-ENTITY-CODE\nMOVE PL-LAYOUT-ID                TO HUB-TRL-LAYOUT-ID\nMOVE PV-CURR-DRBN-TIMESTAMP      TO HUB-TRL-TIMESTAMP\nMOVE PV-CURRENT-BATCH-NBR        TO HUB-TRL-BATCH-NBR\nMOVE PL-PROCESS-ID               TO HUB-TRL-PROCESS-ID\nMOVE PV-COUNT-DTL-NBR            TO HUB-TRL-TOTAL-REC-CNT\nMOVE SPACES                      TO HUB-TRL-PRIMARY-CONTACT\nHUB-TRL-SECOND-CONTACT\nMOVE HUB-TRAILER                 TO MKT-ASSOC-RECORD\nWRITE MKT-ASSOC-RECORD\n.\n* SELECTS WERS STRING FROM MEXW004_VEH_WERS_STRING DB2 TABLE",
          "paragraph_name": "7450P-POPULATE-HUB-TRAILER",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2114-2150",
          "type": "Paragraph",
          "syntax": "7600P-SELECT-WERS-DATA-W004.\nEXEC SQL\nSELECT  VWR_WERS_STRING_X\n,VWR_WERS_VL_C\n,VWR_WERS_PRD_TP_C\n,VWR_MAJ_FEAT_DFNED_F\nINTO :VWR-WERS-STRING-X\n,:VWR-WERS-VL-C\n,:VWR-WERS-PRD-TP-C\n,:VWR-MAJ-FEAT-DFNED-F\nFROM  MEXW004_VEH_WERS_STRING\nWHERE  VEH_ORD_ID_C     =  :VWR-VEH-ORD-ID-C\nAND  DTA_DATA_SRC_C   =  :VWR-DTA-DATA-SRC-C\nEND-EXEC\nMOVE SQLCODE                     TO SC-DB2-SQLCODE\nEVALUATE TRUE\nWHEN SC-DB2-SQLCODE-OK\nIF VWR-WERS-STRING-X-TEXT    > SPACES  AND\nVWR-MAJ-FEAT-DFNED-F      = PL-Y\nSET WERS-STRING-FOUND-SW  TO TRUE\nADD +1                    TO\nPV-NBR-ROWS-READ-MEXW004\nEND-IF\nWHEN SC-DB2-SQLCODE-NOT-FOUND\nSET WERS-STRING-NOT-FOUND-SW TO TRUE\nWHEN OTHER\nPERFORM 7620P-WRITE-MEXW004-AUDIT-RPT\nMOVE SC-DB2-SQLCODE          TO DB2-ABEND-SQLCODE\nMOVE \"SELECT\"                TO DB2-ABEND-FUNCTION\nMOVE PL-TBL-MEXW004          TO DB2-ABEND-TABLE\nMOVE DB2-ABEND-MSG           TO ABEND-MSG\nMOVE \"7600P\"                 TO ABEND-PARAGRAPH\nPERFORM 9999P-ABEND\nEND-EVALUATE\n.\n/*****************************************************************\n* WRITE AUDIT REPORT FOR MEXW004_VEH_WERS_STRING TABLE           *",
          "paragraph_name": "7600P-SELECT-WERS-DATA-W004",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "7620P-WRITE-MEXW004-AUDIT-RPT",
            "9999P-ABEND"
          ]
        },
        {
          "line": "2151-2162",
          "type": "Paragraph",
          "syntax": "7620P-WRITE-MEXW004-AUDIT-RPT.\nMOVE SPACES                     TO AUDIT-RECORD\nMOVE \" VWR-VEH-ORD-ID-C: \"      TO AUDIT-LABEL\nMOVE VWR-VEH-ORD-ID-C           TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE SPACES                     TO AUDIT-RECORD\nMOVE \" VWR-DTA-DATA-SRC-C: \"    TO AUDIT-LABEL\nMOVE VWR-DTA-DATA-SRC-C         TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE SPACES                     TO AUDIT-RECORD\n.\n* READS THE INPUT SYSPARM FILE TO OBTAIN THE PRODUCTION SOURCE.",
          "paragraph_name": "7620P-WRITE-MEXW004-AUDIT-RPT",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2163-2184",
          "type": "Paragraph",
          "syntax": "8000P-GET-SYSPARM-RECORD.\nREAD SYSPARM-FILE\nINTO WS-SYSPARM-DETAIL\nAT END SET END-OF-SYSPARM-FILE TO TRUE\nEND-READ\nEVALUATE TRUE\nWHEN END-OF-SYSPARM-FILE\nAND PV-NBR-SYSPARM-RECS-READ = ZERO\nMOVE \"MISSING SYSPARM\"  TO ABEND-MSG\nMOVE \"8000P\"            TO ABEND-MSG-2\nPERFORM 9999P-ABEND\nWHEN END-OF-SYSPARM-FILE\nCONTINUE\nWHEN OTHER\nADD +1                  TO PV-NBR-SYSPARM-RECS-READ\nEND-EVALUATE\n.\n* IF A CALL TO TABLE MEXW035 RESULTED IN A SQL +100 (NOT FOUND)\n* CONDITION, THE INFORMATION WILL BE WRITTEN OUT TO THE AUDIT\n* REPORT AND RETURN-CODE WILL BE SET TO 3, SO THAT AN EMAIL\n* MESSAGE WILL BE SENT TO THE GEVIS HELPDESK TO INFORM THEM TO\n* LOOK AT THE AUDIT REPORT.",
          "paragraph_name": "8000P-GET-SYSPARM-RECORD",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999P-ABEND"
          ]
        },
        {
          "line": "2185-2202",
          "type": "Paragraph",
          "syntax": "9000P-MISSING-MEXW035-ROW.\nMOVE SPACES                         TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"MISSING DEALER ON MEXW035:  \" TO AUDIT-LABEL\nWRITE AUDIT-RECORD\nMOVE \"DEALER CODE:         \"        TO AUDIT-LABEL\nMOVE DLR-DLR-DLR-C                  TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"ASSOCIATED VIN:      \"        TO AUDIT-LABEL\nMOVE VEH-VIN-FULL-C                 TO AUDIT-DATA\nWRITE AUDIT-RECORD\nADD +1 TO PV-NBR-MEXW035-NOTFOUND-CALLS\n.\n* IF A CALL TO TABLE MEXW027 RESULTED IN A SQL +100 (NOT FOUND)\n* CONDITION, THE INFORMATION WILL BE WRITTEN OUT TO THE AUDIT\n* REPORT AND RETURN-CODE WILL BE SET TO 3, SO THAT AN EMAIL\n* MESSAGE WILL BE SENT TO THE GEVIS HELPDESK TO INFORM THEM TO\n* LOOK AT THE AUDIT REPORT.",
          "paragraph_name": "9000P-MISSING-MEXW035-ROW",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2203-2219",
          "type": "Paragraph",
          "syntax": "9050P-MISSING-MEXW027-ROW.\nMOVE SPACES                         TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"MISSING STATUS ON MEXW027: \"  TO AUDIT-LABEL\nMOVE PL-SPACES                      TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"STATUS CODE:         \"        TO AUDIT-LABEL\nMOVE CNT-GBL-DATA-X                 TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"ASSOCIATED VIN:      \"        TO AUDIT-LABEL\nMOVE VEH-VIN-FULL-C                 TO AUDIT-DATA\nWRITE AUDIT-RECORD\nSET  SEND-EMAIL                     TO TRUE\nADD +1 TO PV-NBR-MEXW027-NOTFOUND-CALLS\n.\n/*****************************************************************\n* ACCEPT AND FORMAT THE CURRENT DATE AND TIME.                   *",
          "paragraph_name": "9050P-MISSING-MEXW027-ROW",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2220-2231",
          "type": "Paragraph",
          "syntax": "9100P-GET-CURRENT-DATE-TIME.\nACCEPT SV-CURRENT-DATE FROM DATE\nACCEPT SV-CURRENT-TIME FROM TIME\nMOVE SV-CURRENT-DATE-YY            TO SV-FORMAT-DATE-YY\nMOVE SV-CURRENT-DATE-MM            TO SV-FORMAT-DATE-MM\nMOVE SV-CURRENT-DATE-DD            TO SV-FORMAT-DATE-DD\nMOVE SV-CURRENT-TIME-HH            TO SV-FORMAT-TIME-HH\nMOVE SV-CURRENT-TIME-MM            TO SV-FORMAT-TIME-MM\nMOVE SV-CURRENT-TIME-SS            TO SV-FORMAT-TIME-SS\n.\n/*****************************************************************\n* WRITE AUDIT HEADER LINES                                       *",
          "paragraph_name": "9100P-GET-CURRENT-DATE-TIME",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2232-2249",
          "type": "Paragraph",
          "syntax": "9200P-WRITE-AUDIT-HEADER.\nMOVE PL-PGM-NAME                    TO AUDIT-RECORD\nMOVE \"AUDIT REPORT\"                 TO AUDIT-RECORD (10:)\nWRITE AUDIT-RECORD\nMOVE \"PROGRAM VERSION            :\" TO AUDIT-LABEL\nMOVE PAN-VALET                      TO AUDIT-DATA\nWRITE AUDIT-RECORD\nMOVE \"PROGRAM COMPILE DATE/TIME  :\" TO AUDIT-LABEL\nMOVE SV-COMPILE-DATE                TO AUDIT-DATA\nMOVE SV-COMPILE-TIME                TO AUDIT-DATA (10:)\nWRITE AUDIT-RECORD\nMOVE \"PROGRAM START   DATE/TIME  :\" TO AUDIT-LABEL\nMOVE SV-FORMAT-DATE                 TO AUDIT-DATA\nMOVE SV-FORMAT-TIME                 TO AUDIT-DATA (10:)\nWRITE AUDIT-RECORD\n.\n/*****************************************************************\n* WRITE AUDIT TRAILER LINES                                      *",
          "paragraph_name": "9200P-WRITE-AUDIT-HEADER",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2250-2262",
          "type": "Paragraph",
          "syntax": "9300P-WRITE-AUDIT-TRAILER.\nMOVE SPACES                         TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE \"PROGRAM STOP    DATE/TIME  :\" TO AUDIT-LABEL\nMOVE SV-FORMAT-DATE                 TO AUDIT-DATA\nMOVE SV-FORMAT-TIME                 TO AUDIT-DATA (10:)\nWRITE AUDIT-RECORD\nMOVE PL-PGM-NAME                    TO AUDIT-RECORD\nMOVE \"ENDED SUCCESSFULLY\"           TO AUDIT-RECORD (10:)\nWRITE AUDIT-RECORD\n.\n/*****************************************************************\n* WRITE ABEND MESSAGES TO AUDIT FILE, CALL COREDUMP.             *",
          "paragraph_name": "9300P-WRITE-AUDIT-TRAILER",
          "is_function_call_required": false,
          "is_file_call_required": false
        },
        {
          "line": "2263-2277",
          "type": "Paragraph",
          "syntax": "9999P-ABEND.\nIF  ABEND-PROGRAM                 = SPACES\nMOVE PL-PGM-NAME               TO ABEND-PROGRAM\nEND-IF\nMOVE SPACES                        TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE ABEND-MSG                     TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE ABEND-MSG-2                   TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nMOVE SPACES                        TO AUDIT-RECORD\nWRITE AUDIT-RECORD\nPERFORM 9999C-CALL-COREDUMP\n.\n* CALLS COREDUMP TO FORCE AN ABEND CAUSED BY AN ERROR.",
          "paragraph_name": "9999P-ABEND",
          "is_function_call_required": true,
          "is_file_call_required": false,
          "function_dependencies": [
            "9999C-CALL-COREDUMP"
          ]
        },
        {
          "line": "2278-2280",
          "type": "Paragraph",
          "syntax": "9999C-CALL-COREDUMP.\nCALL \"COREDUMP\"\n.",
          "paragraph_name": "9999C-CALL-COREDUMP",
          "is_function_call_required": false,
          "is_file_call_required": true,
          "file_dependencies": [
            {
              "line": "2279",
              "file_name": "COREDUMP"
            }
          ]
        }
      ]
    },
    "file_graph": {
      "program_name": "EXWWB911",
      "dependent_files": [
        {
          "program_name": "CPEWD032",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD008",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD031",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD004",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD007",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD027",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD001",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD021",
          "dependent_files": []
        },
        {
          "program_name": "CPESEBWS",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD034",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD033",
          "dependent_files": []
        },
        {
          "program_name": "CPESDB2",
          "dependent_files": []
        },
        {
          "program_name": "CPEWSSTK",
          "dependent_files": []
        },
        {
          "program_name": "CPEWHUB",
          "dependent_files": []
        },
        {
          "program_name": "CPESGNTB",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD003",
          "dependent_files": []
        },
        {
          "program_name": "CPESD016",
          "dependent_files": []
        },
        {
          "program_name": "COREDUMP",
          "dependent_files": []
        },
        {
          "program_name": "CPEWD035",
          "dependent_files": []
        },
        {
          "program_name": "CPEWGNTB",
          "dependent_files": []
        }
      ]
    },
    "function_graph": {
      "functional_dependencies": [
        {
          "paragraph_name": "0000P-MAINLINE",
          "function_graph": [
            {
              "paragraph_name": "2050P-VERIFY-WDMO-DEALER"
            },
            {
              "paragraph_name": "7000P-OBTAIN-DRBN-TIMESTAMP"
            },
            {
              "paragraph_name": "2100P-OPEN-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "9200P-WRITE-AUDIT-HEADER"
            },
            {
              "paragraph_name": "0700P-CONCLUDE-OTHER"
            },
            {
              "paragraph_name": "7450P-POPULATE-HUB-TRAILER"
            },
            {
              "paragraph_name": "7250P-UPDATE-TIMESTAMP"
            },
            {
              "paragraph_name": "7200P-SELECT-PRV-RUN-TIMESTAMP"
            },
            {
              "paragraph_name": "1000P-PROCESS"
            },
            {
              "paragraph_name": "5000P-PROCESS-GEVIS-DETAIL-REC"
            },
            {
              "paragraph_name": "2040P-PROCESS-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "7350P-UPDATE-BATCH-NBR"
            },
            {
              "paragraph_name": "0400P-INITIALIZE-OTHER"
            },
            {
              "paragraph_name": "7300P-GET-BATCH-NBR"
            },
            {
              "paragraph_name": "2140P-CLOSE-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "6020P-WRITE-AUDIT-DETAIL"
            },
            {
              "paragraph_name": "8000P-GET-SYSPARM-RECORD"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "2120P-FETCH-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "9300P-WRITE-AUDIT-TRAILER"
            },
            {
              "paragraph_name": "7400P-POPULATE-HUB-HEADER"
            },
            {
              "paragraph_name": "9100P-GET-CURRENT-DATE-TIME"
            }
          ]
        },
        {
          "paragraph_name": "0400P-INITIALIZE-OTHER",
          "function_graph": [
            {
              "paragraph_name": "8000P-GET-SYSPARM-RECORD"
            },
            {
              "paragraph_name": "7000P-OBTAIN-DRBN-TIMESTAMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9100P-GET-CURRENT-DATE-TIME"
            },
            {
              "paragraph_name": "9200P-WRITE-AUDIT-HEADER"
            },
            {
              "paragraph_name": "7300P-GET-BATCH-NBR"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "7400P-POPULATE-HUB-HEADER"
            },
            {
              "paragraph_name": "7200P-SELECT-PRV-RUN-TIMESTAMP"
            }
          ]
        },
        {
          "paragraph_name": "0700P-CONCLUDE-OTHER",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9300P-WRITE-AUDIT-TRAILER"
            },
            {
              "paragraph_name": "7350P-UPDATE-BATCH-NBR"
            },
            {
              "paragraph_name": "7450P-POPULATE-HUB-TRAILER"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "6020P-WRITE-AUDIT-DETAIL"
            },
            {
              "paragraph_name": "7250P-UPDATE-TIMESTAMP"
            },
            {
              "paragraph_name": "9100P-GET-CURRENT-DATE-TIME"
            }
          ]
        },
        {
          "paragraph_name": "1000P-PROCESS",
          "function_graph": [
            {
              "paragraph_name": "2050P-VERIFY-WDMO-DEALER"
            },
            {
              "paragraph_name": "5040P-MOVE-SSTK-CURRENT-TO-DTL"
            },
            {
              "paragraph_name": "5200P-OBTAIN-MEXW003-80F"
            },
            {
              "paragraph_name": "2100P-OPEN-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "5140P-OBTAIN-MEXW003-30R"
            },
            {
              "paragraph_name": "5230P-FETCH-40V-ROW"
            },
            {
              "paragraph_name": "5220P-OPEN-40V-CSR"
            },
            {
              "paragraph_name": "5180P-OBTAIN-MEXW003-30T"
            },
            {
              "paragraph_name": "5020P-MOVE-MEXW001-TO-DTL"
            },
            {
              "paragraph_name": "5080P-OBTAIN-WHOLESALE-DATA"
            },
            {
              "paragraph_name": "5120P-OBTAIN-MEXW003-20T"
            },
            {
              "paragraph_name": "2060P-CALL-EXWWSSTK"
            },
            {
              "paragraph_name": "5000P-PROCESS-GEVIS-DETAIL-REC"
            },
            {
              "paragraph_name": "2040P-PROCESS-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "5240P-CLOSE-40V-CSR"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "2140P-CLOSE-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "5060P-OBTAIN-RETAIL-DATA"
            },
            {
              "paragraph_name": "8000P-GET-SYSPARM-RECORD"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "2120P-FETCH-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "5100P-OBTAIN-WERS-DATA"
            },
            {
              "paragraph_name": "5160P-OBTAIN-MEXW003-30P"
            },
            {
              "paragraph_name": "7600P-SELECT-WERS-DATA-W004"
            }
          ]
        },
        {
          "paragraph_name": "2040P-PROCESS-SALE-CHK-CSR",
          "function_graph": [
            {
              "paragraph_name": "2050P-VERIFY-WDMO-DEALER"
            },
            {
              "paragraph_name": "5040P-MOVE-SSTK-CURRENT-TO-DTL"
            },
            {
              "paragraph_name": "5200P-OBTAIN-MEXW003-80F"
            },
            {
              "paragraph_name": "5112P-SELECT-MEXW032-WERS-VL"
            },
            {
              "paragraph_name": "5140P-OBTAIN-MEXW003-30R"
            },
            {
              "paragraph_name": "5045P-SELECT-MEXW027-DATA"
            },
            {
              "paragraph_name": "5230P-FETCH-40V-ROW"
            },
            {
              "paragraph_name": "5220P-OPEN-40V-CSR"
            },
            {
              "paragraph_name": "5180P-OBTAIN-MEXW003-30T"
            },
            {
              "paragraph_name": "5020P-MOVE-MEXW001-TO-DTL"
            },
            {
              "paragraph_name": "5080P-OBTAIN-WHOLESALE-DATA"
            },
            {
              "paragraph_name": "5340P-CLOSE-MEXW031-CSR"
            },
            {
              "paragraph_name": "5102P-WERS-STRING-PROCESS"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "5300P-OPEN-MEXW031-CSR"
            },
            {
              "paragraph_name": "5065P-SELECT-MEXW008-90V-DATA"
            },
            {
              "paragraph_name": "5320P-FETCH-MEXW031-CSR"
            },
            {
              "paragraph_name": "5120P-OBTAIN-MEXW003-20T"
            },
            {
              "paragraph_name": "9050P-MISSING-MEXW027-ROW"
            },
            {
              "paragraph_name": "2060P-CALL-EXWWSSTK"
            },
            {
              "paragraph_name": "5085P-SELECT-MEXW003-40V"
            },
            {
              "paragraph_name": "5000P-PROCESS-GEVIS-DETAIL-REC"
            },
            {
              "paragraph_name": "2070P-SSTK-FATAL-ERROR"
            },
            {
              "paragraph_name": "7620P-WRITE-MEXW004-AUDIT-RPT"
            },
            {
              "paragraph_name": "5110P-SELECT-W034-DATA"
            },
            {
              "paragraph_name": "5240P-CLOSE-40V-CSR"
            },
            {
              "paragraph_name": "5115P-SELECT-MEXW033-DATA"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "5060P-OBTAIN-RETAIL-DATA"
            },
            {
              "paragraph_name": "5104P-CATALOG-CODE-PROCESS"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "2120P-FETCH-SALE-CHK-CSR"
            },
            {
              "paragraph_name": "5100P-OBTAIN-WERS-DATA"
            },
            {
              "paragraph_name": "5160P-OBTAIN-MEXW003-30P"
            },
            {
              "paragraph_name": "7600P-SELECT-WERS-DATA-W004"
            },
            {
              "paragraph_name": "5070P-POPULATE-RETAIL-OUTPUT"
            }
          ]
        },
        {
          "paragraph_name": "2050P-VERIFY-WDMO-DEALER",
          "function_graph": [
            {
              "paragraph_name": "2070P-SSTK-FATAL-ERROR"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "2060P-CALL-EXWWSSTK"
            }
          ]
        },
        {
          "paragraph_name": "2060P-CALL-EXWWSSTK",
          "function_graph": [
            {
              "paragraph_name": "2070P-SSTK-FATAL-ERROR"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "2070P-SSTK-FATAL-ERROR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "2100P-OPEN-SALE-CHK-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "2120P-FETCH-SALE-CHK-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "2140P-CLOSE-SALE-CHK-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5000P-PROCESS-GEVIS-DETAIL-REC",
          "function_graph": [
            {
              "paragraph_name": "5040P-MOVE-SSTK-CURRENT-TO-DTL"
            },
            {
              "paragraph_name": "5200P-OBTAIN-MEXW003-80F"
            },
            {
              "paragraph_name": "5112P-SELECT-MEXW032-WERS-VL"
            },
            {
              "paragraph_name": "5140P-OBTAIN-MEXW003-30R"
            },
            {
              "paragraph_name": "5045P-SELECT-MEXW027-DATA"
            },
            {
              "paragraph_name": "5230P-FETCH-40V-ROW"
            },
            {
              "paragraph_name": "5220P-OPEN-40V-CSR"
            },
            {
              "paragraph_name": "5180P-OBTAIN-MEXW003-30T"
            },
            {
              "paragraph_name": "5020P-MOVE-MEXW001-TO-DTL"
            },
            {
              "paragraph_name": "5080P-OBTAIN-WHOLESALE-DATA"
            },
            {
              "paragraph_name": "5340P-CLOSE-MEXW031-CSR"
            },
            {
              "paragraph_name": "5102P-WERS-STRING-PROCESS"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "5300P-OPEN-MEXW031-CSR"
            },
            {
              "paragraph_name": "5065P-SELECT-MEXW008-90V-DATA"
            },
            {
              "paragraph_name": "5320P-FETCH-MEXW031-CSR"
            },
            {
              "paragraph_name": "5114P-SELECT-MEXW034-GEVIS-VL"
            },
            {
              "paragraph_name": "5120P-OBTAIN-MEXW003-20T"
            },
            {
              "paragraph_name": "9050P-MISSING-MEXW027-ROW"
            },
            {
              "paragraph_name": "5085P-SELECT-MEXW003-40V"
            },
            {
              "paragraph_name": "5075P-POPULATE-CONCEPS-SLSTYP"
            },
            {
              "paragraph_name": "7620P-WRITE-MEXW004-AUDIT-RPT"
            },
            {
              "paragraph_name": "5110P-SELECT-W034-DATA"
            },
            {
              "paragraph_name": "5240P-CLOSE-40V-CSR"
            },
            {
              "paragraph_name": "5115P-SELECT-MEXW033-DATA"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "5060P-OBTAIN-RETAIL-DATA"
            },
            {
              "paragraph_name": "5104P-CATALOG-CODE-PROCESS"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "5100P-OBTAIN-WERS-DATA"
            },
            {
              "paragraph_name": "5160P-OBTAIN-MEXW003-30P"
            },
            {
              "paragraph_name": "7600P-SELECT-WERS-DATA-W004"
            },
            {
              "paragraph_name": "5070P-POPULATE-RETAIL-OUTPUT"
            }
          ]
        },
        {
          "paragraph_name": "5020P-MOVE-MEXW001-TO-DTL",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "5300P-OPEN-MEXW031-CSR"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "5320P-FETCH-MEXW031-CSR"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "5340P-CLOSE-MEXW031-CSR"
            }
          ]
        },
        {
          "paragraph_name": "5040P-MOVE-SSTK-CURRENT-TO-DTL",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "5045P-SELECT-MEXW027-DATA"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "5050P-GET-MEXW035-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9050P-MISSING-MEXW027-ROW"
            }
          ]
        },
        {
          "paragraph_name": "5045P-SELECT-MEXW027-DATA",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5050P-GET-MEXW035-DATA",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9000P-MISSING-MEXW035-ROW"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5060P-OBTAIN-RETAIL-DATA",
          "function_graph": [
            {
              "paragraph_name": "5075P-POPULATE-CONCEPS-SLSTYP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "5065P-SELECT-MEXW008-90V-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "5070P-POPULATE-RETAIL-OUTPUT"
            }
          ]
        },
        {
          "paragraph_name": "5065P-SELECT-MEXW008-90V-DATA",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "5070P-POPULATE-RETAIL-OUTPUT",
          "function_graph": [
            {
              "paragraph_name": "5075P-POPULATE-CONCEPS-SLSTYP"
            }
          ]
        },
        {
          "paragraph_name": "5075P-POPULATE-CONCEPS-SLSTYP",
          "function_graph": []
        },
        {
          "paragraph_name": "5080P-OBTAIN-WHOLESALE-DATA",
          "function_graph": [
            {
              "paragraph_name": "5085P-SELECT-MEXW003-40V"
            }
          ]
        },
        {
          "paragraph_name": "5085P-SELECT-MEXW003-40V",
          "function_graph": []
        },
        {
          "paragraph_name": "5100P-OBTAIN-WERS-DATA",
          "function_graph": [
            {
              "paragraph_name": "5104P-CATALOG-CODE-PROCESS"
            },
            {
              "paragraph_name": "5102P-WERS-STRING-PROCESS"
            },
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "5112P-SELECT-MEXW032-WERS-VL"
            },
            {
              "paragraph_name": "5110P-SELECT-W034-DATA"
            },
            {
              "paragraph_name": "5115P-SELECT-MEXW033-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "5114P-SELECT-MEXW034-GEVIS-VL"
            }
          ]
        },
        {
          "paragraph_name": "5102P-WERS-STRING-PROCESS",
          "function_graph": [
            {
              "paragraph_name": "5110P-SELECT-W034-DATA"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5104P-CATALOG-CODE-PROCESS",
          "function_graph": [
            {
              "paragraph_name": "5114P-SELECT-MEXW034-GEVIS-VL"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5110P-SELECT-W034-DATA",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5112P-SELECT-MEXW032-WERS-VL",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5114P-SELECT-MEXW034-GEVIS-VL",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5115P-SELECT-MEXW033-DATA",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5120P-OBTAIN-MEXW003-20T",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5140P-OBTAIN-MEXW003-30R",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5160P-OBTAIN-MEXW003-30P",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "5180P-OBTAIN-MEXW003-30T",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5200P-OBTAIN-MEXW003-80F",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5220P-OPEN-40V-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5230P-FETCH-40V-ROW",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5240P-CLOSE-40V-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5300P-OPEN-MEXW031-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "5320P-FETCH-MEXW031-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "5340P-CLOSE-MEXW031-CSR",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "6020P-WRITE-AUDIT-DETAIL",
          "function_graph": []
        },
        {
          "paragraph_name": "7000P-OBTAIN-DRBN-TIMESTAMP",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "7200P-SELECT-PRV-RUN-TIMESTAMP",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "7250P-UPDATE-TIMESTAMP",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "7300P-GET-BATCH-NBR",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "7350P-UPDATE-BATCH-NBR",
          "function_graph": [
            {
              "paragraph_name": "9999P-ABEND"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "7400P-POPULATE-HUB-HEADER",
          "function_graph": []
        },
        {
          "paragraph_name": "7450P-POPULATE-HUB-TRAILER",
          "function_graph": []
        },
        {
          "paragraph_name": "7600P-SELECT-WERS-DATA-W004",
          "function_graph": [
            {
              "paragraph_name": "7620P-WRITE-MEXW004-AUDIT-RPT"
            },
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "7620P-WRITE-MEXW004-AUDIT-RPT",
          "function_graph": []
        },
        {
          "paragraph_name": "8000P-GET-SYSPARM-RECORD",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            },
            {
              "paragraph_name": "9999P-ABEND"
            }
          ]
        },
        {
          "paragraph_name": "9000P-MISSING-MEXW035-ROW",
          "function_graph": []
        },
        {
          "paragraph_name": "9050P-MISSING-MEXW027-ROW",
          "function_graph": []
        },
        {
          "paragraph_name": "9100P-GET-CURRENT-DATE-TIME",
          "function_graph": []
        },
        {
          "paragraph_name": "9200P-WRITE-AUDIT-HEADER",
          "function_graph": []
        },
        {
          "paragraph_name": "9300P-WRITE-AUDIT-TRAILER",
          "function_graph": []
        },
        {
          "paragraph_name": "9999P-ABEND",
          "function_graph": [
            {
              "paragraph_name": "9999C-CALL-COREDUMP"
            }
          ]
        },
        {
          "paragraph_name": "9999C-CALL-COREDUMP",
          "function_graph": []
        }
      ]
    },
    "gcs_locations": {
      "formatted_input": null,
      "structured_code": null,
      "file_graph": null,
      "function_graph": null
    }
  }